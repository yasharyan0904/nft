{"abi":[{"type":"function","name":"accesses","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[{"name":"readSlots","type":"bytes32[]","internalType":"bytes32[]"},{"name":"writeSlots","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"activeFork","inputs":[],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"addr","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"allowCheatcodes","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assume","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"blobBaseFee","inputs":[{"name":"newBlobBaseFee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"blobhashes","inputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"chainId","inputs":[{"name":"newChainId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"clearMockedCalls","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"closeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"coinbase","inputs":[{"name":"newCoinbase","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreateAddress","inputs":[{"name":"deployer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"copyFile","inputs":[{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"copied","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"createDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"deal","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newBalance","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshot","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshots","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"difficulty","inputs":[{"name":"newDifficulty","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"dumpState","inputs":[{"name":"pathToStateJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ensNamehash","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envExists","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool","internalType":"bool"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"address","internalType":"address"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256","internalType":"int256"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"etch","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"newRuntimeBytecode","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"eth_getLogs","inputs":[{"name":"fromBlock","type":"uint256","internalType":"uint256"},{"name":"toBlock","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.EthGetLogs[]","components":[{"name":"emitter","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"transactionHash","type":"bytes32","internalType":"bytes32"},{"name":"transactionIndex","type":"uint64","internalType":"uint64"},{"name":"logIndex","type":"uint256","internalType":"uint256"},{"name":"removed","type":"bool","internalType":"bool"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"exists","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemory","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemoryCall","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"fee","inputs":[{"name":"newBasefee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ffi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"fsMetadata","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"metadata","type":"tuple","internalType":"struct VmSafe.FsMetadata","components":[{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"},{"name":"length","type":"uint256","internalType":"uint256"},{"name":"readOnly","type":"bool","internalType":"bool"},{"name":"modified","type":"uint256","internalType":"uint256"},{"name":"accessed","type":"uint256","internalType":"uint256"},{"name":"created","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getBlobBaseFee","inputs":[],"outputs":[{"name":"blobBaseFee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlobhashes","inputs":[],"outputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"getBlockNumber","inputs":[],"outputs":[{"name":"height","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"creationBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployedCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"runtimeBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getLabel","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"currentLabel","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getMappingKeyAndParentOf","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"elementSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"found","type":"bool","internalType":"bool"},{"name":"key","type":"bytes32","internalType":"bytes32"},{"name":"parent","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingLength","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"length","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingSlotAt","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"},{"name":"idx","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getNonce","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"getRecordedLogs","inputs":[],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.Log[]","components":[{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"emitter","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"indexOf","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"isContext","inputs":[{"name":"context","type":"uint8","internalType":"enum VmSafe.ForgeContext"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isPersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"persistent","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExists","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"label","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newLabel","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"lastCallGas","inputs":[],"outputs":[{"name":"gas","type":"tuple","internalType":"struct VmSafe.Gas","components":[{"name":"gasLimit","type":"uint64","internalType":"uint64"},{"name":"gasTotalUsed","type":"uint64","internalType":"uint64"},{"name":"gasMemoryUsed","type":"uint64","internalType":"uint64"},{"name":"gasRefunded","type":"int64","internalType":"int64"},{"name":"gasRemaining","type":"uint64","internalType":"uint64"}]}],"stateMutability":"view"},{"type":"function","name":"load","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"data","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"loadAllocs","inputs":[{"name":"pathToAllocsJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"},{"name":"account2","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"parseAddress","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseBool","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes32","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseInt","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddress","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddressArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBool","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBoolArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32Array","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytesArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonInt","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonIntArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonKeys","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonString","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonStringArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUint","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUintArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddress","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddressArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBool","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBoolArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32Array","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytesArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlInt","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlIntArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlKeys","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlString","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlStringArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUint","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUintArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseUint","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"pauseGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"projectRoot","inputs":[],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"prompt","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptAddress","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecret","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"readCallers","inputs":[],"outputs":[{"name":"callerMode","type":"uint8","internalType":"enum VmSafe.CallerMode"},{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"},{"name":"followLinks","type":"bool","internalType":"bool"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"readLine","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"line","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readLink","inputs":[{"name":"linkPath","type":"string","internalType":"string"}],"outputs":[{"name":"targetPath","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"record","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recordLogs","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKey","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"replace","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"resetNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revertTo","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToAndDelete","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"roll","inputs":[{"name":"newHeight","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpcUrl","inputs":[{"name":"rpcAlias","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"rpcUrlStructs","inputs":[],"outputs":[{"name":"urls","type":"tuple[]","internalType":"struct VmSafe.Rpc[]","components":[{"name":"key","type":"string","internalType":"string"},{"name":"url","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"rpcUrls","inputs":[],"outputs":[{"name":"urls","type":"string[2][]","internalType":"string[2][]"}],"stateMutability":"view"},{"type":"function","name":"selectFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJson","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUintToHex","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"setEnv","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonce","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonceUnsafe","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sleep","inputs":[{"name":"duration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"snapshot","inputs":[],"outputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"split","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"delimiter","type":"string","internalType":"string"}],"outputs":[{"name":"outputs","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"startBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startStateDiffRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnStateDiff","inputs":[],"outputs":[{"name":"accountAccesses","type":"tuple[]","internalType":"struct VmSafe.AccountAccess[]","components":[{"name":"chainInfo","type":"tuple","internalType":"struct VmSafe.ChainInfo","components":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"chainId","type":"uint256","internalType":"uint256"}]},{"name":"kind","type":"uint8","internalType":"enum VmSafe.AccountAccessKind"},{"name":"account","type":"address","internalType":"address"},{"name":"accessor","type":"address","internalType":"address"},{"name":"initialized","type":"bool","internalType":"bool"},{"name":"oldBalance","type":"uint256","internalType":"uint256"},{"name":"newBalance","type":"uint256","internalType":"uint256"},{"name":"deployedCode","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"reverted","type":"bool","internalType":"bool"},{"name":"storageAccesses","type":"tuple[]","internalType":"struct VmSafe.StorageAccess[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"isWrite","type":"bool","internalType":"bool"},{"name":"previousValue","type":"bytes32","internalType":"bytes32"},{"name":"newValue","type":"bytes32","internalType":"bytes32"},{"name":"reverted","type":"bool","internalType":"bool"}]},{"name":"depth","type":"uint64","internalType":"uint64"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopExpectSafeMemory","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopPrank","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"store","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toLowercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toUppercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"transact","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transact","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"trim","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"tryFfi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"tuple","internalType":"struct VmSafe.FfiResult","components":[{"name":"exitCode","type":"int32","internalType":"int32"},{"name":"stdout","type":"bytes","internalType":"bytes"},{"name":"stderr","type":"bytes","internalType":"bytes"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"txGasPrice","inputs":[{"name":"newGasPrice","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unixTime","inputs":[],"outputs":[{"name":"milliseconds","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"warp","inputs":[{"name":"newTimestamp","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFile","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeLine","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accesses(address)":"65bc9481","activeFork()":"2f103f22","addr(uint256)":"ffa18649","allowCheatcodes(address)":"ea060291","assertApproxEqAbs(int256,int256,uint256)":"240f839d","assertApproxEqAbs(int256,int256,uint256,string)":"8289e621","assertApproxEqAbs(uint256,uint256,uint256)":"16d207c6","assertApproxEqAbs(uint256,uint256,uint256,string)":"f710b062","assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":"3d5bc8bc","assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":"6a5066d4","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":"045c55ce","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":"60429eb2","assertApproxEqRel(int256,int256,uint256)":"fea2d14f","assertApproxEqRel(int256,int256,uint256,string)":"ef277d72","assertApproxEqRel(uint256,uint256,uint256)":"8cf25ef4","assertApproxEqRel(uint256,uint256,uint256,string)":"1ecb7d33","assertApproxEqRelDecimal(int256,int256,uint256,uint256)":"abbf21cc","assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":"fccc11c4","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":"21ed2977","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":"82d6c8fd","assertEq(address,address)":"515361f6","assertEq(address,address,string)":"2f2769d1","assertEq(address[],address[])":"3868ac34","assertEq(address[],address[],string)":"3e9173c5","assertEq(bool,bool)":"f7fe3477","assertEq(bool,bool,string)":"4db19e7e","assertEq(bool[],bool[])":"707df785","assertEq(bool[],bool[],string)":"e48a8f8d","assertEq(bytes,bytes)":"97624631","assertEq(bytes,bytes,string)":"e24fed00","assertEq(bytes32,bytes32)":"7c84c69b","assertEq(bytes32,bytes32,string)":"c1fa1ed0","assertEq(bytes32[],bytes32[])":"0cc9ee84","assertEq(bytes32[],bytes32[],string)":"e03e9177","assertEq(bytes[],bytes[])":"e5fb9b4a","assertEq(bytes[],bytes[],string)":"f413f0b6","assertEq(int256,int256)":"fe74f05b","assertEq(int256,int256,string)":"714a2f13","assertEq(int256[],int256[])":"711043ac","assertEq(int256[],int256[],string)":"191f1b30","assertEq(string,string)":"f320d963","assertEq(string,string,string)":"36f656d8","assertEq(string[],string[])":"cf1c049c","assertEq(string[],string[],string)":"eff6b27d","assertEq(uint256,uint256)":"98296c54","assertEq(uint256,uint256,string)":"88b44c85","assertEq(uint256[],uint256[])":"975d5a12","assertEq(uint256[],uint256[],string)":"5d18c73a","assertEqDecimal(int256,int256,uint256)":"48016c04","assertEqDecimal(int256,int256,uint256,string)":"7e77b0c5","assertEqDecimal(uint256,uint256,uint256)":"27af7d9c","assertEqDecimal(uint256,uint256,uint256,string)":"d0cbbdef","assertFalse(bool)":"a5982885","assertFalse(bool,string)":"7ba04809","assertGe(int256,int256)":"0a30b771","assertGe(int256,int256,string)":"a84328dd","assertGe(uint256,uint256)":"a8d4d1d9","assertGe(uint256,uint256,string)":"e25242c0","assertGeDecimal(int256,int256,uint256)":"dc28c0f1","assertGeDecimal(int256,int256,uint256,string)":"5df93c9b","assertGeDecimal(uint256,uint256,uint256)":"3d1fe08a","assertGeDecimal(uint256,uint256,uint256,string)":"8bff9133","assertGt(int256,int256)":"5a362d45","assertGt(int256,int256,string)":"f8d33b9b","assertGt(uint256,uint256)":"db07fcd2","assertGt(uint256,uint256,string)":"d9a3c4d2","assertGtDecimal(int256,int256,uint256)":"78611f0e","assertGtDecimal(int256,int256,uint256,string)":"04a5c7ab","assertGtDecimal(uint256,uint256,uint256)":"eccd2437","assertGtDecimal(uint256,uint256,uint256,string)":"64949a8d","assertLe(int256,int256)":"95fd154e","assertLe(int256,int256,string)":"4dfe692c","assertLe(uint256,uint256)":"8466f415","assertLe(uint256,uint256,string)":"d17d4b0d","assertLeDecimal(int256,int256,uint256)":"11d1364a","assertLeDecimal(int256,int256,uint256,string)":"aa5cf788","assertLeDecimal(uint256,uint256,uint256)":"c304aab7","assertLeDecimal(uint256,uint256,uint256,string)":"7fefbbe0","assertLt(int256,int256)":"3e914080","assertLt(int256,int256,string)":"9ff531e3","assertLt(uint256,uint256)":"b12fc005","assertLt(uint256,uint256,string)":"65d5c135","assertLtDecimal(int256,int256,uint256)":"dbe8d88b","assertLtDecimal(int256,int256,uint256,string)":"40f0b4e0","assertLtDecimal(uint256,uint256,uint256)":"2077337e","assertLtDecimal(uint256,uint256,uint256,string)":"a972d037","assertNotEq(address,address)":"b12e1694","assertNotEq(address,address,string)":"8775a591","assertNotEq(address[],address[])":"46d0b252","assertNotEq(address[],address[],string)":"72c7e0b5","assertNotEq(bool,bool)":"236e4d66","assertNotEq(bool,bool,string)":"1091a261","assertNotEq(bool[],bool[])":"286fafea","assertNotEq(bool[],bool[],string)":"62c6f9fb","assertNotEq(bytes,bytes)":"3cf78e28","assertNotEq(bytes,bytes,string)":"9507540e","assertNotEq(bytes32,bytes32)":"898e83fc","assertNotEq(bytes32,bytes32,string)":"b2332f51","assertNotEq(bytes32[],bytes32[])":"0603ea68","assertNotEq(bytes32[],bytes32[],string)":"b873634c","assertNotEq(bytes[],bytes[])":"edecd035","assertNotEq(bytes[],bytes[],string)":"1dcd1f68","assertNotEq(int256,int256)":"f4c004e3","assertNotEq(int256,int256,string)":"4724c5b9","assertNotEq(int256[],int256[])":"0b72f4ef","assertNotEq(int256[],int256[],string)":"d3977322","assertNotEq(string,string)":"6a8237b3","assertNotEq(string,string,string)":"78bdcea7","assertNotEq(string[],string[])":"bdfacbe8","assertNotEq(string[],string[],string)":"b67187f3","assertNotEq(uint256,uint256)":"b7909320","assertNotEq(uint256,uint256,string)":"98f9bdbd","assertNotEq(uint256[],uint256[])":"56f29cba","assertNotEq(uint256[],uint256[],string)":"9a7fbd8f","assertNotEqDecimal(int256,int256,uint256)":"14e75680","assertNotEqDecimal(int256,int256,uint256,string)":"33949f0b","assertNotEqDecimal(uint256,uint256,uint256)":"669efca7","assertNotEqDecimal(uint256,uint256,uint256,string)":"f5a55558","assertTrue(bool)":"0c9fd581","assertTrue(bool,string)":"a34edc03","assume(bool)":"4c63e562","blobBaseFee(uint256)":"6d315d7e","blobhashes(bytes32[])":"129de7eb","breakpoint(string)":"f0259e92","breakpoint(string,bool)":"f7d39a8d","broadcast()":"afc98040","broadcast(address)":"e6962cdb","broadcast(uint256)":"f67a965b","chainId(uint256)":"4049ddd2","clearMockedCalls()":"3fdf4e15","closeFile(string)":"48c3241f","coinbase(address)":"ff483c54","computeCreate2Address(bytes32,bytes32)":"890c283b","computeCreate2Address(bytes32,bytes32,address)":"d323826a","computeCreateAddress(address,uint256)":"74637a7a","copyFile(string,string)":"a54a87d8","createDir(string,bool)":"168b64d3","createFork(string)":"31ba3498","createFork(string,bytes32)":"7ca29682","createFork(string,uint256)":"6ba3ba2b","createSelectFork(string)":"98680034","createSelectFork(string,bytes32)":"84d52b7a","createSelectFork(string,uint256)":"71ee464d","createWallet(string)":"7404f1d2","createWallet(uint256)":"7a675bb6","createWallet(uint256,string)":"ed7c5462","deal(address,uint256)":"c88a5e6d","deleteSnapshot(uint256)":"a6368557","deleteSnapshots()":"421ae469","deriveKey(string,string,uint32)":"6bcb2c1b","deriveKey(string,string,uint32,string)":"29233b1f","deriveKey(string,uint32)":"6229498b","deriveKey(string,uint32,string)":"32c8176d","difficulty(uint256)":"46cc92d9","dumpState(string)":"709ecd3f","ensNamehash(string)":"8c374c65","envAddress(string)":"350d56bf","envAddress(string,string)":"ad31b9fa","envBool(string)":"7ed1ec7d","envBool(string,string)":"aaaddeaf","envBytes(string)":"4d7baf06","envBytes(string,string)":"ddc2651b","envBytes32(string)":"97949042","envBytes32(string,string)":"5af231c1","envExists(string)":"ce8365f9","envInt(string)":"892a0c61","envInt(string,string)":"42181150","envOr(string,address)":"561fe540","envOr(string,bool)":"4777f3cf","envOr(string,bytes)":"b3e47705","envOr(string,bytes32)":"b4a85892","envOr(string,int256)":"bbcb713e","envOr(string,string)":"d145736c","envOr(string,string,address[])":"c74e9deb","envOr(string,string,bool[])":"eb85e83b","envOr(string,string,bytes32[])":"2281f367","envOr(string,string,bytes[])":"64bc3e64","envOr(string,string,int256[])":"4700d74b","envOr(string,string,string[])":"859216bc","envOr(string,string,uint256[])":"74318528","envOr(string,uint256)":"5e97348f","envString(string)":"f877cb19","envString(string,string)":"14b02bc9","envUint(string)":"c1978d1f","envUint(string,string)":"f3dec099","etch(address,bytes)":"b4d6c782","eth_getLogs(uint256,uint256,address,bytes32[])":"35e1349b","exists(string)":"261a323e","expectCall(address,bytes)":"bd6af434","expectCall(address,bytes,uint64)":"c1adbbff","expectCall(address,uint256,bytes)":"f30c7ba3","expectCall(address,uint256,bytes,uint64)":"a2b1a1ae","expectCall(address,uint256,uint64,bytes)":"23361207","expectCall(address,uint256,uint64,bytes,uint64)":"65b7b7cc","expectCallMinGas(address,uint256,uint64,bytes)":"08e4e116","expectCallMinGas(address,uint256,uint64,bytes,uint64)":"e13a1834","expectEmit()":"440ed10d","expectEmit(address)":"86b9620d","expectEmit(bool,bool,bool,bool)":"491cc7c2","expectEmit(bool,bool,bool,bool,address)":"81bad6f3","expectRevert()":"f4844814","expectRevert(bytes)":"f28dceb3","expectRevert(bytes4)":"c31eb0e0","expectSafeMemory(uint64,uint64)":"6d016688","expectSafeMemoryCall(uint64,uint64)":"05838bf4","fee(uint256)":"39b37ab0","ffi(string[])":"89160467","fsMetadata(string)":"af368a08","getBlobBaseFee()":"1f6d6ef7","getBlobhashes()":"f56ff18b","getBlockNumber()":"42cbb15c","getBlockTimestamp()":"796b89b9","getCode(string)":"8d1cc925","getDeployedCode(string)":"3ebf73b4","getLabel(address)":"28a249b0","getMappingKeyAndParentOf(address,bytes32)":"876e24e6","getMappingLength(address,bytes32)":"2f2fd63f","getMappingSlotAt(address,bytes32,uint256)":"ebc73ab4","getNonce((address,uint256,uint256,uint256))":"a5748aad","getNonce(address)":"2d0335ab","getRecordedLogs()":"191553a4","indexOf(string,string)":"8a0807b7","isContext(uint8)":"64af255d","isDir(string)":"7d15d019","isFile(string)":"e0eb04d4","isPersistent(address)":"d92d8efd","keyExists(string,string)":"528a683c","keyExistsJson(string,string)":"db4235f6","keyExistsToml(string,string)":"600903ad","label(address,string)":"c657c718","lastCallGas()":"2b589b28","load(address,bytes32)":"667f9d70","loadAllocs(string)":"b3a056d7","makePersistent(address)":"57e22dde","makePersistent(address,address)":"4074e0a8","makePersistent(address,address,address)":"efb77a75","makePersistent(address[])":"1d9e269e","mockCall(address,bytes,bytes)":"b96213e4","mockCall(address,uint256,bytes,bytes)":"81409b91","mockCallRevert(address,bytes,bytes)":"dbaad147","mockCallRevert(address,uint256,bytes,bytes)":"d23cd037","parseAddress(string)":"c6ce059d","parseBool(string)":"974ef924","parseBytes(string)":"8f5d232d","parseBytes32(string)":"087e6e81","parseInt(string)":"42346c5e","parseJson(string)":"6a82600a","parseJson(string,string)":"85940ef1","parseJsonAddress(string,string)":"1e19e657","parseJsonAddressArray(string,string)":"2fce7883","parseJsonBool(string,string)":"9f86dc91","parseJsonBoolArray(string,string)":"91f3b94f","parseJsonBytes(string,string)":"fd921be8","parseJsonBytes32(string,string)":"1777e59d","parseJsonBytes32Array(string,string)":"91c75bc3","parseJsonBytesArray(string,string)":"6631aa99","parseJsonInt(string,string)":"7b048ccd","parseJsonIntArray(string,string)":"9983c28a","parseJsonKeys(string,string)":"213e4198","parseJsonString(string,string)":"49c4fac8","parseJsonStringArray(string,string)":"498fdcf4","parseJsonUint(string,string)":"addde2b6","parseJsonUintArray(string,string)":"522074ab","parseToml(string)":"592151f0","parseToml(string,string)":"37736e08","parseTomlAddress(string,string)":"65e7c844","parseTomlAddressArray(string,string)":"65c428e7","parseTomlBool(string,string)":"d30dced6","parseTomlBoolArray(string,string)":"127cfe9a","parseTomlBytes(string,string)":"d77bfdb9","parseTomlBytes32(string,string)":"8e214810","parseTomlBytes32Array(string,string)":"3e716f81","parseTomlBytesArray(string,string)":"b197c247","parseTomlInt(string,string)":"c1350739","parseTomlIntArray(string,string)":"d3522ae6","parseTomlKeys(string,string)":"812a44b2","parseTomlString(string,string)":"8bb8dd43","parseTomlStringArray(string,string)":"9f629281","parseTomlUint(string,string)":"cc7b0487","parseTomlUintArray(string,string)":"b5df27c8","parseUint(string)":"fa91454d","pauseGasMetering()":"d1a5b36f","prank(address)":"ca669fa7","prank(address,address)":"47e50cce","prevrandao(bytes32)":"3b925549","prevrandao(uint256)":"9cb1c0d4","projectRoot()":"d930a0e6","prompt(string)":"47eaf474","promptAddress(string)":"62ee05f4","promptSecret(string)":"1e279d41","promptUint(string)":"652fd489","readCallers()":"4ad0bac9","readDir(string)":"c4bc59e0","readDir(string,uint64)":"1497876c","readDir(string,uint64,bool)":"8102d70d","readFile(string)":"60f9bb11","readFileBinary(string)":"16ed7bc4","readLine(string)":"70f55728","readLink(string)":"9f5684a2","record()":"266cf109","recordLogs()":"41af2f52","rememberKey(uint256)":"22100064","removeDir(string,bool)":"45c62011","removeFile(string)":"f1afe04d","replace(string,string,string)":"e00ad03e","resetNonce(address)":"1c72346d","resumeGasMetering()":"2bcd50e0","revertTo(uint256)":"44d7f0a4","revertToAndDelete(uint256)":"03e0aca9","revokePersistent(address)":"997a0222","revokePersistent(address[])":"3ce969e6","roll(uint256)":"1f7b4f30","rollFork(bytes32)":"0f29772b","rollFork(uint256)":"d9bbf3a1","rollFork(uint256,bytes32)":"f2830f7b","rollFork(uint256,uint256)":"d74c83a4","rpc(string,string)":"1206c8a8","rpcUrl(string)":"975a6ce9","rpcUrlStructs()":"9d2ad72a","rpcUrls()":"a85a8418","selectFork(uint256)":"9ebf6827","serializeAddress(string,string,address)":"972c6062","serializeAddress(string,string,address[])":"1e356e1a","serializeBool(string,string,bool)":"ac22e971","serializeBool(string,string,bool[])":"92925aa1","serializeBytes(string,string,bytes)":"f21d52c7","serializeBytes(string,string,bytes[])":"9884b232","serializeBytes32(string,string,bytes32)":"2d812b44","serializeBytes32(string,string,bytes32[])":"201e43e2","serializeInt(string,string,int256)":"3f33db60","serializeInt(string,string,int256[])":"7676e127","serializeJson(string,string)":"9b3358b0","serializeString(string,string,string)":"88da6d35","serializeString(string,string,string[])":"561cd6f3","serializeUint(string,string,uint256)":"129e9002","serializeUint(string,string,uint256[])":"fee9a469","serializeUintToHex(string,string,uint256)":"ae5a2ae8","setEnv(string,string)":"3d5923ee","setNonce(address,uint64)":"f8e18b57","setNonceUnsafe(address,uint64)":"9b67b21c","sign((address,uint256,uint256,uint256),bytes32)":"b25c5a25","sign(address,bytes32)":"8c1aa205","sign(bytes32)":"799cd333","sign(uint256,bytes32)":"e341eaa4","signP256(uint256,bytes32)":"83211b40","skip(bool)":"dd82d13e","sleep(uint256)":"fa9d8713","snapshot()":"9711715a","split(string,string)":"8bb75533","startBroadcast()":"7fb5297f","startBroadcast(address)":"7fec2a8d","startBroadcast(uint256)":"ce817d47","startMappingRecording()":"3e9705c0","startPrank(address)":"06447d56","startPrank(address,address)":"45b56078","startStateDiffRecording()":"cf22e3c9","stopAndReturnStateDiff()":"aa5cf90e","stopBroadcast()":"76eadd36","stopExpectSafeMemory()":"0956441b","stopMappingRecording()":"0d4aae9b","stopPrank()":"90c5013b","store(address,bytes32,bytes32)":"70ca10bb","toBase64(bytes)":"a5cbfe65","toBase64(string)":"3f8be2c8","toBase64URL(bytes)":"c8bd0e4a","toBase64URL(string)":"ae3165b3","toLowercase(string)":"50bb0884","toString(address)":"56ca623e","toString(bool)":"71dce7da","toString(bytes)":"71aad10d","toString(bytes32)":"b11a19e8","toString(int256)":"a322c40e","toString(uint256)":"6900a3ae","toUppercase(string)":"074ae3d7","transact(bytes32)":"be646da1","transact(uint256,bytes32)":"4d8abc4b","trim(string)":"b2dad155","tryFfi(string[])":"f45c1ce7","txGasPrice(uint256)":"48f50c0f","unixTime()":"625387dc","warp(uint256)":"e5d6bf02","writeFile(string,string)":"897e0a97","writeFileBinary(string,bytes)":"1f21fc80","writeJson(string,string)":"e23cd19f","writeJson(string,string,string)":"35d6ad46","writeLine(string,string)":"619d897f","writeToml(string,string)":"c0865ba7","writeToml(string,string,string)":"51ac6a33"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"accesses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"readSlots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"writeSlots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"allowCheatcodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assume\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBlobBaseFee\",\"type\":\"uint256\"}],\"name\":\"blobBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"name\":\"blobhashes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newChainId\",\"type\":\"uint256\"}],\"name\":\"chainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearMockedCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"closeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCoinbase\",\"type\":\"address\"}],\"name\":\"coinbase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"copyFile\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"copied\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"createDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDifficulty\",\"type\":\"uint256\"}],\"name\":\"difficulty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToStateJson\",\"type\":\"string\"}],\"name\":\"dumpState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"ensNamehash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"defaultValue\",\"type\":\"bytes32[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"defaultValue\",\"type\":\"int256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"defaultValue\",\"type\":\"bool\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"defaultValue\",\"type\":\"address\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"defaultValue\",\"type\":\"uint256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"defaultValue\",\"type\":\"bytes[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"defaultValue\",\"type\":\"uint256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"defaultValue\",\"type\":\"string[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"defaultValue\",\"type\":\"bytes\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"defaultValue\",\"type\":\"bytes32\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"defaultValue\",\"type\":\"int256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultValue\",\"type\":\"address[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"defaultValue\",\"type\":\"string\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"defaultValue\",\"type\":\"bool[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"newRuntimeBytecode\",\"type\":\"bytes\"}],\"name\":\"etch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"}],\"name\":\"eth_getLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"transactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"logIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"removed\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.EthGetLogs[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemoryCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBasefee\",\"type\":\"uint256\"}],\"name\":\"fee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"ffi\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"fsMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"modified\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.FsMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blobBaseFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobhashes\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"creationBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getDeployedCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"runtimeBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentLabel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"elementSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingKeyAndParentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getMappingSlotAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordedLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.Log[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum VmSafe.ForgeContext\",\"name\":\"context\",\"type\":\"uint8\"}],\"name\":\"isContext\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isDir\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPersistent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"persistent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsJson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsToml\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newLabel\",\"type\":\"string\"}],\"name\":\"label\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCallGas\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasTotalUsed\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasMemoryUsed\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"gasRefunded\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"gasRemaining\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.Gas\",\"name\":\"gas\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToAllocsJson\",\"type\":\"string\"}],\"name\":\"loadAllocs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account2\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"parsedValue\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"parsedValue\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"parsedValue\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parsedValue\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"parsedValue\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"parsedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newPrevrandao\",\"type\":\"bytes32\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrevrandao\",\"type\":\"uint256\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecret\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readCallers\",\"outputs\":[{\"internalType\":\"enum VmSafe.CallerMode\",\"name\":\"callerMode\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"followLinks\",\"type\":\"bool\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFileBinary\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readLine\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"line\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"linkPath\",\"type\":\"string\"}],\"name\":\"readLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"targetPath\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"rememberKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"removeDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"replace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newHeight\",\"type\":\"uint256\"}],\"name\":\"roll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rpcAlias\",\"type\":\"string\"}],\"name\":\"rpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrlStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Rpc[]\",\"name\":\"urls\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrls\",\"outputs\":[{\"internalType\":\"string[2][]\",\"name\":\"urls\",\"type\":\"string[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"name\":\"selectFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"values\",\"type\":\"bool[]\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"values\",\"type\":\"int256[]\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUintToHex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonceUnsafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signP256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delimiter\",\"type\":\"string\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"outputs\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startStateDiffRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnStateDiff\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.ChainInfo\",\"name\":\"chainInfo\",\"type\":\"tuple\"},{\"internalType\":\"enum VmSafe.AccountAccessKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.AccountAccess[]\",\"name\":\"accountAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopExpectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toLowercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toUppercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"trim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"tryFfi\",\"outputs\":[{\"components\":[{\"internalType\":\"int32\",\"name\":\"exitCode\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"stdout\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"stderr\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.FfiResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGasPrice\",\"type\":\"uint256\"}],\"name\":\"txGasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unixTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"milliseconds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTimestamp\",\"type\":\"uint256\"}],\"name\":\"warp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"writeFileBinary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accesses(address)\":{\"notice\":\"Gets all accessed reads and write slot from a `vm.record` session, for a given address.\"},\"activeFork()\":{\"notice\":\"Returns the identifier of the currently active fork. Reverts if no fork is currently active.\"},\"addr(uint256)\":{\"notice\":\"Gets the address for a given private key.\"},\"allowCheatcodes(address)\":{\"notice\":\"In forking mode, explicitly grant the given address cheatcode access.\"},\"assertApproxEqAbs(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbs(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRel(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRel(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEq(address,address)\":{\"notice\":\"Asserts that two `address` values are equal.\"},\"assertEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are equal.\"},\"assertEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are equal.\"},\"assertEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are equal.\"},\"assertEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are equal.\"},\"assertEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are equal.\"},\"assertEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal.\"},\"assertEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal.\"},\"assertEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are equal.\"},\"assertEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are equal.\"},\"assertEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(string,string)\":{\"notice\":\"Asserts that two `string` values are equal.\"},\"assertEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are equal.\"},\"assertEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal.\"},\"assertEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256 values are equal.\"},\"assertEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertFalse(bool)\":{\"notice\":\"Asserts that the given condition is false.\"},\"assertFalse(bool,string)\":{\"notice\":\"Asserts that the given condition is false and includes error message into revert string on failure.\"},\"assertGe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second.\"},\"assertGt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second.\"},\"assertGt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second.\"},\"assertLe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second.\"},\"assertLe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second.\"},\"assertLt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second.\"},\"assertLt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEq(address,address)\":{\"notice\":\"Asserts that two `address` values are not equal.\"},\"assertNotEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are not equal.\"},\"assertNotEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are not equal.\"},\"assertNotEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal.\"},\"assertNotEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are not equal.\"},\"assertNotEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are not equal.\"},\"assertNotEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal.\"},\"assertNotEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal.\"},\"assertNotEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are not equal.\"},\"assertNotEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal.\"},\"assertNotEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string,string)\":{\"notice\":\"Asserts that two `string` values are not equal.\"},\"assertNotEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are not equal.\"},\"assertNotEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal.\"},\"assertNotEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal.\"},\"assertNotEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertTrue(bool)\":{\"notice\":\"Asserts that the given condition is true.\"},\"assertTrue(bool,string)\":{\"notice\":\"Asserts that the given condition is true and includes error message into revert string on failure.\"},\"assume(bool)\":{\"notice\":\"If the condition is false, discard this run's fuzz inputs and generate new ones.\"},\"blobBaseFee(uint256)\":{\"notice\":\"Sets `block.blobbasefee`\"},\"blobhashes(bytes32[])\":{\"notice\":\"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"breakpoint(string)\":{\"notice\":\"Writes a breakpoint to jump to in the debugger.\"},\"breakpoint(string,bool)\":{\"notice\":\"Writes a conditional breakpoint to jump to in the debugger.\"},\"broadcast()\":{\"notice\":\"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"broadcast(address)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain.\"},\"broadcast(uint256)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain.\"},\"chainId(uint256)\":{\"notice\":\"Sets `block.chainid`.\"},\"clearMockedCalls()\":{\"notice\":\"Clears all mocked calls.\"},\"closeFile(string)\":{\"notice\":\"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root.\"},\"coinbase(address)\":{\"notice\":\"Sets `block.coinbase`.\"},\"computeCreate2Address(bytes32,bytes32)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer.\"},\"computeCreate2Address(bytes32,bytes32,address)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer.\"},\"computeCreateAddress(address,uint256)\":{\"notice\":\"Compute the address a contract will be deployed at for a given deployer address and nonce.\"},\"copyFile(string,string)\":{\"notice\":\"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root.\"},\"createDir(string,bool)\":{\"notice\":\"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root.\"},\"createFork(string)\":{\"notice\":\"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork.\"},\"createFork(string,bytes32)\":{\"notice\":\"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork.\"},\"createFork(string,uint256)\":{\"notice\":\"Creates a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createSelectFork(string)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork.\"},\"createSelectFork(string,bytes32)\":{\"notice\":\"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork.\"},\"createSelectFork(string,uint256)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createWallet(string)\":{\"notice\":\"Derives a private key from the name, labels the account with that name, and returns the wallet.\"},\"createWallet(uint256)\":{\"notice\":\"Generates a wallet from the private key and returns the wallet.\"},\"createWallet(uint256,string)\":{\"notice\":\"Generates a wallet from the private key, labels the account with that name, and returns the wallet.\"},\"deal(address,uint256)\":{\"notice\":\"Sets an address' balance.\"},\"deleteSnapshot(uint256)\":{\"notice\":\"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist.\"},\"deleteSnapshots()\":{\"notice\":\"Removes _all_ snapshots previously created by `snapshot`.\"},\"deriveKey(string,string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`.\"},\"deriveKey(string,string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`.\"},\"deriveKey(string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"deriveKey(string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"difficulty(uint256)\":{\"notice\":\"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions.\"},\"dumpState(string)\":{\"notice\":\"Dump a genesis JSON file's `allocs` to disk.\"},\"ensNamehash(string)\":{\"notice\":\"Returns ENS namehash for provided string.\"},\"envAddress(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed.\"},\"envAddress(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envExists(string)\":{\"notice\":\"Gets the environment variable `name` and returns true if it exists, else returns false.\"},\"envInt(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envOr(string,address)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bool)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes32)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,int256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,address[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bool[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes32[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,int256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,string[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,uint256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,uint256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envString(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed.\"},\"envString(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"etch(address,bytes)\":{\"notice\":\"Sets an address' code.\"},\"eth_getLogs(uint256,uint256,address,bytes32[])\":{\"notice\":\"Gets all the logs according to specified filter.\"},\"exists(string)\":{\"notice\":\"Returns true if the given path points to an existing entity, else returns false.\"},\"expectCall(address,bytes)\":{\"notice\":\"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match.\"},\"expectCall(address,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified calldata.\"},\"expectCall(address,uint256,bytes)\":{\"notice\":\"Expects a call to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCall(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCallMinGas(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectCallMinGas(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectEmit()\":{\"notice\":\"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmit(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmit(bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectRevert()\":{\"notice\":\"Expects an error on next call with any revert data.\"},\"expectRevert(bytes)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes4)\":{\"notice\":\"Expects an error on next call that starts with the revert data.\"},\"expectSafeMemory(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"expectSafeMemoryCall(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"fee(uint256)\":{\"notice\":\"Sets `block.basefee`.\"},\"ffi(string[])\":{\"notice\":\"Performs a foreign function call via the terminal.\"},\"fsMetadata(string)\":{\"notice\":\"Given a path, query the file system to get information about a file, directory, etc.\"},\"getBlobBaseFee()\":{\"notice\":\"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlobhashes()\":{\"notice\":\"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"getBlockNumber()\":{\"notice\":\"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockTimestamp()\":{\"notice\":\"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getCode(string)\":{\"notice\":\"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployedCode(string)\":{\"notice\":\"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getLabel(address)\":{\"notice\":\"Gets the label for the specified address.\"},\"getMappingKeyAndParentOf(address,bytes32)\":{\"notice\":\"Gets the map key and parent of a mapping at a given slot, for a given address.\"},\"getMappingLength(address,bytes32)\":{\"notice\":\"Gets the number of elements in the mapping at the given slot, for a given address.\"},\"getMappingSlotAt(address,bytes32,uint256)\":{\"notice\":\"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping).\"},\"getNonce((address,uint256,uint256,uint256))\":{\"notice\":\"Get a `Wallet`'s nonce.\"},\"getNonce(address)\":{\"notice\":\"Gets the nonce of an account.\"},\"getRecordedLogs()\":{\"notice\":\"Gets all the recorded logs.\"},\"indexOf(string,string)\":{\"notice\":\"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`.\"},\"isContext(uint8)\":{\"notice\":\"Returns true if `forge` command was executed in given context.\"},\"isDir(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a directory, else returns false.\"},\"isFile(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a regular file, else returns false.\"},\"isPersistent(address)\":{\"notice\":\"Returns true if the account is marked as persistent.\"},\"keyExists(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions.\"},\"keyExistsJson(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object.\"},\"keyExistsToml(string,string)\":{\"notice\":\"Checks if `key` exists in a TOML table.\"},\"label(address,string)\":{\"notice\":\"Labels an address in call traces.\"},\"lastCallGas()\":{\"notice\":\"Gets the gas used in the last call.\"},\"load(address,bytes32)\":{\"notice\":\"Loads a storage slot from an address.\"},\"loadAllocs(string)\":{\"notice\":\"Load a genesis JSON file's `allocs` into the in-memory revm state.\"},\"makePersistent(address)\":{\"notice\":\"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks.\"},\"makePersistent(address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address,address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address[])\":{\"notice\":\"See `makePersistent(address)`.\"},\"mockCall(address,bytes,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked.\"},\"mockCall(address,uint256,bytes,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity.\"},\"mockCallRevert(address,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data.\"},\"mockCallRevert(address,uint256,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data.\"},\"parseAddress(string)\":{\"notice\":\"Parses the given `string` into an `address`.\"},\"parseBool(string)\":{\"notice\":\"Parses the given `string` into a `bool`.\"},\"parseBytes(string)\":{\"notice\":\"Parses the given `string` into `bytes`.\"},\"parseBytes32(string)\":{\"notice\":\"Parses the given `string` into a `bytes32`.\"},\"parseInt(string)\":{\"notice\":\"Parses the given `string` into a `int256`.\"},\"parseJson(string)\":{\"notice\":\"ABI-encodes a JSON object.\"},\"parseJson(string,string)\":{\"notice\":\"ABI-encodes a JSON object at `key`.\"},\"parseJsonAddress(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address`.\"},\"parseJsonAddressArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address[]`.\"},\"parseJsonBool(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool`.\"},\"parseJsonBoolArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool[]`.\"},\"parseJsonBytes(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes`.\"},\"parseJsonBytes32(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32`.\"},\"parseJsonBytes32Array(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32[]`.\"},\"parseJsonBytesArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes[]`.\"},\"parseJsonInt(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256`.\"},\"parseJsonIntArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256[]`.\"},\"parseJsonKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a JSON object.\"},\"parseJsonString(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string`.\"},\"parseJsonStringArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string[]`.\"},\"parseJsonUint(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256`.\"},\"parseJsonUintArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256[]`.\"},\"parseToml(string)\":{\"notice\":\"ABI-encodes a TOML table.\"},\"parseToml(string,string)\":{\"notice\":\"ABI-encodes a TOML table at `key`.\"},\"parseTomlAddress(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address`.\"},\"parseTomlAddressArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address[]`.\"},\"parseTomlBool(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool`.\"},\"parseTomlBoolArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool[]`.\"},\"parseTomlBytes(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes`.\"},\"parseTomlBytes32(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32`.\"},\"parseTomlBytes32Array(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32[]`.\"},\"parseTomlBytesArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes[]`.\"},\"parseTomlInt(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256`.\"},\"parseTomlIntArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256[]`.\"},\"parseTomlKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a TOML table.\"},\"parseTomlString(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string`.\"},\"parseTomlStringArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string[]`.\"},\"parseTomlUint(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256`.\"},\"parseTomlUintArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256[]`.\"},\"parseUint(string)\":{\"notice\":\"Parses the given `string` into a `uint256`.\"},\"pauseGasMetering()\":{\"notice\":\"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused.\"},\"prank(address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address.\"},\"prank(address,address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prevrandao(bytes32)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"prevrandao(uint256)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"projectRoot()\":{\"notice\":\"Get the path of the current project root.\"},\"prompt(string)\":{\"notice\":\"Prompts the user for a string value in the terminal.\"},\"promptAddress(string)\":{\"notice\":\"Prompts the user for an address in the terminal.\"},\"promptSecret(string)\":{\"notice\":\"Prompts the user for a hidden string value in the terminal.\"},\"promptUint(string)\":{\"notice\":\"Prompts the user for uint256 in the terminal.\"},\"readCallers()\":{\"notice\":\"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification.\"},\"readDir(string)\":{\"notice\":\"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true.\"},\"readDir(string,uint64)\":{\"notice\":\"See `readDir(string)`.\"},\"readDir(string,uint64,bool)\":{\"notice\":\"See `readDir(string)`.\"},\"readFile(string)\":{\"notice\":\"Reads the entire content of file to string. `path` is relative to the project root.\"},\"readFileBinary(string)\":{\"notice\":\"Reads the entire content of file as binary. `path` is relative to the project root.\"},\"readLine(string)\":{\"notice\":\"Reads next line of file to string.\"},\"readLink(string)\":{\"notice\":\"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist.\"},\"record()\":{\"notice\":\"Records all storage reads and writes.\"},\"recordLogs()\":{\"notice\":\"Record all the transaction logs.\"},\"rememberKey(uint256)\":{\"notice\":\"Adds a private key to the local forge wallet and returns the address.\"},\"removeDir(string,bool)\":{\"notice\":\"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root.\"},\"removeFile(string)\":{\"notice\":\"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root.\"},\"replace(string,string,string)\":{\"notice\":\"Replaces occurrences of `from` in the given `string` with `to`.\"},\"resetNonce(address)\":{\"notice\":\"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts.\"},\"resumeGasMetering()\":{\"notice\":\"Resumes gas metering (i.e. gas usage is counted again). Noop if already on.\"},\"revertTo(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`.\"},\"revertToAndDelete(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist.\"},\"revokePersistent(address)\":{\"notice\":\"Revokes persistent status from the address, previously added via `makePersistent`.\"},\"revokePersistent(address[])\":{\"notice\":\"See `revokePersistent(address)`.\"},\"roll(uint256)\":{\"notice\":\"Sets `block.height`.\"},\"rollFork(bytes32)\":{\"notice\":\"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block.\"},\"rollFork(uint256)\":{\"notice\":\"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork.\"},\"rollFork(uint256,bytes32)\":{\"notice\":\"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block.\"},\"rollFork(uint256,uint256)\":{\"notice\":\"Updates the given fork to given block number.\"},\"rpc(string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the current fork URL.\"},\"rpcUrl(string)\":{\"notice\":\"Returns the RPC url for the given alias.\"},\"rpcUrlStructs()\":{\"notice\":\"Returns all rpc urls and their aliases as structs.\"},\"rpcUrls()\":{\"notice\":\"Returns all rpc urls and their aliases `[alias, url][]`.\"},\"selectFork(uint256)\":{\"notice\":\"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active.\"},\"serializeAddress(string,string,address)\":{\"notice\":\"See `serializeJson`.\"},\"serializeAddress(string,string,address[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeJson(string,string)\":{\"notice\":\"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment.\"},\"serializeString(string,string,string)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUintToHex(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"setEnv(string,string)\":{\"notice\":\"Sets environment variables.\"},\"setNonce(address,uint64)\":{\"notice\":\"Sets the nonce of an account. Must be higher than the current nonce of the account.\"},\"setNonceUnsafe(address,uint64)\":{\"notice\":\"Sets the nonce of an account to an arbitrary value.\"},\"sign((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`.\"},\"sign(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address.\"},\"sign(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"sign(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve.\"},\"signP256(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256r1 curve.\"},\"skip(bool)\":{\"notice\":\"Marks a test as skipped. Must be called at the top of the test.\"},\"sleep(uint256)\":{\"notice\":\"Suspends execution of the main thread for `duration` milliseconds.\"},\"snapshot()\":{\"notice\":\"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertTo`.\"},\"split(string,string)\":{\"notice\":\"Splits the given `string` into an array of strings divided by the `delimiter`.\"},\"startBroadcast()\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"startBroadcast(address)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain.\"},\"startBroadcast(uint256)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain.\"},\"startMappingRecording()\":{\"notice\":\"Starts recording all map SSTOREs for later retrieval.\"},\"startPrank(address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startPrank(address,address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startStateDiffRecording()\":{\"notice\":\"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls\"},\"stopAndReturnStateDiff()\":{\"notice\":\"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session.\"},\"stopBroadcast()\":{\"notice\":\"Stops collecting onchain transactions.\"},\"stopExpectSafeMemory()\":{\"notice\":\"Stops all safe memory expectation in the current subcontext.\"},\"stopMappingRecording()\":{\"notice\":\"Stops recording all map SSTOREs for later retrieval and clears the recorded data.\"},\"stopPrank()\":{\"notice\":\"Resets subsequent calls' `msg.sender` to be `address(this)`.\"},\"store(address,bytes32,bytes32)\":{\"notice\":\"Stores a value to an address' storage slot.\"},\"toBase64(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64 string.\"},\"toBase64(string)\":{\"notice\":\"Encodes a `string` value to a base64 string.\"},\"toBase64URL(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64url string.\"},\"toBase64URL(string)\":{\"notice\":\"Encodes a `string` value to a base64url string.\"},\"toLowercase(string)\":{\"notice\":\"Converts the given `string` value to Lowercase.\"},\"toString(address)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bool)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes32)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(int256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(uint256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toUppercase(string)\":{\"notice\":\"Converts the given `string` value to Uppercase.\"},\"transact(bytes32)\":{\"notice\":\"Fetches the given transaction from the active fork and executes it on the current state.\"},\"transact(uint256,bytes32)\":{\"notice\":\"Fetches the given transaction from the given fork and executes it on the current state.\"},\"trim(string)\":{\"notice\":\"Trims leading and trailing whitespace from the given `string` value.\"},\"tryFfi(string[])\":{\"notice\":\"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr.\"},\"txGasPrice(uint256)\":{\"notice\":\"Sets `tx.gasprice`.\"},\"unixTime()\":{\"notice\":\"Returns the time since unix epoch in milliseconds.\"},\"warp(uint256)\":{\"notice\":\"Sets `block.timestamp`.\"},\"writeFile(string,string)\":{\"notice\":\"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeFileBinary(string,bytes)\":{\"notice\":\"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeJson(string,string)\":{\"notice\":\"Write a serialized JSON object to a file. If the file exists, it will be overwritten.\"},\"writeJson(string,string,string)\":{\"notice\":\"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing.\"},\"writeLine(string,string)\":{\"notice\":\"Writes line to file, creating a file if it does not exist. `path` is relative to the project root.\"},\"writeToml(string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML to a file.\"},\"writeToml(string,string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing.\"}},\"notice\":\"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used in tests, but it is not recommended to use these cheats in scripts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Vm.sol\":\"Vm\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xf92ea94fe38f8370a8dc5f591ebfb4958869e18d877469ce422162cc88c8b063\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://620b5d4b2ff24d66120ce9dbb72fbde7276f2e8b3bb93f626874183aee01e307\",\"dweb:/ipfs/Qmcyc8co7vCiJ7gUd3jj5Hc1rRPihjt3WSKs5ut6eiU1Ze\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"accesses","outputs":[{"internalType":"bytes32[]","name":"readSlots","type":"bytes32[]"},{"internalType":"bytes32[]","name":"writeSlots","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"activeFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"addr","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"allowCheatcodes"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assume"},{"inputs":[{"internalType":"uint256","name":"newBlobBaseFee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"blobBaseFee"},{"inputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"blobhashes"},{"inputs":[{"internalType":"string","name":"char","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[{"internalType":"string","name":"char","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"newChainId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"chainId"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"clearMockedCalls"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"closeFile"},{"inputs":[{"internalType":"address","name":"newCoinbase","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"coinbase"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"pure","type":"function","name":"computeCreateAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"copyFile","outputs":[{"internalType":"uint64","name":"copied","type":"uint64"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"createDir"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"newBalance","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deal"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshot","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshots"},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newDifficulty","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"difficulty"},{"inputs":[{"internalType":"string","name":"pathToStateJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"dumpState"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"pure","type":"function","name":"ensNamehash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envExists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes32[]","name":"defaultValue","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"int256[]","name":"defaultValue","type":"int256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"defaultValue","type":"bool"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"defaultValue","type":"address"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"defaultValue","type":"uint256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes[]","name":"defaultValue","type":"bytes[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"uint256[]","name":"defaultValue","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"string[]","name":"defaultValue","type":"string[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes","name":"defaultValue","type":"bytes"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"defaultValue","type":"bytes32"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"int256","name":"defaultValue","type":"int256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"address[]","name":"defaultValue","type":"address[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"defaultValue","type":"string"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bool[]","name":"defaultValue","type":"bool[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"newRuntimeBytecode","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"etch"},{"inputs":[{"internalType":"uint256","name":"fromBlock","type":"uint256"},{"internalType":"uint256","name":"toBlock","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"eth_getLogs","outputs":[{"internalType":"struct VmSafe.EthGetLogs[]","name":"logs","type":"tuple[]","components":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bytes32","name":"transactionHash","type":"bytes32"},{"internalType":"uint64","name":"transactionIndex","type":"uint64"},{"internalType":"uint256","name":"logIndex","type":"uint256"},{"internalType":"bool","name":"removed","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"exists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemory"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemoryCall"},{"inputs":[{"internalType":"uint256","name":"newBasefee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"fee"},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"ffi","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"fsMetadata","outputs":[{"internalType":"struct VmSafe.FsMetadata","name":"metadata","type":"tuple","components":[{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"},{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"bool","name":"readOnly","type":"bool"},{"internalType":"uint256","name":"modified","type":"uint256"},{"internalType":"uint256","name":"accessed","type":"uint256"},{"internalType":"uint256","name":"created","type":"uint256"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobBaseFee","outputs":[{"internalType":"uint256","name":"blobBaseFee","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobhashes","outputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"height","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getCode","outputs":[{"internalType":"bytes","name":"creationBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployedCode","outputs":[{"internalType":"bytes","name":"runtimeBytecode","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getLabel","outputs":[{"internalType":"string","name":"currentLabel","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"elementSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingKeyAndParentOf","outputs":[{"internalType":"bool","name":"found","type":"bool"},{"internalType":"bytes32","name":"key","type":"bytes32"},{"internalType":"bytes32","name":"parent","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingLength","outputs":[{"internalType":"uint256","name":"length","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"},{"internalType":"uint256","name":"idx","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"getMappingSlotAt","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getRecordedLogs","outputs":[{"internalType":"struct VmSafe.Log[]","name":"logs","type":"tuple[]","components":[{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"emitter","type":"address"}]}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"indexOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"enum VmSafe.ForgeContext","name":"context","type":"uint8"}],"stateMutability":"view","type":"function","name":"isContext","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isDir","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isFile","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isPersistent","outputs":[{"internalType":"bool","name":"persistent","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsJson","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsToml","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"string","name":"newLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"label"},{"inputs":[],"stateMutability":"view","type":"function","name":"lastCallGas","outputs":[{"internalType":"struct VmSafe.Gas","name":"gas","type":"tuple","components":[{"internalType":"uint64","name":"gasLimit","type":"uint64"},{"internalType":"uint64","name":"gasTotalUsed","type":"uint64"},{"internalType":"uint64","name":"gasMemoryUsed","type":"uint64"},{"internalType":"int64","name":"gasRefunded","type":"int64"},{"internalType":"uint64","name":"gasRemaining","type":"uint64"}]}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"load","outputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"pathToAllocsJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"loadAllocs"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"},{"internalType":"address","name":"account2","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseAddress","outputs":[{"internalType":"address","name":"parsedValue","type":"address"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBool","outputs":[{"internalType":"bool","name":"parsedValue","type":"bool"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes","outputs":[{"internalType":"bytes","name":"parsedValue","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes32","outputs":[{"internalType":"bytes32","name":"parsedValue","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseInt","outputs":[{"internalType":"int256","name":"parsedValue","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseUint","outputs":[{"internalType":"uint256","name":"parsedValue","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseGasMetering"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"bytes32","name":"newPrevrandao","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[{"internalType":"uint256","name":"newPrevrandao","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[],"stateMutability":"view","type":"function","name":"projectRoot","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"prompt","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecret","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"readCallers","outputs":[{"internalType":"enum VmSafe.CallerMode","name":"callerMode","type":"uint8"},{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"},{"internalType":"bool","name":"followLinks","type":"bool"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFile","outputs":[{"internalType":"string","name":"data","type":"string"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFileBinary","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readLine","outputs":[{"internalType":"string","name":"line","type":"string"}]},{"inputs":[{"internalType":"string","name":"linkPath","type":"string"}],"stateMutability":"view","type":"function","name":"readLink","outputs":[{"internalType":"string","name":"targetPath","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"record"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"recordLogs"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rememberKey","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"removeDir"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"removeFile"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"pure","type":"function","name":"replace","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"resetNonce"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resumeGasMetering"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertTo","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToAndDelete","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"uint256","name":"newHeight","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"roll"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"rpcAlias","type":"string"}],"stateMutability":"view","type":"function","name":"rpcUrl","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrlStructs","outputs":[{"internalType":"struct VmSafe.Rpc[]","name":"urls","type":"tuple[]","components":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"url","type":"string"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrls","outputs":[{"internalType":"string[2][]","name":"urls","type":"string[2][]"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"selectFork"},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address[]","name":"values","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address","name":"value","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool[]","name":"values","type":"bool[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes[]","name":"values","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32[]","name":"values","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256[]","name":"values","type":"int256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeJson","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string[]","name":"values","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUintToHex","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setEnv"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonce"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonceUnsafe"},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signP256","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"sleep"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"snapshot","outputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"delimiter","type":"string"}],"stateMutability":"pure","type":"function","name":"split","outputs":[{"internalType":"string[]","name":"outputs","type":"string[]"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startMappingRecording"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startStateDiffRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnStateDiff","outputs":[{"internalType":"struct VmSafe.AccountAccess[]","name":"accountAccesses","type":"tuple[]","components":[{"internalType":"struct VmSafe.ChainInfo","name":"chainInfo","type":"tuple","components":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}]},{"internalType":"enum VmSafe.AccountAccessKind","name":"kind","type":"uint8"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"accessor","type":"address"},{"internalType":"bool","name":"initialized","type":"bool"},{"internalType":"uint256","name":"oldBalance","type":"uint256"},{"internalType":"uint256","name":"newBalance","type":"uint256"},{"internalType":"bytes","name":"deployedCode","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"reverted","type":"bool"},{"internalType":"struct VmSafe.StorageAccess[]","name":"storageAccesses","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bool","name":"isWrite","type":"bool"},{"internalType":"bytes32","name":"previousValue","type":"bytes32"},{"internalType":"bytes32","name":"newValue","type":"bytes32"},{"internalType":"bool","name":"reverted","type":"bool"}]},{"internalType":"uint64","name":"depth","type":"uint64"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopExpectSafeMemory"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopMappingRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopPrank"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"store"},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toLowercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toUppercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"trim","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"tryFfi","outputs":[{"internalType":"struct VmSafe.FfiResult","name":"result","type":"tuple","components":[{"internalType":"int32","name":"exitCode","type":"int32"},{"internalType":"bytes","name":"stdout","type":"bytes"},{"internalType":"bytes","name":"stderr","type":"bytes"}]}]},{"inputs":[{"internalType":"uint256","name":"newGasPrice","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"txGasPrice"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unixTime","outputs":[{"internalType":"uint256","name":"milliseconds","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newTimestamp","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"warp"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeFile"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"writeFileBinary"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeLine"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"accesses(address)":{"notice":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"activeFork()":{"notice":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"addr(uint256)":{"notice":"Gets the address for a given private key."},"allowCheatcodes(address)":{"notice":"In forking mode, explicitly grant the given address cheatcode access."},"assertApproxEqAbs(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbs(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRel(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRel(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertEq(address,address)":{"notice":"Asserts that two `address` values are equal."},"assertEq(address,address,string)":{"notice":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"assertEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are equal."},"assertEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"assertEq(bool,bool)":{"notice":"Asserts that two `bool` values are equal."},"assertEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"assertEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are equal."},"assertEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"assertEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are equal."},"assertEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"assertEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are equal."},"assertEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are equal."},"assertEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are equal."},"assertEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"assertEq(int256,int256)":{"notice":"Asserts that two `int256` values are equal."},"assertEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"assertEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are equal."},"assertEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"assertEq(string,string)":{"notice":"Asserts that two `string` values are equal."},"assertEq(string,string,string)":{"notice":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"assertEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are equal."},"assertEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"assertEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal."},"assertEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"assertEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256 values are equal."},"assertEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"assertEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertFalse(bool)":{"notice":"Asserts that the given condition is false."},"assertFalse(bool,string)":{"notice":"Asserts that the given condition is false and includes error message into revert string on failure."},"assertGe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"assertGe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"assertGe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second."},"assertGt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second."},"assertGt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second."},"assertLe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"assertLe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than second."},"assertLt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second."},"assertLt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertNotEq(address,address)":{"notice":"Asserts that two `address` values are not equal."},"assertNotEq(address,address,string)":{"notice":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are not equal."},"assertNotEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool,bool)":{"notice":"Asserts that two `bool` values are not equal."},"assertNotEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are not equal."},"assertNotEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are not equal."},"assertNotEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are not equal."},"assertNotEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are not equal."},"assertNotEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are not equal."},"assertNotEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256,int256)":{"notice":"Asserts that two `int256` values are not equal."},"assertNotEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are not equal."},"assertNotEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(string,string)":{"notice":"Asserts that two `string` values are not equal."},"assertNotEq(string,string,string)":{"notice":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are not equal."},"assertNotEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal."},"assertNotEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256` values are not equal."},"assertNotEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertNotEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertTrue(bool)":{"notice":"Asserts that the given condition is true."},"assertTrue(bool,string)":{"notice":"Asserts that the given condition is true and includes error message into revert string on failure."},"assume(bool)":{"notice":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"blobBaseFee(uint256)":{"notice":"Sets `block.blobbasefee`"},"blobhashes(bytes32[])":{"notice":"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"breakpoint(string)":{"notice":"Writes a breakpoint to jump to in the debugger."},"breakpoint(string,bool)":{"notice":"Writes a conditional breakpoint to jump to in the debugger."},"broadcast()":{"notice":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"broadcast(address)":{"notice":"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain."},"broadcast(uint256)":{"notice":"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain."},"chainId(uint256)":{"notice":"Sets `block.chainid`."},"clearMockedCalls()":{"notice":"Clears all mocked calls."},"closeFile(string)":{"notice":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root."},"coinbase(address)":{"notice":"Sets `block.coinbase`."},"computeCreate2Address(bytes32,bytes32)":{"notice":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"computeCreate2Address(bytes32,bytes32,address)":{"notice":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"computeCreateAddress(address,uint256)":{"notice":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"copyFile(string,string)":{"notice":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root."},"createDir(string,bool)":{"notice":"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root."},"createFork(string)":{"notice":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"createFork(string,bytes32)":{"notice":"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"createFork(string,uint256)":{"notice":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"createSelectFork(string)":{"notice":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"createSelectFork(string,bytes32)":{"notice":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"createSelectFork(string,uint256)":{"notice":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"createWallet(string)":{"notice":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"createWallet(uint256)":{"notice":"Generates a wallet from the private key and returns the wallet."},"createWallet(uint256,string)":{"notice":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"deal(address,uint256)":{"notice":"Sets an address' balance."},"deleteSnapshot(uint256)":{"notice":"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist."},"deleteSnapshots()":{"notice":"Removes _all_ snapshots previously created by `snapshot`."},"deriveKey(string,string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`."},"deriveKey(string,string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`."},"deriveKey(string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`."},"deriveKey(string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`."},"difficulty(uint256)":{"notice":"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions."},"dumpState(string)":{"notice":"Dump a genesis JSON file's `allocs` to disk."},"ensNamehash(string)":{"notice":"Returns ENS namehash for provided string."},"envAddress(string)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed."},"envAddress(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBool(string)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed."},"envBool(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed."},"envBytes(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envExists(string)":{"notice":"Gets the environment variable `name` and returns true if it exists, else returns false."},"envInt(string)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed."},"envInt(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envOr(string,address)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bool)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes32)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,int256)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,address[])":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bool[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes32[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,int256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,string[])":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,uint256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,uint256)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envString(string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed."},"envString(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envUint(string)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed."},"envUint(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"etch(address,bytes)":{"notice":"Sets an address' code."},"eth_getLogs(uint256,uint256,address,bytes32[])":{"notice":"Gets all the logs according to specified filter."},"exists(string)":{"notice":"Returns true if the given path points to an existing entity, else returns false."},"expectCall(address,bytes)":{"notice":"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match."},"expectCall(address,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified calldata."},"expectCall(address,uint256,bytes)":{"notice":"Expects a call to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"expectCall(address,uint256,uint64,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"expectCallMinGas(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectCallMinGas(address,uint256,uint64,bytes,uint64)":{"notice":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectEmit()":{"notice":"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmit(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmit(bool,bool,bool,bool)":{"notice":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmit(bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectRevert()":{"notice":"Expects an error on next call with any revert data."},"expectRevert(bytes)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes4)":{"notice":"Expects an error on next call that starts with the revert data."},"expectSafeMemory(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"expectSafeMemoryCall(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"fee(uint256)":{"notice":"Sets `block.basefee`."},"ffi(string[])":{"notice":"Performs a foreign function call via the terminal."},"fsMetadata(string)":{"notice":"Given a path, query the file system to get information about a file, directory, etc."},"getBlobBaseFee()":{"notice":"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlobhashes()":{"notice":"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"getBlockNumber()":{"notice":"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlockTimestamp()":{"notice":"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getCode(string)":{"notice":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getDeployedCode(string)":{"notice":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getLabel(address)":{"notice":"Gets the label for the specified address."},"getMappingKeyAndParentOf(address,bytes32)":{"notice":"Gets the map key and parent of a mapping at a given slot, for a given address."},"getMappingLength(address,bytes32)":{"notice":"Gets the number of elements in the mapping at the given slot, for a given address."},"getMappingSlotAt(address,bytes32,uint256)":{"notice":"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"getNonce((address,uint256,uint256,uint256))":{"notice":"Get a `Wallet`'s nonce."},"getNonce(address)":{"notice":"Gets the nonce of an account."},"getRecordedLogs()":{"notice":"Gets all the recorded logs."},"indexOf(string,string)":{"notice":"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`."},"isContext(uint8)":{"notice":"Returns true if `forge` command was executed in given context."},"isDir(string)":{"notice":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"isFile(string)":{"notice":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"isPersistent(address)":{"notice":"Returns true if the account is marked as persistent."},"keyExists(string,string)":{"notice":"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"keyExistsJson(string,string)":{"notice":"Checks if `key` exists in a JSON object."},"keyExistsToml(string,string)":{"notice":"Checks if `key` exists in a TOML table."},"label(address,string)":{"notice":"Labels an address in call traces."},"lastCallGas()":{"notice":"Gets the gas used in the last call."},"load(address,bytes32)":{"notice":"Loads a storage slot from an address."},"loadAllocs(string)":{"notice":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"makePersistent(address)":{"notice":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks."},"makePersistent(address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address,address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address[])":{"notice":"See `makePersistent(address)`."},"mockCall(address,bytes,bytes)":{"notice":"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked."},"mockCall(address,uint256,bytes,bytes)":{"notice":"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity."},"mockCallRevert(address,bytes,bytes)":{"notice":"Reverts a call to an address with specified revert data."},"mockCallRevert(address,uint256,bytes,bytes)":{"notice":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"parseAddress(string)":{"notice":"Parses the given `string` into an `address`."},"parseBool(string)":{"notice":"Parses the given `string` into a `bool`."},"parseBytes(string)":{"notice":"Parses the given `string` into `bytes`."},"parseBytes32(string)":{"notice":"Parses the given `string` into a `bytes32`."},"parseInt(string)":{"notice":"Parses the given `string` into a `int256`."},"parseJson(string)":{"notice":"ABI-encodes a JSON object."},"parseJson(string,string)":{"notice":"ABI-encodes a JSON object at `key`."},"parseJsonAddress(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address`."},"parseJsonAddressArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"parseJsonBool(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool`."},"parseJsonBoolArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"parseJsonBytes(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"parseJsonBytes32(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"parseJsonBytes32Array(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"parseJsonBytesArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"parseJsonInt(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256`."},"parseJsonIntArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"parseJsonKeys(string,string)":{"notice":"Returns an array of all the keys in a JSON object."},"parseJsonString(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string`."},"parseJsonStringArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"parseJsonUint(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"parseJsonUintArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"parseToml(string)":{"notice":"ABI-encodes a TOML table."},"parseToml(string,string)":{"notice":"ABI-encodes a TOML table at `key`."},"parseTomlAddress(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address`."},"parseTomlAddressArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"parseTomlBool(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool`."},"parseTomlBoolArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"parseTomlBytes(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"parseTomlBytes32(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"parseTomlBytes32Array(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"parseTomlBytesArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"parseTomlInt(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256`."},"parseTomlIntArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"parseTomlKeys(string,string)":{"notice":"Returns an array of all the keys in a TOML table."},"parseTomlString(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string`."},"parseTomlStringArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"parseTomlUint(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"parseTomlUintArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"parseUint(string)":{"notice":"Parses the given `string` into a `uint256`."},"pauseGasMetering()":{"notice":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"prank(address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address."},"prank(address,address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"prevrandao(bytes32)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"prevrandao(uint256)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"projectRoot()":{"notice":"Get the path of the current project root."},"prompt(string)":{"notice":"Prompts the user for a string value in the terminal."},"promptAddress(string)":{"notice":"Prompts the user for an address in the terminal."},"promptSecret(string)":{"notice":"Prompts the user for a hidden string value in the terminal."},"promptUint(string)":{"notice":"Prompts the user for uint256 in the terminal."},"readCallers()":{"notice":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"readDir(string)":{"notice":"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true."},"readDir(string,uint64)":{"notice":"See `readDir(string)`."},"readDir(string,uint64,bool)":{"notice":"See `readDir(string)`."},"readFile(string)":{"notice":"Reads the entire content of file to string. `path` is relative to the project root."},"readFileBinary(string)":{"notice":"Reads the entire content of file as binary. `path` is relative to the project root."},"readLine(string)":{"notice":"Reads next line of file to string."},"readLink(string)":{"notice":"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist."},"record()":{"notice":"Records all storage reads and writes."},"recordLogs()":{"notice":"Record all the transaction logs."},"rememberKey(uint256)":{"notice":"Adds a private key to the local forge wallet and returns the address."},"removeDir(string,bool)":{"notice":"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root."},"removeFile(string)":{"notice":"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root."},"replace(string,string,string)":{"notice":"Replaces occurrences of `from` in the given `string` with `to`."},"resetNonce(address)":{"notice":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"resumeGasMetering()":{"notice":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"revertTo(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"revertToAndDelete(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist."},"revokePersistent(address)":{"notice":"Revokes persistent status from the address, previously added via `makePersistent`."},"revokePersistent(address[])":{"notice":"See `revokePersistent(address)`."},"roll(uint256)":{"notice":"Sets `block.height`."},"rollFork(bytes32)":{"notice":"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block."},"rollFork(uint256)":{"notice":"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork."},"rollFork(uint256,bytes32)":{"notice":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"rollFork(uint256,uint256)":{"notice":"Updates the given fork to given block number."},"rpc(string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the current fork URL."},"rpcUrl(string)":{"notice":"Returns the RPC url for the given alias."},"rpcUrlStructs()":{"notice":"Returns all rpc urls and their aliases as structs."},"rpcUrls()":{"notice":"Returns all rpc urls and their aliases `[alias, url][]`."},"selectFork(uint256)":{"notice":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"serializeAddress(string,string,address)":{"notice":"See `serializeJson`."},"serializeAddress(string,string,address[])":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool)":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool[])":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes)":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes[])":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32)":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32[])":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256)":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256[])":{"notice":"See `serializeJson`."},"serializeJson(string,string)":{"notice":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment."},"serializeString(string,string,string)":{"notice":"See `serializeJson`."},"serializeString(string,string,string[])":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256)":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256[])":{"notice":"See `serializeJson`."},"serializeUintToHex(string,string,uint256)":{"notice":"See `serializeJson`."},"setEnv(string,string)":{"notice":"Sets environment variables."},"setNonce(address,uint64)":{"notice":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"setNonceUnsafe(address,uint64)":{"notice":"Sets the nonce of an account to an arbitrary value."},"sign((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`."},"sign(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address."},"sign(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"sign(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve."},"signP256(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256r1 curve."},"skip(bool)":{"notice":"Marks a test as skipped. Must be called at the top of the test."},"sleep(uint256)":{"notice":"Suspends execution of the main thread for `duration` milliseconds."},"snapshot()":{"notice":"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertTo`."},"split(string,string)":{"notice":"Splits the given `string` into an array of strings divided by the `delimiter`."},"startBroadcast()":{"notice":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"startBroadcast(address)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain."},"startBroadcast(uint256)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain."},"startMappingRecording()":{"notice":"Starts recording all map SSTOREs for later retrieval."},"startPrank(address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"startPrank(address,address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"startStateDiffRecording()":{"notice":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls"},"stopAndReturnStateDiff()":{"notice":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"stopBroadcast()":{"notice":"Stops collecting onchain transactions."},"stopExpectSafeMemory()":{"notice":"Stops all safe memory expectation in the current subcontext."},"stopMappingRecording()":{"notice":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"stopPrank()":{"notice":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"store(address,bytes32,bytes32)":{"notice":"Stores a value to an address' storage slot."},"toBase64(bytes)":{"notice":"Encodes a `bytes` value to a base64 string."},"toBase64(string)":{"notice":"Encodes a `string` value to a base64 string."},"toBase64URL(bytes)":{"notice":"Encodes a `bytes` value to a base64url string."},"toBase64URL(string)":{"notice":"Encodes a `string` value to a base64url string."},"toLowercase(string)":{"notice":"Converts the given `string` value to Lowercase."},"toString(address)":{"notice":"Converts the given value to a `string`."},"toString(bool)":{"notice":"Converts the given value to a `string`."},"toString(bytes)":{"notice":"Converts the given value to a `string`."},"toString(bytes32)":{"notice":"Converts the given value to a `string`."},"toString(int256)":{"notice":"Converts the given value to a `string`."},"toString(uint256)":{"notice":"Converts the given value to a `string`."},"toUppercase(string)":{"notice":"Converts the given `string` value to Uppercase."},"transact(bytes32)":{"notice":"Fetches the given transaction from the active fork and executes it on the current state."},"transact(uint256,bytes32)":{"notice":"Fetches the given transaction from the given fork and executes it on the current state."},"trim(string)":{"notice":"Trims leading and trailing whitespace from the given `string` value."},"tryFfi(string[])":{"notice":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"txGasPrice(uint256)":{"notice":"Sets `tx.gasprice`."},"unixTime()":{"notice":"Returns the time since unix epoch in milliseconds."},"warp(uint256)":{"notice":"Sets `block.timestamp`."},"writeFile(string,string)":{"notice":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeFileBinary(string,bytes)":{"notice":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeJson(string,string)":{"notice":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"writeJson(string,string,string)":{"notice":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"writeLine(string,string)":{"notice":"Writes line to file, creating a file if it does not exist. `path` is relative to the project root."},"writeToml(string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"writeToml(string,string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","foundry-devops/=lib/foundry-devops/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/forge-std/src/Vm.sol":"Vm"},"evmVersion":"paris","libraries":{}},"sources":{"lib/forge-std/src/Vm.sol":{"keccak256":"0xf92ea94fe38f8370a8dc5f591ebfb4958869e18d877469ce422162cc88c8b063","urls":["bzz-raw://620b5d4b2ff24d66120ce9dbb72fbde7276f2e8b3bb93f626874183aee01e307","dweb:/ipfs/Qmcyc8co7vCiJ7gUd3jj5Hc1rRPihjt3WSKs5ut6eiU1Ze"],"license":"MIT OR Apache-2.0"}},"version":1},"ast":{"absolutePath":"lib/forge-std/src/Vm.sol","id":15886,"exportedSymbols":{"Vm":[15885],"VmSafe":[15284]},"nodeType":"SourceUnit","src":"117:90686:14","nodes":[{"id":12074,"nodeType":"PragmaDirective","src":"117:31:14","nodes":[],"literals":["solidity",">=","0.6",".2","<","0.9",".0"]},{"id":12075,"nodeType":"PragmaDirective","src":"149:33:14","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":15284,"nodeType":"ContractDefinition","src":"409:75834:14","nodes":[{"id":12083,"nodeType":"EnumDefinition","src":"529:533:14","nodes":[],"canonicalName":"VmSafe.CallerMode","documentation":{"id":12077,"nodeType":"StructuredDocumentation","src":"432:92:14","text":"A modification applied to either `msg.sender` or `tx.origin`. Returned by `readCallers`."},"members":[{"id":12078,"name":"None","nameLocation":"610:4:14","nodeType":"EnumValue","src":"610:4:14"},{"id":12079,"name":"Broadcast","nameLocation":"714:9:14","nodeType":"EnumValue","src":"714:9:14"},{"id":12080,"name":"RecurrentBroadcast","nameLocation":"829:18:14","nodeType":"EnumValue","src":"829:18:14"},{"id":12081,"name":"Prank","nameLocation":"939:5:14","nodeType":"EnumValue","src":"939:5:14"},{"id":12082,"name":"RecurrentPrank","nameLocation":"1042:14:14","nodeType":"EnumValue","src":"1042:14:14"}],"name":"CallerMode","nameLocation":"534:10:14"},{"id":12096,"nodeType":"EnumDefinition","src":"1118:791:14","nodes":[],"canonicalName":"VmSafe.AccountAccessKind","documentation":{"id":12084,"nodeType":"StructuredDocumentation","src":"1068:45:14","text":"The kind of account access that occurred."},"members":[{"id":12085,"name":"Call","nameLocation":"1186:4:14","nodeType":"EnumValue","src":"1186:4:14"},{"id":12086,"name":"DelegateCall","nameLocation":"1252:12:14","nodeType":"EnumValue","src":"1252:12:14"},{"id":12087,"name":"CallCode","nameLocation":"1322:8:14","nodeType":"EnumValue","src":"1322:8:14"},{"id":12088,"name":"StaticCall","nameLocation":"1390:10:14","nodeType":"EnumValue","src":"1390:10:14"},{"id":12089,"name":"Create","nameLocation":"1446:6:14","nodeType":"EnumValue","src":"1446:6:14"},{"id":12090,"name":"SelfDestruct","nameLocation":"1505:12:14","nodeType":"EnumValue","src":"1505:12:14"},{"id":12091,"name":"Resume","nameLocation":"1644:6:14","nodeType":"EnumValue","src":"1644:6:14"},{"id":12092,"name":"Balance","nameLocation":"1703:7:14","nodeType":"EnumValue","src":"1703:7:14"},{"id":12093,"name":"Extcodesize","nameLocation":"1764:11:14","nodeType":"EnumValue","src":"1764:11:14"},{"id":12094,"name":"Extcodehash","nameLocation":"1829:11:14","nodeType":"EnumValue","src":"1829:11:14"},{"id":12095,"name":"Extcodecopy","nameLocation":"1892:11:14","nodeType":"EnumValue","src":"1892:11:14"}],"name":"AccountAccessKind","nameLocation":"1123:17:14"},{"id":12107,"nodeType":"EnumDefinition","src":"1949:683:14","nodes":[],"canonicalName":"VmSafe.ForgeContext","documentation":{"id":12097,"nodeType":"StructuredDocumentation","src":"1915:29:14","text":"Forge execution contexts."},"members":[{"id":12098,"name":"TestGroup","nameLocation":"2047:9:14","nodeType":"EnumValue","src":"2047:9:14"},{"id":12099,"name":"Test","nameLocation":"2109:4:14","nodeType":"EnumValue","src":"2109:4:14"},{"id":12100,"name":"Coverage","nameLocation":"2170:8:14","nodeType":"EnumValue","src":"2170:8:14"},{"id":12101,"name":"Snapshot","nameLocation":"2235:8:14","nodeType":"EnumValue","src":"2235:8:14"},{"id":12102,"name":"ScriptGroup","nameLocation":"2327:11:14","nodeType":"EnumValue","src":"2327:11:14"},{"id":12103,"name":"ScriptDryRun","nameLocation":"2393:12:14","nodeType":"EnumValue","src":"2393:12:14"},{"id":12104,"name":"ScriptBroadcast","nameLocation":"2472:15:14","nodeType":"EnumValue","src":"2472:15:14"},{"id":12105,"name":"ScriptResume","nameLocation":"2551:12:14","nodeType":"EnumValue","src":"2551:12:14"},{"id":12106,"name":"Unknown","nameLocation":"2619:7:14","nodeType":"EnumValue","src":"2619:7:14"}],"name":"ForgeContext","nameLocation":"1954:12:14"},{"id":12116,"nodeType":"StructDefinition","src":"2694:237:14","nodes":[],"canonicalName":"VmSafe.Log","documentation":{"id":12108,"nodeType":"StructuredDocumentation","src":"2638:51:14","text":"An Ethereum log. Returned by `getRecordedLogs`."},"members":[{"constant":false,"id":12111,"mutability":"mutable","name":"topics","nameLocation":"2792:6:14","nodeType":"VariableDeclaration","scope":12116,"src":"2782:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12109,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2782:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12110,"nodeType":"ArrayTypeName","src":"2782:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":12113,"mutability":"mutable","name":"data","nameLocation":"2850:4:14","nodeType":"VariableDeclaration","scope":12116,"src":"2844:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12112,"name":"bytes","nodeType":"ElementaryTypeName","src":"2844:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12115,"mutability":"mutable","name":"emitter","nameLocation":"2917:7:14","nodeType":"VariableDeclaration","scope":12116,"src":"2909:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12114,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Log","nameLocation":"2701:3:14","scope":15284,"visibility":"public"},{"id":12122,"nodeType":"StructDefinition","src":"3000:119:14","nodes":[],"canonicalName":"VmSafe.Rpc","documentation":{"id":12117,"nodeType":"StructuredDocumentation","src":"2937:58:14","text":"An RPC URL and its alias. Returned by `rpcUrlStructs`."},"members":[{"constant":false,"id":12119,"mutability":"mutable","name":"key","nameLocation":"3065:3:14","nodeType":"VariableDeclaration","scope":12122,"src":"3058:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12118,"name":"string","nodeType":"ElementaryTypeName","src":"3058:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12121,"mutability":"mutable","name":"url","nameLocation":"3109:3:14","nodeType":"VariableDeclaration","scope":12122,"src":"3102:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12120,"name":"string","nodeType":"ElementaryTypeName","src":"3102:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Rpc","nameLocation":"3007:3:14","scope":15284,"visibility":"public"},{"id":12143,"nodeType":"StructDefinition","src":"3179:615:14","nodes":[],"canonicalName":"VmSafe.EthGetLogs","documentation":{"id":12123,"nodeType":"StructuredDocumentation","src":"3125:49:14","text":"An RPC log object. Returned by `eth_getLogs`."},"members":[{"constant":false,"id":12125,"mutability":"mutable","name":"emitter","nameLocation":"3260:7:14","nodeType":"VariableDeclaration","scope":12143,"src":"3252:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12124,"name":"address","nodeType":"ElementaryTypeName","src":"3252:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12128,"mutability":"mutable","name":"topics","nameLocation":"3354:6:14","nodeType":"VariableDeclaration","scope":12143,"src":"3344:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12126,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3344:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12127,"nodeType":"ArrayTypeName","src":"3344:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":12130,"mutability":"mutable","name":"data","nameLocation":"3412:4:14","nodeType":"VariableDeclaration","scope":12143,"src":"3406:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12129,"name":"bytes","nodeType":"ElementaryTypeName","src":"3406:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12132,"mutability":"mutable","name":"blockHash","nameLocation":"3461:9:14","nodeType":"VariableDeclaration","scope":12143,"src":"3453:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3453:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12134,"mutability":"mutable","name":"blockNumber","nameLocation":"3516:11:14","nodeType":"VariableDeclaration","scope":12143,"src":"3509:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12133,"name":"uint64","nodeType":"ElementaryTypeName","src":"3509:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12136,"mutability":"mutable","name":"transactionHash","nameLocation":"3578:15:14","nodeType":"VariableDeclaration","scope":12143,"src":"3570:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3570:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12138,"mutability":"mutable","name":"transactionIndex","nameLocation":"3657:16:14","nodeType":"VariableDeclaration","scope":12143,"src":"3650:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12137,"name":"uint64","nodeType":"ElementaryTypeName","src":"3650:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12140,"mutability":"mutable","name":"logIndex","nameLocation":"3717:8:14","nodeType":"VariableDeclaration","scope":12143,"src":"3709:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12139,"name":"uint256","nodeType":"ElementaryTypeName","src":"3709:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12142,"mutability":"mutable","name":"removed","nameLocation":"3780:7:14","nodeType":"VariableDeclaration","scope":12143,"src":"3775:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12141,"name":"bool","nodeType":"ElementaryTypeName","src":"3775:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"EthGetLogs","nameLocation":"3186:10:14","scope":15284,"visibility":"public"},{"id":12155,"nodeType":"StructDefinition","src":"3870:334:14","nodes":[],"canonicalName":"VmSafe.DirEntry","documentation":{"id":12144,"nodeType":"StructuredDocumentation","src":"3800:65:14","text":"A single entry in a directory listing. Returned by `readDir`."},"members":[{"constant":false,"id":12146,"mutability":"mutable","name":"errorMessage","nameLocation":"3941:12:14","nodeType":"VariableDeclaration","scope":12155,"src":"3934:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12145,"name":"string","nodeType":"ElementaryTypeName","src":"3934:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12148,"mutability":"mutable","name":"path","nameLocation":"4004:4:14","nodeType":"VariableDeclaration","scope":12155,"src":"3997:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12147,"name":"string","nodeType":"ElementaryTypeName","src":"3997:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12150,"mutability":"mutable","name":"depth","nameLocation":"4060:5:14","nodeType":"VariableDeclaration","scope":12155,"src":"4053:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12149,"name":"uint64","nodeType":"ElementaryTypeName","src":"4053:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12152,"mutability":"mutable","name":"isDir","nameLocation":"4125:5:14","nodeType":"VariableDeclaration","scope":12155,"src":"4120:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12151,"name":"bool","nodeType":"ElementaryTypeName","src":"4120:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12154,"mutability":"mutable","name":"isSymlink","nameLocation":"4188:9:14","nodeType":"VariableDeclaration","scope":12155,"src":"4183:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12153,"name":"bool","nodeType":"ElementaryTypeName","src":"4183:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"DirEntry","nameLocation":"3877:8:14","scope":15284,"visibility":"public"},{"id":12171,"nodeType":"StructDefinition","src":"4434:599:14","nodes":[],"canonicalName":"VmSafe.FsMetadata","documentation":{"id":12156,"nodeType":"StructuredDocumentation","src":"4210:219:14","text":"Metadata information about a file.\n This structure is returned from the `fsMetadata` function and represents known\n metadata about a file such as its permissions, size, modification\n times, etc."},"members":[{"constant":false,"id":12158,"mutability":"mutable","name":"isDir","nameLocation":"4520:5:14","nodeType":"VariableDeclaration","scope":12171,"src":"4515:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12157,"name":"bool","nodeType":"ElementaryTypeName","src":"4515:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12160,"mutability":"mutable","name":"isSymlink","nameLocation":"4591:9:14","nodeType":"VariableDeclaration","scope":12171,"src":"4586:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12159,"name":"bool","nodeType":"ElementaryTypeName","src":"4586:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12162,"mutability":"mutable","name":"length","nameLocation":"4683:6:14","nodeType":"VariableDeclaration","scope":12171,"src":"4675:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12161,"name":"uint256","nodeType":"ElementaryTypeName","src":"4675:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12164,"mutability":"mutable","name":"readOnly","nameLocation":"4774:8:14","nodeType":"VariableDeclaration","scope":12171,"src":"4769:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12163,"name":"bool","nodeType":"ElementaryTypeName","src":"4769:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12166,"mutability":"mutable","name":"modified","nameLocation":"4863:8:14","nodeType":"VariableDeclaration","scope":12171,"src":"4855:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12165,"name":"uint256","nodeType":"ElementaryTypeName","src":"4855:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12168,"mutability":"mutable","name":"accessed","nameLocation":"4939:8:14","nodeType":"VariableDeclaration","scope":12171,"src":"4931:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12167,"name":"uint256","nodeType":"ElementaryTypeName","src":"4931:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12170,"mutability":"mutable","name":"created","nameLocation":"5019:7:14","nodeType":"VariableDeclaration","scope":12171,"src":"5011:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12169,"name":"uint256","nodeType":"ElementaryTypeName","src":"5011:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FsMetadata","nameLocation":"4441:10:14","scope":15284,"visibility":"public"},{"id":12181,"nodeType":"StructDefinition","src":"5087:277:14","nodes":[],"canonicalName":"VmSafe.Wallet","documentation":{"id":12172,"nodeType":"StructuredDocumentation","src":"5039:43:14","text":"A wallet with a public and private key."},"members":[{"constant":false,"id":12174,"mutability":"mutable","name":"addr","nameLocation":"5152:4:14","nodeType":"VariableDeclaration","scope":12181,"src":"5144:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12173,"name":"address","nodeType":"ElementaryTypeName","src":"5144:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12176,"mutability":"mutable","name":"publicKeyX","nameLocation":"5214:10:14","nodeType":"VariableDeclaration","scope":12181,"src":"5206:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12175,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12178,"mutability":"mutable","name":"publicKeyY","nameLocation":"5282:10:14","nodeType":"VariableDeclaration","scope":12181,"src":"5274:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12177,"name":"uint256","nodeType":"ElementaryTypeName","src":"5274:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12180,"mutability":"mutable","name":"privateKey","nameLocation":"5347:10:14","nodeType":"VariableDeclaration","scope":12181,"src":"5339:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12179,"name":"uint256","nodeType":"ElementaryTypeName","src":"5339:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Wallet","nameLocation":"5094:6:14","scope":15284,"visibility":"public"},{"id":12189,"nodeType":"StructDefinition","src":"5409:213:14","nodes":[],"canonicalName":"VmSafe.FfiResult","documentation":{"id":12182,"nodeType":"StructuredDocumentation","src":"5370:34:14","text":"The result of a `tryFfi` call."},"members":[{"constant":false,"id":12184,"mutability":"mutable","name":"exitCode","nameLocation":"5480:8:14","nodeType":"VariableDeclaration","scope":12189,"src":"5474:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":12183,"name":"int32","nodeType":"ElementaryTypeName","src":"5474:5:14","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":12186,"mutability":"mutable","name":"stdout","nameLocation":"5557:6:14","nodeType":"VariableDeclaration","scope":12189,"src":"5551:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12185,"name":"bytes","nodeType":"ElementaryTypeName","src":"5551:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12188,"mutability":"mutable","name":"stderr","nameLocation":"5609:6:14","nodeType":"VariableDeclaration","scope":12189,"src":"5603:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12187,"name":"bytes","nodeType":"ElementaryTypeName","src":"5603:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"FfiResult","nameLocation":"5416:9:14","scope":15284,"visibility":"public"},{"id":12195,"nodeType":"StructDefinition","src":"5671:184:14","nodes":[],"canonicalName":"VmSafe.ChainInfo","documentation":{"id":12190,"nodeType":"StructuredDocumentation","src":"5628:38:14","text":"Information on the chain and fork."},"members":[{"constant":false,"id":12192,"mutability":"mutable","name":"forkId","nameLocation":"5772:6:14","nodeType":"VariableDeclaration","scope":12195,"src":"5764:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12191,"name":"uint256","nodeType":"ElementaryTypeName","src":"5764:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12194,"mutability":"mutable","name":"chainId","nameLocation":"5841:7:14","nodeType":"VariableDeclaration","scope":12195,"src":"5833:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12193,"name":"uint256","nodeType":"ElementaryTypeName","src":"5833:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ChainInfo","nameLocation":"5678:9:14","scope":15284,"visibility":"public"},{"id":12227,"nodeType":"StructDefinition","src":"5916:1837:14","nodes":[],"canonicalName":"VmSafe.AccountAccess","documentation":{"id":12196,"nodeType":"StructuredDocumentation","src":"5861:50:14","text":"The result of a `stopAndReturnStateDiff` call."},"members":[{"constant":false,"id":12199,"mutability":"mutable","name":"chainInfo","nameLocation":"6008:9:14","nodeType":"VariableDeclaration","scope":12227,"src":"5998:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$12195_storage_ptr","typeString":"struct VmSafe.ChainInfo"},"typeName":{"id":12198,"nodeType":"UserDefinedTypeName","pathNode":{"id":12197,"name":"ChainInfo","nameLocations":["5998:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":12195,"src":"5998:9:14"},"referencedDeclaration":12195,"src":"5998:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$12195_storage_ptr","typeString":"struct VmSafe.ChainInfo"}},"visibility":"internal"},{"constant":false,"id":12202,"mutability":"mutable","name":"kind","nameLocation":"6471:4:14","nodeType":"VariableDeclaration","scope":12227,"src":"6453:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$12096","typeString":"enum VmSafe.AccountAccessKind"},"typeName":{"id":12201,"nodeType":"UserDefinedTypeName","pathNode":{"id":12200,"name":"AccountAccessKind","nameLocations":["6453:17:14"],"nodeType":"IdentifierPath","referencedDeclaration":12096,"src":"6453:17:14"},"referencedDeclaration":12096,"src":"6453:17:14","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$12096","typeString":"enum VmSafe.AccountAccessKind"}},"visibility":"internal"},{"constant":false,"id":12204,"mutability":"mutable","name":"account","nameLocation":"6648:7:14","nodeType":"VariableDeclaration","scope":12227,"src":"6640:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12203,"name":"address","nodeType":"ElementaryTypeName","src":"6640:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12206,"mutability":"mutable","name":"accessor","nameLocation":"6711:8:14","nodeType":"VariableDeclaration","scope":12227,"src":"6703:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12205,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12208,"mutability":"mutable","name":"initialized","nameLocation":"6922:11:14","nodeType":"VariableDeclaration","scope":12227,"src":"6917:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12207,"name":"bool","nodeType":"ElementaryTypeName","src":"6917:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12210,"mutability":"mutable","name":"oldBalance","nameLocation":"7008:10:14","nodeType":"VariableDeclaration","scope":12227,"src":"7000:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12209,"name":"uint256","nodeType":"ElementaryTypeName","src":"7000:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12212,"mutability":"mutable","name":"newBalance","nameLocation":"7183:10:14","nodeType":"VariableDeclaration","scope":12227,"src":"7175:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12211,"name":"uint256","nodeType":"ElementaryTypeName","src":"7175:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12214,"mutability":"mutable","name":"deployedCode","nameLocation":"7260:12:14","nodeType":"VariableDeclaration","scope":12227,"src":"7254:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12213,"name":"bytes","nodeType":"ElementaryTypeName","src":"7254:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12216,"mutability":"mutable","name":"value","nameLocation":"7344:5:14","nodeType":"VariableDeclaration","scope":12227,"src":"7336:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12215,"name":"uint256","nodeType":"ElementaryTypeName","src":"7336:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12218,"mutability":"mutable","name":"data","nameLocation":"7418:4:14","nodeType":"VariableDeclaration","scope":12227,"src":"7412:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12217,"name":"bytes","nodeType":"ElementaryTypeName","src":"7412:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12220,"mutability":"mutable","name":"reverted","nameLocation":"7513:8:14","nodeType":"VariableDeclaration","scope":12227,"src":"7508:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12219,"name":"bool","nodeType":"ElementaryTypeName","src":"7508:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12224,"mutability":"mutable","name":"storageAccesses","nameLocation":"7635:15:14","nodeType":"VariableDeclaration","scope":12227,"src":"7619:31:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$12241_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"},"typeName":{"baseType":{"id":12222,"nodeType":"UserDefinedTypeName","pathNode":{"id":12221,"name":"StorageAccess","nameLocations":["7619:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":12241,"src":"7619:13:14"},"referencedDeclaration":12241,"src":"7619:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_StorageAccess_$12241_storage_ptr","typeString":"struct VmSafe.StorageAccess"}},"id":12223,"nodeType":"ArrayTypeName","src":"7619:15:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$12241_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"}},"visibility":"internal"},{"constant":false,"id":12226,"mutability":"mutable","name":"depth","nameLocation":"7741:5:14","nodeType":"VariableDeclaration","scope":12227,"src":"7734:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12225,"name":"uint64","nodeType":"ElementaryTypeName","src":"7734:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"AccountAccess","nameLocation":"5923:13:14","scope":15284,"visibility":"public"},{"id":12241,"nodeType":"StructDefinition","src":"7815:425:14","nodes":[],"canonicalName":"VmSafe.StorageAccess","documentation":{"id":12228,"nodeType":"StructuredDocumentation","src":"7759:51:14","text":"The storage accessed during an `AccountAccess`."},"members":[{"constant":false,"id":12230,"mutability":"mutable","name":"account","nameLocation":"7905:7:14","nodeType":"VariableDeclaration","scope":12241,"src":"7897:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12229,"name":"address","nodeType":"ElementaryTypeName","src":"7897:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12232,"mutability":"mutable","name":"slot","nameLocation":"7969:4:14","nodeType":"VariableDeclaration","scope":12241,"src":"7961:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7961:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12234,"mutability":"mutable","name":"isWrite","nameLocation":"8026:7:14","nodeType":"VariableDeclaration","scope":12241,"src":"8021:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12233,"name":"bool","nodeType":"ElementaryTypeName","src":"8021:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12236,"mutability":"mutable","name":"previousValue","nameLocation":"8094:13:14","nodeType":"VariableDeclaration","scope":12241,"src":"8086:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12235,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8086:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12238,"mutability":"mutable","name":"newValue","nameLocation":"8163:8:14","nodeType":"VariableDeclaration","scope":12241,"src":"8155:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8155:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12240,"mutability":"mutable","name":"reverted","nameLocation":"8225:8:14","nodeType":"VariableDeclaration","scope":12241,"src":"8220:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12239,"name":"bool","nodeType":"ElementaryTypeName","src":"8220:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StorageAccess","nameLocation":"7822:13:14","scope":15284,"visibility":"public"},{"id":12253,"nodeType":"StructDefinition","src":"8291:362:14","nodes":[],"canonicalName":"VmSafe.Gas","documentation":{"id":12242,"nodeType":"StructuredDocumentation","src":"8246:40:14","text":"Gas used. Returned by `lastCallGas`."},"members":[{"constant":false,"id":12244,"mutability":"mutable","name":"gasLimit","nameLocation":"8357:8:14","nodeType":"VariableDeclaration","scope":12253,"src":"8350:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12243,"name":"uint64","nodeType":"ElementaryTypeName","src":"8350:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12246,"mutability":"mutable","name":"gasTotalUsed","nameLocation":"8413:12:14","nodeType":"VariableDeclaration","scope":12253,"src":"8406:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12245,"name":"uint64","nodeType":"ElementaryTypeName","src":"8406:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12248,"mutability":"mutable","name":"gasMemoryUsed","nameLocation":"8498:13:14","nodeType":"VariableDeclaration","scope":12253,"src":"8491:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12247,"name":"uint64","nodeType":"ElementaryTypeName","src":"8491:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12250,"mutability":"mutable","name":"gasRefunded","nameLocation":"8566:11:14","nodeType":"VariableDeclaration","scope":12253,"src":"8560:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":12249,"name":"int64","nodeType":"ElementaryTypeName","src":"8560:5:14","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":12252,"mutability":"mutable","name":"gasRemaining","nameLocation":"8634:12:14","nodeType":"VariableDeclaration","scope":12253,"src":"8627:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12251,"name":"uint64","nodeType":"ElementaryTypeName","src":"8627:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Gas","nameLocation":"8298:3:14","scope":15284,"visibility":"public"},{"id":12261,"nodeType":"FunctionDefinition","src":"8840:80:14","nodes":[],"documentation":{"id":12254,"nodeType":"StructuredDocumentation","src":"8697:138:14","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"350d56bf","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"8849:10:14","parameters":{"id":12257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12256,"mutability":"mutable","name":"name","nameLocation":"8876:4:14","nodeType":"VariableDeclaration","scope":12261,"src":"8860:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12255,"name":"string","nodeType":"ElementaryTypeName","src":"8860:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8859:22:14"},"returnParameters":{"id":12260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12259,"mutability":"mutable","name":"value","nameLocation":"8913:5:14","nodeType":"VariableDeclaration","scope":12261,"src":"8905:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12258,"name":"address","nodeType":"ElementaryTypeName","src":"8905:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8904:15:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12272,"nodeType":"FunctionDefinition","src":"9103:112:14","nodes":[],"documentation":{"id":12262,"nodeType":"StructuredDocumentation","src":"8926:172:14","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ad31b9fa","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"9112:10:14","parameters":{"id":12267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12264,"mutability":"mutable","name":"name","nameLocation":"9139:4:14","nodeType":"VariableDeclaration","scope":12272,"src":"9123:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12263,"name":"string","nodeType":"ElementaryTypeName","src":"9123:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12266,"mutability":"mutable","name":"delim","nameLocation":"9161:5:14","nodeType":"VariableDeclaration","scope":12272,"src":"9145:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12265,"name":"string","nodeType":"ElementaryTypeName","src":"9145:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9122:45:14"},"returnParameters":{"id":12271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12270,"mutability":"mutable","name":"value","nameLocation":"9208:5:14","nodeType":"VariableDeclaration","scope":12272,"src":"9191:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":12268,"name":"address","nodeType":"ElementaryTypeName","src":"9191:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12269,"nodeType":"ArrayTypeName","src":"9191:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"9190:24:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12280,"nodeType":"FunctionDefinition","src":"9361:74:14","nodes":[],"documentation":{"id":12273,"nodeType":"StructuredDocumentation","src":"9221:135:14","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"7ed1ec7d","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"9370:7:14","parameters":{"id":12276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12275,"mutability":"mutable","name":"name","nameLocation":"9394:4:14","nodeType":"VariableDeclaration","scope":12280,"src":"9378:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12274,"name":"string","nodeType":"ElementaryTypeName","src":"9378:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9377:22:14"},"returnParameters":{"id":12279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12278,"mutability":"mutable","name":"value","nameLocation":"9428:5:14","nodeType":"VariableDeclaration","scope":12280,"src":"9423:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12277,"name":"bool","nodeType":"ElementaryTypeName","src":"9423:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9422:12:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12291,"nodeType":"FunctionDefinition","src":"9615:106:14","nodes":[],"documentation":{"id":12281,"nodeType":"StructuredDocumentation","src":"9441:169:14","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"aaaddeaf","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"9624:7:14","parameters":{"id":12286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12283,"mutability":"mutable","name":"name","nameLocation":"9648:4:14","nodeType":"VariableDeclaration","scope":12291,"src":"9632:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12282,"name":"string","nodeType":"ElementaryTypeName","src":"9632:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12285,"mutability":"mutable","name":"delim","nameLocation":"9670:5:14","nodeType":"VariableDeclaration","scope":12291,"src":"9654:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12284,"name":"string","nodeType":"ElementaryTypeName","src":"9654:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9631:45:14"},"returnParameters":{"id":12290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12289,"mutability":"mutable","name":"value","nameLocation":"9714:5:14","nodeType":"VariableDeclaration","scope":12291,"src":"9700:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":12287,"name":"bool","nodeType":"ElementaryTypeName","src":"9700:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12288,"nodeType":"ArrayTypeName","src":"9700:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"9699:21:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12299,"nodeType":"FunctionDefinition","src":"9870:80:14","nodes":[],"documentation":{"id":12292,"nodeType":"StructuredDocumentation","src":"9727:138:14","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"97949042","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"9879:10:14","parameters":{"id":12295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12294,"mutability":"mutable","name":"name","nameLocation":"9906:4:14","nodeType":"VariableDeclaration","scope":12299,"src":"9890:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12293,"name":"string","nodeType":"ElementaryTypeName","src":"9890:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9889:22:14"},"returnParameters":{"id":12298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12297,"mutability":"mutable","name":"value","nameLocation":"9943:5:14","nodeType":"VariableDeclaration","scope":12299,"src":"9935:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12296,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9935:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9934:15:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12310,"nodeType":"FunctionDefinition","src":"10133:112:14","nodes":[],"documentation":{"id":12300,"nodeType":"StructuredDocumentation","src":"9956:172:14","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"5af231c1","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"10142:10:14","parameters":{"id":12305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12302,"mutability":"mutable","name":"name","nameLocation":"10169:4:14","nodeType":"VariableDeclaration","scope":12310,"src":"10153:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12301,"name":"string","nodeType":"ElementaryTypeName","src":"10153:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12304,"mutability":"mutable","name":"delim","nameLocation":"10191:5:14","nodeType":"VariableDeclaration","scope":12310,"src":"10175:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12303,"name":"string","nodeType":"ElementaryTypeName","src":"10175:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10152:45:14"},"returnParameters":{"id":12309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12308,"mutability":"mutable","name":"value","nameLocation":"10238:5:14","nodeType":"VariableDeclaration","scope":12310,"src":"10221:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12306,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10221:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12307,"nodeType":"ArrayTypeName","src":"10221:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"10220:24:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12318,"nodeType":"FunctionDefinition","src":"10392:83:14","nodes":[],"documentation":{"id":12311,"nodeType":"StructuredDocumentation","src":"10251:136:14","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"4d7baf06","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"10401:8:14","parameters":{"id":12314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12313,"mutability":"mutable","name":"name","nameLocation":"10426:4:14","nodeType":"VariableDeclaration","scope":12318,"src":"10410:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12312,"name":"string","nodeType":"ElementaryTypeName","src":"10410:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10409:22:14"},"returnParameters":{"id":12317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12316,"mutability":"mutable","name":"value","nameLocation":"10468:5:14","nodeType":"VariableDeclaration","scope":12318,"src":"10455:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12315,"name":"bytes","nodeType":"ElementaryTypeName","src":"10455:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10454:20:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12329,"nodeType":"FunctionDefinition","src":"10656:108:14","nodes":[],"documentation":{"id":12319,"nodeType":"StructuredDocumentation","src":"10481:170:14","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ddc2651b","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"10665:8:14","parameters":{"id":12324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12321,"mutability":"mutable","name":"name","nameLocation":"10690:4:14","nodeType":"VariableDeclaration","scope":12329,"src":"10674:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12320,"name":"string","nodeType":"ElementaryTypeName","src":"10674:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12323,"mutability":"mutable","name":"delim","nameLocation":"10712:5:14","nodeType":"VariableDeclaration","scope":12329,"src":"10696:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12322,"name":"string","nodeType":"ElementaryTypeName","src":"10696:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10673:45:14"},"returnParameters":{"id":12328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12327,"mutability":"mutable","name":"value","nameLocation":"10757:5:14","nodeType":"VariableDeclaration","scope":12329,"src":"10742:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":12325,"name":"bytes","nodeType":"ElementaryTypeName","src":"10742:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":12326,"nodeType":"ArrayTypeName","src":"10742:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"10741:22:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12337,"nodeType":"FunctionDefinition","src":"10866:77:14","nodes":[],"documentation":{"id":12330,"nodeType":"StructuredDocumentation","src":"10770:91:14","text":"Gets the environment variable `name` and returns true if it exists, else returns false."},"functionSelector":"ce8365f9","implemented":false,"kind":"function","modifiers":[],"name":"envExists","nameLocation":"10875:9:14","parameters":{"id":12333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12332,"mutability":"mutable","name":"name","nameLocation":"10901:4:14","nodeType":"VariableDeclaration","scope":12337,"src":"10885:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12331,"name":"string","nodeType":"ElementaryTypeName","src":"10885:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10884:22:14"},"returnParameters":{"id":12336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12335,"mutability":"mutable","name":"result","nameLocation":"10935:6:14","nodeType":"VariableDeclaration","scope":12337,"src":"10930:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12334,"name":"bool","nodeType":"ElementaryTypeName","src":"10930:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10929:13:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12345,"nodeType":"FunctionDefinition","src":"11091:75:14","nodes":[],"documentation":{"id":12338,"nodeType":"StructuredDocumentation","src":"10949:137:14","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"892a0c61","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"11100:6:14","parameters":{"id":12341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12340,"mutability":"mutable","name":"name","nameLocation":"11123:4:14","nodeType":"VariableDeclaration","scope":12345,"src":"11107:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12339,"name":"string","nodeType":"ElementaryTypeName","src":"11107:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11106:22:14"},"returnParameters":{"id":12344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12343,"mutability":"mutable","name":"value","nameLocation":"11159:5:14","nodeType":"VariableDeclaration","scope":12345,"src":"11152:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12342,"name":"int256","nodeType":"ElementaryTypeName","src":"11152:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"11151:14:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12356,"nodeType":"FunctionDefinition","src":"11348:107:14","nodes":[],"documentation":{"id":12346,"nodeType":"StructuredDocumentation","src":"11172:171:14","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"42181150","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"11357:6:14","parameters":{"id":12351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12348,"mutability":"mutable","name":"name","nameLocation":"11380:4:14","nodeType":"VariableDeclaration","scope":12356,"src":"11364:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12347,"name":"string","nodeType":"ElementaryTypeName","src":"11364:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12350,"mutability":"mutable","name":"delim","nameLocation":"11402:5:14","nodeType":"VariableDeclaration","scope":12356,"src":"11386:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12349,"name":"string","nodeType":"ElementaryTypeName","src":"11386:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11363:45:14"},"returnParameters":{"id":12355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12354,"mutability":"mutable","name":"value","nameLocation":"11448:5:14","nodeType":"VariableDeclaration","scope":12356,"src":"11432:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":12352,"name":"int256","nodeType":"ElementaryTypeName","src":"11432:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":12353,"nodeType":"ArrayTypeName","src":"11432:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"11431:23:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12366,"nodeType":"FunctionDefinition","src":"11646:91:14","nodes":[],"documentation":{"id":12357,"nodeType":"StructuredDocumentation","src":"11461:180:14","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4777f3cf","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"11655:5:14","parameters":{"id":12362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12359,"mutability":"mutable","name":"name","nameLocation":"11677:4:14","nodeType":"VariableDeclaration","scope":12366,"src":"11661:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12358,"name":"string","nodeType":"ElementaryTypeName","src":"11661:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12361,"mutability":"mutable","name":"defaultValue","nameLocation":"11688:12:14","nodeType":"VariableDeclaration","scope":12366,"src":"11683:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12360,"name":"bool","nodeType":"ElementaryTypeName","src":"11683:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11660:41:14"},"returnParameters":{"id":12365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12364,"mutability":"mutable","name":"value","nameLocation":"11730:5:14","nodeType":"VariableDeclaration","scope":12366,"src":"11725:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12363,"name":"bool","nodeType":"ElementaryTypeName","src":"11725:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11724:12:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12376,"nodeType":"FunctionDefinition","src":"11931:97:14","nodes":[],"documentation":{"id":12367,"nodeType":"StructuredDocumentation","src":"11743:183:14","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"5e97348f","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"11940:5:14","parameters":{"id":12372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12369,"mutability":"mutable","name":"name","nameLocation":"11962:4:14","nodeType":"VariableDeclaration","scope":12376,"src":"11946:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12368,"name":"string","nodeType":"ElementaryTypeName","src":"11946:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12371,"mutability":"mutable","name":"defaultValue","nameLocation":"11976:12:14","nodeType":"VariableDeclaration","scope":12376,"src":"11968:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12370,"name":"uint256","nodeType":"ElementaryTypeName","src":"11968:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11945:44:14"},"returnParameters":{"id":12375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12374,"mutability":"mutable","name":"value","nameLocation":"12021:5:14","nodeType":"VariableDeclaration","scope":12376,"src":"12013:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12373,"name":"uint256","nodeType":"ElementaryTypeName","src":"12013:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12012:15:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12390,"nodeType":"FunctionDefinition","src":"12256:164:14","nodes":[],"documentation":{"id":12377,"nodeType":"StructuredDocumentation","src":"12034:217:14","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"c74e9deb","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"12265:5:14","parameters":{"id":12385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12379,"mutability":"mutable","name":"name","nameLocation":"12287:4:14","nodeType":"VariableDeclaration","scope":12390,"src":"12271:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12378,"name":"string","nodeType":"ElementaryTypeName","src":"12271:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12381,"mutability":"mutable","name":"delim","nameLocation":"12309:5:14","nodeType":"VariableDeclaration","scope":12390,"src":"12293:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12380,"name":"string","nodeType":"ElementaryTypeName","src":"12293:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12384,"mutability":"mutable","name":"defaultValue","nameLocation":"12335:12:14","nodeType":"VariableDeclaration","scope":12390,"src":"12316:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":12382,"name":"address","nodeType":"ElementaryTypeName","src":"12316:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12383,"nodeType":"ArrayTypeName","src":"12316:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"12270:78:14"},"returnParameters":{"id":12389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12388,"mutability":"mutable","name":"value","nameLocation":"12413:5:14","nodeType":"VariableDeclaration","scope":12390,"src":"12396:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":12386,"name":"address","nodeType":"ElementaryTypeName","src":"12396:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12387,"nodeType":"ArrayTypeName","src":"12396:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"12395:24:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12404,"nodeType":"FunctionDefinition","src":"12648:164:14","nodes":[],"documentation":{"id":12391,"nodeType":"StructuredDocumentation","src":"12426:217:14","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"2281f367","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"12657:5:14","parameters":{"id":12399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12393,"mutability":"mutable","name":"name","nameLocation":"12679:4:14","nodeType":"VariableDeclaration","scope":12404,"src":"12663:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12392,"name":"string","nodeType":"ElementaryTypeName","src":"12663:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12395,"mutability":"mutable","name":"delim","nameLocation":"12701:5:14","nodeType":"VariableDeclaration","scope":12404,"src":"12685:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12394,"name":"string","nodeType":"ElementaryTypeName","src":"12685:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12398,"mutability":"mutable","name":"defaultValue","nameLocation":"12727:12:14","nodeType":"VariableDeclaration","scope":12404,"src":"12708:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12708:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12397,"nodeType":"ArrayTypeName","src":"12708:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"12662:78:14"},"returnParameters":{"id":12403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12402,"mutability":"mutable","name":"value","nameLocation":"12805:5:14","nodeType":"VariableDeclaration","scope":12404,"src":"12788:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12400,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12788:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12401,"nodeType":"ArrayTypeName","src":"12788:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"12787:24:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12418,"nodeType":"FunctionDefinition","src":"13039:162:14","nodes":[],"documentation":{"id":12405,"nodeType":"StructuredDocumentation","src":"12818:216:14","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"859216bc","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13048:5:14","parameters":{"id":12413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12407,"mutability":"mutable","name":"name","nameLocation":"13070:4:14","nodeType":"VariableDeclaration","scope":12418,"src":"13054:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12406,"name":"string","nodeType":"ElementaryTypeName","src":"13054:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12409,"mutability":"mutable","name":"delim","nameLocation":"13092:5:14","nodeType":"VariableDeclaration","scope":12418,"src":"13076:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12408,"name":"string","nodeType":"ElementaryTypeName","src":"13076:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12412,"mutability":"mutable","name":"defaultValue","nameLocation":"13117:12:14","nodeType":"VariableDeclaration","scope":12418,"src":"13099:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12410,"name":"string","nodeType":"ElementaryTypeName","src":"13099:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12411,"nodeType":"ArrayTypeName","src":"13099:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"13053:77:14"},"returnParameters":{"id":12417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12416,"mutability":"mutable","name":"value","nameLocation":"13194:5:14","nodeType":"VariableDeclaration","scope":12418,"src":"13178:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12414,"name":"string","nodeType":"ElementaryTypeName","src":"13178:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12415,"nodeType":"ArrayTypeName","src":"13178:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"13177:23:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12432,"nodeType":"FunctionDefinition","src":"13427:160:14","nodes":[],"documentation":{"id":12419,"nodeType":"StructuredDocumentation","src":"13207:215:14","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"64bc3e64","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13436:5:14","parameters":{"id":12427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12421,"mutability":"mutable","name":"name","nameLocation":"13458:4:14","nodeType":"VariableDeclaration","scope":12432,"src":"13442:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12420,"name":"string","nodeType":"ElementaryTypeName","src":"13442:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12423,"mutability":"mutable","name":"delim","nameLocation":"13480:5:14","nodeType":"VariableDeclaration","scope":12432,"src":"13464:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12422,"name":"string","nodeType":"ElementaryTypeName","src":"13464:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12426,"mutability":"mutable","name":"defaultValue","nameLocation":"13504:12:14","nodeType":"VariableDeclaration","scope":12432,"src":"13487:29:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":12424,"name":"bytes","nodeType":"ElementaryTypeName","src":"13487:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":12425,"nodeType":"ArrayTypeName","src":"13487:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13441:76:14"},"returnParameters":{"id":12431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12430,"mutability":"mutable","name":"value","nameLocation":"13580:5:14","nodeType":"VariableDeclaration","scope":12432,"src":"13565:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":12428,"name":"bytes","nodeType":"ElementaryTypeName","src":"13565:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":12429,"nodeType":"ArrayTypeName","src":"13565:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13564:22:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12442,"nodeType":"FunctionDefinition","src":"13780:95:14","nodes":[],"documentation":{"id":12433,"nodeType":"StructuredDocumentation","src":"13593:182:14","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"bbcb713e","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13789:5:14","parameters":{"id":12438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12435,"mutability":"mutable","name":"name","nameLocation":"13811:4:14","nodeType":"VariableDeclaration","scope":12442,"src":"13795:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12434,"name":"string","nodeType":"ElementaryTypeName","src":"13795:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12437,"mutability":"mutable","name":"defaultValue","nameLocation":"13824:12:14","nodeType":"VariableDeclaration","scope":12442,"src":"13817:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12436,"name":"int256","nodeType":"ElementaryTypeName","src":"13817:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"13794:43:14"},"returnParameters":{"id":12441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12440,"mutability":"mutable","name":"value","nameLocation":"13868:5:14","nodeType":"VariableDeclaration","scope":12442,"src":"13861:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12439,"name":"int256","nodeType":"ElementaryTypeName","src":"13861:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"13860:14:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12452,"nodeType":"FunctionDefinition","src":"14069:97:14","nodes":[],"documentation":{"id":12443,"nodeType":"StructuredDocumentation","src":"13881:183:14","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"561fe540","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14078:5:14","parameters":{"id":12448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12445,"mutability":"mutable","name":"name","nameLocation":"14100:4:14","nodeType":"VariableDeclaration","scope":12452,"src":"14084:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12444,"name":"string","nodeType":"ElementaryTypeName","src":"14084:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12447,"mutability":"mutable","name":"defaultValue","nameLocation":"14114:12:14","nodeType":"VariableDeclaration","scope":12452,"src":"14106:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12446,"name":"address","nodeType":"ElementaryTypeName","src":"14106:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14083:44:14"},"returnParameters":{"id":12451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12450,"mutability":"mutable","name":"value","nameLocation":"14159:5:14","nodeType":"VariableDeclaration","scope":12452,"src":"14151:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12449,"name":"address","nodeType":"ElementaryTypeName","src":"14151:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14150:15:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12462,"nodeType":"FunctionDefinition","src":"14360:97:14","nodes":[],"documentation":{"id":12453,"nodeType":"StructuredDocumentation","src":"14172:183:14","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b4a85892","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14369:5:14","parameters":{"id":12458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12455,"mutability":"mutable","name":"name","nameLocation":"14391:4:14","nodeType":"VariableDeclaration","scope":12462,"src":"14375:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12454,"name":"string","nodeType":"ElementaryTypeName","src":"14375:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12457,"mutability":"mutable","name":"defaultValue","nameLocation":"14405:12:14","nodeType":"VariableDeclaration","scope":12462,"src":"14397:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12456,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14397:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14374:44:14"},"returnParameters":{"id":12461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12460,"mutability":"mutable","name":"value","nameLocation":"14450:5:14","nodeType":"VariableDeclaration","scope":12462,"src":"14442:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14442:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14441:15:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12472,"nodeType":"FunctionDefinition","src":"14650:111:14","nodes":[],"documentation":{"id":12463,"nodeType":"StructuredDocumentation","src":"14463:182:14","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"d145736c","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14659:5:14","parameters":{"id":12468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12465,"mutability":"mutable","name":"name","nameLocation":"14681:4:14","nodeType":"VariableDeclaration","scope":12472,"src":"14665:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12464,"name":"string","nodeType":"ElementaryTypeName","src":"14665:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12467,"mutability":"mutable","name":"defaultValue","nameLocation":"14703:12:14","nodeType":"VariableDeclaration","scope":12472,"src":"14687:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12466,"name":"string","nodeType":"ElementaryTypeName","src":"14687:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14664:52:14"},"returnParameters":{"id":12471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12470,"mutability":"mutable","name":"value","nameLocation":"14754:5:14","nodeType":"VariableDeclaration","scope":12472,"src":"14740:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12469,"name":"string","nodeType":"ElementaryTypeName","src":"14740:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14739:21:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12482,"nodeType":"FunctionDefinition","src":"14953:109:14","nodes":[],"documentation":{"id":12473,"nodeType":"StructuredDocumentation","src":"14767:181:14","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b3e47705","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14962:5:14","parameters":{"id":12478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12475,"mutability":"mutable","name":"name","nameLocation":"14984:4:14","nodeType":"VariableDeclaration","scope":12482,"src":"14968:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12474,"name":"string","nodeType":"ElementaryTypeName","src":"14968:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12477,"mutability":"mutable","name":"defaultValue","nameLocation":"15005:12:14","nodeType":"VariableDeclaration","scope":12482,"src":"14990:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12476,"name":"bytes","nodeType":"ElementaryTypeName","src":"14990:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14967:51:14"},"returnParameters":{"id":12481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12480,"mutability":"mutable","name":"value","nameLocation":"15055:5:14","nodeType":"VariableDeclaration","scope":12482,"src":"15042:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12479,"name":"bytes","nodeType":"ElementaryTypeName","src":"15042:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15041:20:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12496,"nodeType":"FunctionDefinition","src":"15287:158:14","nodes":[],"documentation":{"id":12483,"nodeType":"StructuredDocumentation","src":"15068:214:14","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"eb85e83b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"15296:5:14","parameters":{"id":12491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12485,"mutability":"mutable","name":"name","nameLocation":"15318:4:14","nodeType":"VariableDeclaration","scope":12496,"src":"15302:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12484,"name":"string","nodeType":"ElementaryTypeName","src":"15302:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12487,"mutability":"mutable","name":"delim","nameLocation":"15340:5:14","nodeType":"VariableDeclaration","scope":12496,"src":"15324:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12486,"name":"string","nodeType":"ElementaryTypeName","src":"15324:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12490,"mutability":"mutable","name":"defaultValue","nameLocation":"15363:12:14","nodeType":"VariableDeclaration","scope":12496,"src":"15347:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":12488,"name":"bool","nodeType":"ElementaryTypeName","src":"15347:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12489,"nodeType":"ArrayTypeName","src":"15347:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"15301:75:14"},"returnParameters":{"id":12495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12494,"mutability":"mutable","name":"value","nameLocation":"15438:5:14","nodeType":"VariableDeclaration","scope":12496,"src":"15424:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":12492,"name":"bool","nodeType":"ElementaryTypeName","src":"15424:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12493,"nodeType":"ArrayTypeName","src":"15424:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"15423:21:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12510,"nodeType":"FunctionDefinition","src":"15673:164:14","nodes":[],"documentation":{"id":12497,"nodeType":"StructuredDocumentation","src":"15451:217:14","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"74318528","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"15682:5:14","parameters":{"id":12505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12499,"mutability":"mutable","name":"name","nameLocation":"15704:4:14","nodeType":"VariableDeclaration","scope":12510,"src":"15688:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12498,"name":"string","nodeType":"ElementaryTypeName","src":"15688:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12501,"mutability":"mutable","name":"delim","nameLocation":"15726:5:14","nodeType":"VariableDeclaration","scope":12510,"src":"15710:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12500,"name":"string","nodeType":"ElementaryTypeName","src":"15710:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12504,"mutability":"mutable","name":"defaultValue","nameLocation":"15752:12:14","nodeType":"VariableDeclaration","scope":12510,"src":"15733:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12502,"name":"uint256","nodeType":"ElementaryTypeName","src":"15733:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12503,"nodeType":"ArrayTypeName","src":"15733:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15687:78:14"},"returnParameters":{"id":12509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12508,"mutability":"mutable","name":"value","nameLocation":"15830:5:14","nodeType":"VariableDeclaration","scope":12510,"src":"15813:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12506,"name":"uint256","nodeType":"ElementaryTypeName","src":"15813:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12507,"nodeType":"ArrayTypeName","src":"15813:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15812:24:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12524,"nodeType":"FunctionDefinition","src":"16064:162:14","nodes":[],"documentation":{"id":12511,"nodeType":"StructuredDocumentation","src":"15843:216:14","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4700d74b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"16073:5:14","parameters":{"id":12519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12513,"mutability":"mutable","name":"name","nameLocation":"16095:4:14","nodeType":"VariableDeclaration","scope":12524,"src":"16079:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12512,"name":"string","nodeType":"ElementaryTypeName","src":"16079:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12515,"mutability":"mutable","name":"delim","nameLocation":"16117:5:14","nodeType":"VariableDeclaration","scope":12524,"src":"16101:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12514,"name":"string","nodeType":"ElementaryTypeName","src":"16101:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12518,"mutability":"mutable","name":"defaultValue","nameLocation":"16142:12:14","nodeType":"VariableDeclaration","scope":12524,"src":"16124:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":12516,"name":"int256","nodeType":"ElementaryTypeName","src":"16124:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":12517,"nodeType":"ArrayTypeName","src":"16124:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"16078:77:14"},"returnParameters":{"id":12523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12522,"mutability":"mutable","name":"value","nameLocation":"16219:5:14","nodeType":"VariableDeclaration","scope":12524,"src":"16203:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":12520,"name":"int256","nodeType":"ElementaryTypeName","src":"16203:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":12521,"nodeType":"ArrayTypeName","src":"16203:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"16202:23:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12532,"nodeType":"FunctionDefinition","src":"16374:85:14","nodes":[],"documentation":{"id":12525,"nodeType":"StructuredDocumentation","src":"16232:137:14","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f877cb19","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"16383:9:14","parameters":{"id":12528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12527,"mutability":"mutable","name":"name","nameLocation":"16409:4:14","nodeType":"VariableDeclaration","scope":12532,"src":"16393:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12526,"name":"string","nodeType":"ElementaryTypeName","src":"16393:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16392:22:14"},"returnParameters":{"id":12531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12530,"mutability":"mutable","name":"value","nameLocation":"16452:5:14","nodeType":"VariableDeclaration","scope":12532,"src":"16438:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12529,"name":"string","nodeType":"ElementaryTypeName","src":"16438:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16437:21:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12543,"nodeType":"FunctionDefinition","src":"16641:110:14","nodes":[],"documentation":{"id":12533,"nodeType":"StructuredDocumentation","src":"16465:171:14","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"14b02bc9","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"16650:9:14","parameters":{"id":12538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12535,"mutability":"mutable","name":"name","nameLocation":"16676:4:14","nodeType":"VariableDeclaration","scope":12543,"src":"16660:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12534,"name":"string","nodeType":"ElementaryTypeName","src":"16660:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12537,"mutability":"mutable","name":"delim","nameLocation":"16698:5:14","nodeType":"VariableDeclaration","scope":12543,"src":"16682:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12536,"name":"string","nodeType":"ElementaryTypeName","src":"16682:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16659:45:14"},"returnParameters":{"id":12542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12541,"mutability":"mutable","name":"value","nameLocation":"16744:5:14","nodeType":"VariableDeclaration","scope":12543,"src":"16728:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12539,"name":"string","nodeType":"ElementaryTypeName","src":"16728:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12540,"nodeType":"ArrayTypeName","src":"16728:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"16727:23:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12551,"nodeType":"FunctionDefinition","src":"16900:77:14","nodes":[],"documentation":{"id":12544,"nodeType":"StructuredDocumentation","src":"16757:138:14","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"c1978d1f","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"16909:7:14","parameters":{"id":12547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12546,"mutability":"mutable","name":"name","nameLocation":"16933:4:14","nodeType":"VariableDeclaration","scope":12551,"src":"16917:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12545,"name":"string","nodeType":"ElementaryTypeName","src":"16917:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16916:22:14"},"returnParameters":{"id":12550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12549,"mutability":"mutable","name":"value","nameLocation":"16970:5:14","nodeType":"VariableDeclaration","scope":12551,"src":"16962:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12548,"name":"uint256","nodeType":"ElementaryTypeName","src":"16962:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16961:15:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12562,"nodeType":"FunctionDefinition","src":"17160:109:14","nodes":[],"documentation":{"id":12552,"nodeType":"StructuredDocumentation","src":"16983:172:14","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f3dec099","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"17169:7:14","parameters":{"id":12557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12554,"mutability":"mutable","name":"name","nameLocation":"17193:4:14","nodeType":"VariableDeclaration","scope":12562,"src":"17177:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12553,"name":"string","nodeType":"ElementaryTypeName","src":"17177:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12556,"mutability":"mutable","name":"delim","nameLocation":"17215:5:14","nodeType":"VariableDeclaration","scope":12562,"src":"17199:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12555,"name":"string","nodeType":"ElementaryTypeName","src":"17199:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17176:45:14"},"returnParameters":{"id":12561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12560,"mutability":"mutable","name":"value","nameLocation":"17262:5:14","nodeType":"VariableDeclaration","scope":12562,"src":"17245:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12558,"name":"uint256","nodeType":"ElementaryTypeName","src":"17245:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12559,"nodeType":"ArrayTypeName","src":"17245:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"17244:24:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12571,"nodeType":"FunctionDefinition","src":"17346:77:14","nodes":[],"documentation":{"id":12563,"nodeType":"StructuredDocumentation","src":"17275:66:14","text":"Returns true if `forge` command was executed in given context."},"functionSelector":"64af255d","implemented":false,"kind":"function","modifiers":[],"name":"isContext","nameLocation":"17355:9:14","parameters":{"id":12567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12566,"mutability":"mutable","name":"context","nameLocation":"17378:7:14","nodeType":"VariableDeclaration","scope":12571,"src":"17365:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$12107","typeString":"enum VmSafe.ForgeContext"},"typeName":{"id":12565,"nodeType":"UserDefinedTypeName","pathNode":{"id":12564,"name":"ForgeContext","nameLocations":["17365:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":12107,"src":"17365:12:14"},"referencedDeclaration":12107,"src":"17365:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$12107","typeString":"enum VmSafe.ForgeContext"}},"visibility":"internal"}],"src":"17364:22:14"},"returnParameters":{"id":12570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12569,"mutability":"mutable","name":"result","nameLocation":"17415:6:14","nodeType":"VariableDeclaration","scope":12571,"src":"17410:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12568,"name":"bool","nodeType":"ElementaryTypeName","src":"17410:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17409:13:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12579,"nodeType":"FunctionDefinition","src":"17465:70:14","nodes":[],"documentation":{"id":12572,"nodeType":"StructuredDocumentation","src":"17429:31:14","text":"Sets environment variables."},"functionSelector":"3d5923ee","implemented":false,"kind":"function","modifiers":[],"name":"setEnv","nameLocation":"17474:6:14","parameters":{"id":12577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12574,"mutability":"mutable","name":"name","nameLocation":"17497:4:14","nodeType":"VariableDeclaration","scope":12579,"src":"17481:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12573,"name":"string","nodeType":"ElementaryTypeName","src":"17481:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12576,"mutability":"mutable","name":"value","nameLocation":"17519:5:14","nodeType":"VariableDeclaration","scope":12579,"src":"17503:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12575,"name":"string","nodeType":"ElementaryTypeName","src":"17503:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17480:45:14"},"returnParameters":{"id":12578,"nodeType":"ParameterList","parameters":[],"src":"17534:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12591,"nodeType":"FunctionDefinition","src":"17667:109:14","nodes":[],"documentation":{"id":12580,"nodeType":"StructuredDocumentation","src":"17571:91:14","text":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"functionSelector":"65bc9481","implemented":false,"kind":"function","modifiers":[],"name":"accesses","nameLocation":"17676:8:14","parameters":{"id":12583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12582,"mutability":"mutable","name":"target","nameLocation":"17693:6:14","nodeType":"VariableDeclaration","scope":12591,"src":"17685:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12581,"name":"address","nodeType":"ElementaryTypeName","src":"17685:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17684:16:14"},"returnParameters":{"id":12590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12586,"mutability":"mutable","name":"readSlots","nameLocation":"17736:9:14","nodeType":"VariableDeclaration","scope":12591,"src":"17719:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12584,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17719:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12585,"nodeType":"ArrayTypeName","src":"17719:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":12589,"mutability":"mutable","name":"writeSlots","nameLocation":"17764:10:14","nodeType":"VariableDeclaration","scope":12591,"src":"17747:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12587,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17747:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12588,"nodeType":"ArrayTypeName","src":"17747:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"17718:57:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12599,"nodeType":"FunctionDefinition","src":"17832:74:14","nodes":[],"documentation":{"id":12592,"nodeType":"StructuredDocumentation","src":"17782:45:14","text":"Gets the address for a given private key."},"functionSelector":"ffa18649","implemented":false,"kind":"function","modifiers":[],"name":"addr","nameLocation":"17841:4:14","parameters":{"id":12595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12594,"mutability":"mutable","name":"privateKey","nameLocation":"17854:10:14","nodeType":"VariableDeclaration","scope":12599,"src":"17846:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12593,"name":"uint256","nodeType":"ElementaryTypeName","src":"17846:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17845:20:14"},"returnParameters":{"id":12598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12597,"mutability":"mutable","name":"keyAddr","nameLocation":"17897:7:14","nodeType":"VariableDeclaration","scope":12599,"src":"17889:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12596,"name":"address","nodeType":"ElementaryTypeName","src":"17889:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17888:17:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12616,"nodeType":"FunctionDefinition","src":"17969:160:14","nodes":[],"documentation":{"id":12600,"nodeType":"StructuredDocumentation","src":"17912:52:14","text":"Gets all the logs according to specified filter."},"functionSelector":"35e1349b","implemented":false,"kind":"function","modifiers":[],"name":"eth_getLogs","nameLocation":"17978:11:14","parameters":{"id":12610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12602,"mutability":"mutable","name":"fromBlock","nameLocation":"17998:9:14","nodeType":"VariableDeclaration","scope":12616,"src":"17990:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12601,"name":"uint256","nodeType":"ElementaryTypeName","src":"17990:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12604,"mutability":"mutable","name":"toBlock","nameLocation":"18017:7:14","nodeType":"VariableDeclaration","scope":12616,"src":"18009:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12603,"name":"uint256","nodeType":"ElementaryTypeName","src":"18009:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12606,"mutability":"mutable","name":"target","nameLocation":"18034:6:14","nodeType":"VariableDeclaration","scope":12616,"src":"18026:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12605,"name":"address","nodeType":"ElementaryTypeName","src":"18026:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12609,"mutability":"mutable","name":"topics","nameLocation":"18061:6:14","nodeType":"VariableDeclaration","scope":12616,"src":"18042:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12607,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18042:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12608,"nodeType":"ArrayTypeName","src":"18042:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"17989:79:14"},"returnParameters":{"id":12615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12614,"mutability":"mutable","name":"logs","nameLocation":"18123:4:14","nodeType":"VariableDeclaration","scope":12616,"src":"18103:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$12143_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.EthGetLogs[]"},"typeName":{"baseType":{"id":12612,"nodeType":"UserDefinedTypeName","pathNode":{"id":12611,"name":"EthGetLogs","nameLocations":["18103:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":12143,"src":"18103:10:14"},"referencedDeclaration":12143,"src":"18103:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_EthGetLogs_$12143_storage_ptr","typeString":"struct VmSafe.EthGetLogs"}},"id":12613,"nodeType":"ArrayTypeName","src":"18103:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$12143_storage_$dyn_storage_ptr","typeString":"struct VmSafe.EthGetLogs[]"}},"visibility":"internal"}],"src":"18102:26:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12622,"nodeType":"FunctionDefinition","src":"18466:70:14","nodes":[],"documentation":{"id":12617,"nodeType":"StructuredDocumentation","src":"18135:326:14","text":"Gets the current `block.blobbasefee`.\n You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"1f6d6ef7","implemented":false,"kind":"function","modifiers":[],"name":"getBlobBaseFee","nameLocation":"18475:14:14","parameters":{"id":12618,"nodeType":"ParameterList","parameters":[],"src":"18489:2:14"},"returnParameters":{"id":12621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12620,"mutability":"mutable","name":"blobBaseFee","nameLocation":"18523:11:14","nodeType":"VariableDeclaration","scope":12622,"src":"18515:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12619,"name":"uint256","nodeType":"ElementaryTypeName","src":"18515:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18514:21:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12628,"nodeType":"FunctionDefinition","src":"18851:65:14","nodes":[],"documentation":{"id":12623,"nodeType":"StructuredDocumentation","src":"18542:304:14","text":"Gets the current `block.number`.\n You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"42cbb15c","implemented":false,"kind":"function","modifiers":[],"name":"getBlockNumber","nameLocation":"18860:14:14","parameters":{"id":12624,"nodeType":"ParameterList","parameters":[],"src":"18874:2:14"},"returnParameters":{"id":12627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12626,"mutability":"mutable","name":"height","nameLocation":"18908:6:14","nodeType":"VariableDeclaration","scope":12628,"src":"18900:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12625,"name":"uint256","nodeType":"ElementaryTypeName","src":"18900:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18899:16:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12634,"nodeType":"FunctionDefinition","src":"19240:71:14","nodes":[],"documentation":{"id":12629,"nodeType":"StructuredDocumentation","src":"18922:313:14","text":"Gets the current `block.timestamp`.\n You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"796b89b9","implemented":false,"kind":"function","modifiers":[],"name":"getBlockTimestamp","nameLocation":"19249:17:14","parameters":{"id":12630,"nodeType":"ParameterList","parameters":[],"src":"19266:2:14"},"returnParameters":{"id":12633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12632,"mutability":"mutable","name":"timestamp","nameLocation":"19300:9:14","nodeType":"VariableDeclaration","scope":12634,"src":"19292:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12631,"name":"uint256","nodeType":"ElementaryTypeName","src":"19292:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19291:19:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12648,"nodeType":"FunctionDefinition","src":"19404:146:14","nodes":[],"documentation":{"id":12635,"nodeType":"StructuredDocumentation","src":"19317:82:14","text":"Gets the map key and parent of a mapping at a given slot, for a given address."},"functionSelector":"876e24e6","implemented":false,"kind":"function","modifiers":[],"name":"getMappingKeyAndParentOf","nameLocation":"19413:24:14","parameters":{"id":12640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12637,"mutability":"mutable","name":"target","nameLocation":"19446:6:14","nodeType":"VariableDeclaration","scope":12648,"src":"19438:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12636,"name":"address","nodeType":"ElementaryTypeName","src":"19438:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12639,"mutability":"mutable","name":"elementSlot","nameLocation":"19462:11:14","nodeType":"VariableDeclaration","scope":12648,"src":"19454:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12638,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19454:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19437:37:14"},"returnParameters":{"id":12647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12642,"mutability":"mutable","name":"found","nameLocation":"19514:5:14","nodeType":"VariableDeclaration","scope":12648,"src":"19509:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12641,"name":"bool","nodeType":"ElementaryTypeName","src":"19509:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12644,"mutability":"mutable","name":"key","nameLocation":"19529:3:14","nodeType":"VariableDeclaration","scope":12648,"src":"19521:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12643,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19521:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12646,"mutability":"mutable","name":"parent","nameLocation":"19542:6:14","nodeType":"VariableDeclaration","scope":12648,"src":"19534:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19534:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19508:41:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12658,"nodeType":"FunctionDefinition","src":"19647:97:14","nodes":[],"documentation":{"id":12649,"nodeType":"StructuredDocumentation","src":"19556:86:14","text":"Gets the number of elements in the mapping at the given slot, for a given address."},"functionSelector":"2f2fd63f","implemented":false,"kind":"function","modifiers":[],"name":"getMappingLength","nameLocation":"19656:16:14","parameters":{"id":12654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12651,"mutability":"mutable","name":"target","nameLocation":"19681:6:14","nodeType":"VariableDeclaration","scope":12658,"src":"19673:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12650,"name":"address","nodeType":"ElementaryTypeName","src":"19673:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12653,"mutability":"mutable","name":"mappingSlot","nameLocation":"19697:11:14","nodeType":"VariableDeclaration","scope":12658,"src":"19689:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12652,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19689:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19672:37:14"},"returnParameters":{"id":12657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12656,"mutability":"mutable","name":"length","nameLocation":"19736:6:14","nodeType":"VariableDeclaration","scope":12658,"src":"19728:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12655,"name":"uint256","nodeType":"ElementaryTypeName","src":"19728:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19727:16:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12670,"nodeType":"FunctionDefinition","src":"19948:109:14","nodes":[],"documentation":{"id":12659,"nodeType":"StructuredDocumentation","src":"19750:193:14","text":"Gets the elements at index idx of the mapping at the given slot, for a given address. The\n index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"functionSelector":"ebc73ab4","implemented":false,"kind":"function","modifiers":[],"name":"getMappingSlotAt","nameLocation":"19957:16:14","parameters":{"id":12666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12661,"mutability":"mutable","name":"target","nameLocation":"19982:6:14","nodeType":"VariableDeclaration","scope":12670,"src":"19974:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12660,"name":"address","nodeType":"ElementaryTypeName","src":"19974:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12663,"mutability":"mutable","name":"mappingSlot","nameLocation":"19998:11:14","nodeType":"VariableDeclaration","scope":12670,"src":"19990:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12662,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19990:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12665,"mutability":"mutable","name":"idx","nameLocation":"20019:3:14","nodeType":"VariableDeclaration","scope":12670,"src":"20011:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12664,"name":"uint256","nodeType":"ElementaryTypeName","src":"20011:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19973:50:14"},"returnParameters":{"id":12669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12668,"mutability":"mutable","name":"value","nameLocation":"20050:5:14","nodeType":"VariableDeclaration","scope":12670,"src":"20042:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12667,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20042:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20041:15:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12678,"nodeType":"FunctionDefinition","src":"20101:72:14","nodes":[],"documentation":{"id":12671,"nodeType":"StructuredDocumentation","src":"20063:33:14","text":"Gets the nonce of an account."},"functionSelector":"2d0335ab","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"20110:8:14","parameters":{"id":12674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12673,"mutability":"mutable","name":"account","nameLocation":"20127:7:14","nodeType":"VariableDeclaration","scope":12678,"src":"20119:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12672,"name":"address","nodeType":"ElementaryTypeName","src":"20119:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20118:17:14"},"returnParameters":{"id":12677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12676,"mutability":"mutable","name":"nonce","nameLocation":"20166:5:14","nodeType":"VariableDeclaration","scope":12678,"src":"20159:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12675,"name":"uint64","nodeType":"ElementaryTypeName","src":"20159:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"20158:14:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12686,"nodeType":"FunctionDefinition","src":"20215:64:14","nodes":[],"documentation":{"id":12679,"nodeType":"StructuredDocumentation","src":"20179:31:14","text":"Gets all the recorded logs."},"functionSelector":"191553a4","implemented":false,"kind":"function","modifiers":[],"name":"getRecordedLogs","nameLocation":"20224:15:14","parameters":{"id":12680,"nodeType":"ParameterList","parameters":[],"src":"20239:2:14"},"returnParameters":{"id":12685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12684,"mutability":"mutable","name":"logs","nameLocation":"20273:4:14","nodeType":"VariableDeclaration","scope":12686,"src":"20260:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$12116_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Log[]"},"typeName":{"baseType":{"id":12682,"nodeType":"UserDefinedTypeName","pathNode":{"id":12681,"name":"Log","nameLocations":["20260:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":12116,"src":"20260:3:14"},"referencedDeclaration":12116,"src":"20260:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Log_$12116_storage_ptr","typeString":"struct VmSafe.Log"}},"id":12683,"nodeType":"ArrayTypeName","src":"20260:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$12116_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Log[]"}},"visibility":"internal"}],"src":"20259:19:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12693,"nodeType":"FunctionDefinition","src":"20329:62:14","nodes":[],"documentation":{"id":12687,"nodeType":"StructuredDocumentation","src":"20285:39:14","text":"Gets the gas used in the last call."},"functionSelector":"2b589b28","implemented":false,"kind":"function","modifiers":[],"name":"lastCallGas","nameLocation":"20338:11:14","parameters":{"id":12688,"nodeType":"ParameterList","parameters":[],"src":"20349:2:14"},"returnParameters":{"id":12692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12691,"mutability":"mutable","name":"gas","nameLocation":"20386:3:14","nodeType":"VariableDeclaration","scope":12693,"src":"20375:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$12253_memory_ptr","typeString":"struct VmSafe.Gas"},"typeName":{"id":12690,"nodeType":"UserDefinedTypeName","pathNode":{"id":12689,"name":"Gas","nameLocations":["20375:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":12253,"src":"20375:3:14"},"referencedDeclaration":12253,"src":"20375:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$12253_storage_ptr","typeString":"struct VmSafe.Gas"}},"visibility":"internal"}],"src":"20374:16:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12703,"nodeType":"FunctionDefinition","src":"20443:81:14","nodes":[],"documentation":{"id":12694,"nodeType":"StructuredDocumentation","src":"20397:41:14","text":"Loads a storage slot from an address."},"functionSelector":"667f9d70","implemented":false,"kind":"function","modifiers":[],"name":"load","nameLocation":"20452:4:14","parameters":{"id":12699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12696,"mutability":"mutable","name":"target","nameLocation":"20465:6:14","nodeType":"VariableDeclaration","scope":12703,"src":"20457:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12695,"name":"address","nodeType":"ElementaryTypeName","src":"20457:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12698,"mutability":"mutable","name":"slot","nameLocation":"20481:4:14","nodeType":"VariableDeclaration","scope":12703,"src":"20473:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12697,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20473:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20456:30:14"},"returnParameters":{"id":12702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12701,"mutability":"mutable","name":"data","nameLocation":"20518:4:14","nodeType":"VariableDeclaration","scope":12703,"src":"20510:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12700,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20510:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20509:14:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12707,"nodeType":"FunctionDefinition","src":"20615:37:14","nodes":[],"documentation":{"id":12704,"nodeType":"StructuredDocumentation","src":"20530:80:14","text":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"functionSelector":"d1a5b36f","implemented":false,"kind":"function","modifiers":[],"name":"pauseGasMetering","nameLocation":"20624:16:14","parameters":{"id":12705,"nodeType":"ParameterList","parameters":[],"src":"20640:2:14"},"returnParameters":{"id":12706,"nodeType":"ParameterList","parameters":[],"src":"20651:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12711,"nodeType":"FunctionDefinition","src":"20704:27:14","nodes":[],"documentation":{"id":12708,"nodeType":"StructuredDocumentation","src":"20658:41:14","text":"Records all storage reads and writes."},"functionSelector":"266cf109","implemented":false,"kind":"function","modifiers":[],"name":"record","nameLocation":"20713:6:14","parameters":{"id":12709,"nodeType":"ParameterList","parameters":[],"src":"20719:2:14"},"returnParameters":{"id":12710,"nodeType":"ParameterList","parameters":[],"src":"20730:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12715,"nodeType":"FunctionDefinition","src":"20778:31:14","nodes":[],"documentation":{"id":12712,"nodeType":"StructuredDocumentation","src":"20737:36:14","text":"Record all the transaction logs."},"functionSelector":"41af2f52","implemented":false,"kind":"function","modifiers":[],"name":"recordLogs","nameLocation":"20787:10:14","parameters":{"id":12713,"nodeType":"ParameterList","parameters":[],"src":"20797:2:14"},"returnParameters":{"id":12714,"nodeType":"ParameterList","parameters":[],"src":"20808:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12719,"nodeType":"FunctionDefinition","src":"20899:38:14","nodes":[],"documentation":{"id":12716,"nodeType":"StructuredDocumentation","src":"20815:79:14","text":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"functionSelector":"2bcd50e0","implemented":false,"kind":"function","modifiers":[],"name":"resumeGasMetering","nameLocation":"20908:17:14","parameters":{"id":12717,"nodeType":"ParameterList","parameters":[],"src":"20925:2:14"},"returnParameters":{"id":12718,"nodeType":"ParameterList","parameters":[],"src":"20936:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12729,"nodeType":"FunctionDefinition","src":"21014:98:14","nodes":[],"documentation":{"id":12720,"nodeType":"StructuredDocumentation","src":"20943:66:14","text":"Performs an Ethereum JSON-RPC request to the current fork URL."},"functionSelector":"1206c8a8","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"21023:3:14","parameters":{"id":12725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12722,"mutability":"mutable","name":"method","nameLocation":"21043:6:14","nodeType":"VariableDeclaration","scope":12729,"src":"21027:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12721,"name":"string","nodeType":"ElementaryTypeName","src":"21027:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12724,"mutability":"mutable","name":"params","nameLocation":"21067:6:14","nodeType":"VariableDeclaration","scope":12729,"src":"21051:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12723,"name":"string","nodeType":"ElementaryTypeName","src":"21051:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21026:48:14"},"returnParameters":{"id":12728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12727,"mutability":"mutable","name":"data","nameLocation":"21106:4:14","nodeType":"VariableDeclaration","scope":12729,"src":"21093:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12726,"name":"bytes","nodeType":"ElementaryTypeName","src":"21093:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21092:19:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12741,"nodeType":"FunctionDefinition","src":"21186:99:14","nodes":[],"documentation":{"id":12730,"nodeType":"StructuredDocumentation","src":"21118:63:14","text":"Signs `digest` with `privateKey` using the secp256r1 curve."},"functionSelector":"83211b40","implemented":false,"kind":"function","modifiers":[],"name":"signP256","nameLocation":"21195:8:14","parameters":{"id":12735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12732,"mutability":"mutable","name":"privateKey","nameLocation":"21212:10:14","nodeType":"VariableDeclaration","scope":12741,"src":"21204:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12731,"name":"uint256","nodeType":"ElementaryTypeName","src":"21204:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12734,"mutability":"mutable","name":"digest","nameLocation":"21232:6:14","nodeType":"VariableDeclaration","scope":12741,"src":"21224:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21224:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21203:36:14"},"returnParameters":{"id":12740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12737,"mutability":"mutable","name":"r","nameLocation":"21271:1:14","nodeType":"VariableDeclaration","scope":12741,"src":"21263:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12736,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21263:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12739,"mutability":"mutable","name":"s","nameLocation":"21282:1:14","nodeType":"VariableDeclaration","scope":12741,"src":"21274:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12738,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21274:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21262:22:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12755,"nodeType":"FunctionDefinition","src":"21359:104:14","nodes":[],"documentation":{"id":12742,"nodeType":"StructuredDocumentation","src":"21291:63:14","text":"Signs `digest` with `privateKey` using the secp256k1 curve."},"functionSelector":"e341eaa4","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"21368:4:14","parameters":{"id":12747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12744,"mutability":"mutable","name":"privateKey","nameLocation":"21381:10:14","nodeType":"VariableDeclaration","scope":12755,"src":"21373:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12743,"name":"uint256","nodeType":"ElementaryTypeName","src":"21373:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12746,"mutability":"mutable","name":"digest","nameLocation":"21401:6:14","nodeType":"VariableDeclaration","scope":12755,"src":"21393:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12745,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21393:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21372:36:14"},"returnParameters":{"id":12754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12749,"mutability":"mutable","name":"v","nameLocation":"21438:1:14","nodeType":"VariableDeclaration","scope":12755,"src":"21432:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":12748,"name":"uint8","nodeType":"ElementaryTypeName","src":"21432:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":12751,"mutability":"mutable","name":"r","nameLocation":"21449:1:14","nodeType":"VariableDeclaration","scope":12755,"src":"21441:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12750,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21441:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12753,"mutability":"mutable","name":"s","nameLocation":"21460:1:14","nodeType":"VariableDeclaration","scope":12755,"src":"21452:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12752,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21452:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21431:31:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12767,"nodeType":"FunctionDefinition","src":"21902:84:14","nodes":[],"documentation":{"id":12756,"nodeType":"StructuredDocumentation","src":"21469:428:14","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"799cd333","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"21911:4:14","parameters":{"id":12759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12758,"mutability":"mutable","name":"digest","nameLocation":"21924:6:14","nodeType":"VariableDeclaration","scope":12767,"src":"21916:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12757,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21916:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21915:16:14"},"returnParameters":{"id":12766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12761,"mutability":"mutable","name":"v","nameLocation":"21961:1:14","nodeType":"VariableDeclaration","scope":12767,"src":"21955:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":12760,"name":"uint8","nodeType":"ElementaryTypeName","src":"21955:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":12763,"mutability":"mutable","name":"r","nameLocation":"21972:1:14","nodeType":"VariableDeclaration","scope":12767,"src":"21964:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12762,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21964:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12765,"mutability":"mutable","name":"s","nameLocation":"21983:1:14","nodeType":"VariableDeclaration","scope":12767,"src":"21975:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12764,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21975:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21954:31:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12781,"nodeType":"FunctionDefinition","src":"22163:100:14","nodes":[],"documentation":{"id":12768,"nodeType":"StructuredDocumentation","src":"21992:166:14","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8c1aa205","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"22172:4:14","parameters":{"id":12773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12770,"mutability":"mutable","name":"signer","nameLocation":"22185:6:14","nodeType":"VariableDeclaration","scope":12781,"src":"22177:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12769,"name":"address","nodeType":"ElementaryTypeName","src":"22177:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12772,"mutability":"mutable","name":"digest","nameLocation":"22201:6:14","nodeType":"VariableDeclaration","scope":12781,"src":"22193:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12771,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22193:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22176:32:14"},"returnParameters":{"id":12780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12775,"mutability":"mutable","name":"v","nameLocation":"22238:1:14","nodeType":"VariableDeclaration","scope":12781,"src":"22232:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":12774,"name":"uint8","nodeType":"ElementaryTypeName","src":"22232:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":12777,"mutability":"mutable","name":"r","nameLocation":"22249:1:14","nodeType":"VariableDeclaration","scope":12781,"src":"22241:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22241:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12779,"mutability":"mutable","name":"s","nameLocation":"22260:1:14","nodeType":"VariableDeclaration","scope":12781,"src":"22252:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12778,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22252:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22231:31:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12785,"nodeType":"FunctionDefinition","src":"22331:42:14","nodes":[],"documentation":{"id":12782,"nodeType":"StructuredDocumentation","src":"22269:57:14","text":"Starts recording all map SSTOREs for later retrieval."},"functionSelector":"3e9705c0","implemented":false,"kind":"function","modifiers":[],"name":"startMappingRecording","nameLocation":"22340:21:14","parameters":{"id":12783,"nodeType":"ParameterList","parameters":[],"src":"22361:2:14"},"returnParameters":{"id":12784,"nodeType":"ParameterList","parameters":[],"src":"22372:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12789,"nodeType":"FunctionDefinition","src":"22517:44:14","nodes":[],"documentation":{"id":12786,"nodeType":"StructuredDocumentation","src":"22379:133:14","text":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order,\n along with the context of the calls"},"functionSelector":"cf22e3c9","implemented":false,"kind":"function","modifiers":[],"name":"startStateDiffRecording","nameLocation":"22526:23:14","parameters":{"id":12787,"nodeType":"ParameterList","parameters":[],"src":"22549:2:14"},"returnParameters":{"id":12788,"nodeType":"ParameterList","parameters":[],"src":"22560:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12797,"nodeType":"FunctionDefinition","src":"22669:92:14","nodes":[],"documentation":{"id":12790,"nodeType":"StructuredDocumentation","src":"22567:97:14","text":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"functionSelector":"aa5cf90e","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnStateDiff","nameLocation":"22678:22:14","parameters":{"id":12791,"nodeType":"ParameterList","parameters":[],"src":"22700:2:14"},"returnParameters":{"id":12796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12795,"mutability":"mutable","name":"accountAccesses","nameLocation":"22744:15:14","nodeType":"VariableDeclaration","scope":12797,"src":"22721:38:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$12227_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.AccountAccess[]"},"typeName":{"baseType":{"id":12793,"nodeType":"UserDefinedTypeName","pathNode":{"id":12792,"name":"AccountAccess","nameLocations":["22721:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":12227,"src":"22721:13:14"},"referencedDeclaration":12227,"src":"22721:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_AccountAccess_$12227_storage_ptr","typeString":"struct VmSafe.AccountAccess"}},"id":12794,"nodeType":"ArrayTypeName","src":"22721:15:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$12227_storage_$dyn_storage_ptr","typeString":"struct VmSafe.AccountAccess[]"}},"visibility":"internal"}],"src":"22720:40:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12801,"nodeType":"FunctionDefinition","src":"22857:41:14","nodes":[],"documentation":{"id":12798,"nodeType":"StructuredDocumentation","src":"22767:85:14","text":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"functionSelector":"0d4aae9b","implemented":false,"kind":"function","modifiers":[],"name":"stopMappingRecording","nameLocation":"22866:20:14","parameters":{"id":12799,"nodeType":"ParameterList","parameters":[],"src":"22886:2:14"},"returnParameters":{"id":12800,"nodeType":"ParameterList","parameters":[],"src":"22897:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12807,"nodeType":"FunctionDefinition","src":"23097:50:14","nodes":[],"documentation":{"id":12802,"nodeType":"StructuredDocumentation","src":"22941:151:14","text":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine.\n `path` is relative to the project root."},"functionSelector":"48c3241f","implemented":false,"kind":"function","modifiers":[],"name":"closeFile","nameLocation":"23106:9:14","parameters":{"id":12805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12804,"mutability":"mutable","name":"path","nameLocation":"23132:4:14","nodeType":"VariableDeclaration","scope":12807,"src":"23116:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12803,"name":"string","nodeType":"ElementaryTypeName","src":"23116:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23115:22:14"},"returnParameters":{"id":12806,"nodeType":"ParameterList","parameters":[],"src":"23146:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12817,"nodeType":"FunctionDefinition","src":"23462:93:14","nodes":[],"documentation":{"id":12808,"nodeType":"StructuredDocumentation","src":"23153:304:14","text":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`.\n On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`.\n Both `from` and `to` are relative to the project root."},"functionSelector":"a54a87d8","implemented":false,"kind":"function","modifiers":[],"name":"copyFile","nameLocation":"23471:8:14","parameters":{"id":12813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12810,"mutability":"mutable","name":"from","nameLocation":"23496:4:14","nodeType":"VariableDeclaration","scope":12817,"src":"23480:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12809,"name":"string","nodeType":"ElementaryTypeName","src":"23480:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12812,"mutability":"mutable","name":"to","nameLocation":"23518:2:14","nodeType":"VariableDeclaration","scope":12817,"src":"23502:18:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12811,"name":"string","nodeType":"ElementaryTypeName","src":"23502:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23479:42:14"},"returnParameters":{"id":12816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12815,"mutability":"mutable","name":"copied","nameLocation":"23547:6:14","nodeType":"VariableDeclaration","scope":12817,"src":"23540:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12814,"name":"uint64","nodeType":"ElementaryTypeName","src":"23540:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"23539:15:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12825,"nodeType":"FunctionDefinition","src":"23960:66:14","nodes":[],"documentation":{"id":12818,"nodeType":"StructuredDocumentation","src":"23561:394:14","text":"Creates a new, empty directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - User lacks permissions to modify `path`.\n - A parent of the given path doesn't exist and `recursive` is false.\n - `path` already exists and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"168b64d3","implemented":false,"kind":"function","modifiers":[],"name":"createDir","nameLocation":"23969:9:14","parameters":{"id":12823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12820,"mutability":"mutable","name":"path","nameLocation":"23995:4:14","nodeType":"VariableDeclaration","scope":12825,"src":"23979:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12819,"name":"string","nodeType":"ElementaryTypeName","src":"23979:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12822,"mutability":"mutable","name":"recursive","nameLocation":"24006:9:14","nodeType":"VariableDeclaration","scope":12825,"src":"24001:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12821,"name":"bool","nodeType":"ElementaryTypeName","src":"24001:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"23978:38:14"},"returnParameters":{"id":12824,"nodeType":"ParameterList","parameters":[],"src":"24025:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12833,"nodeType":"FunctionDefinition","src":"24121:69:14","nodes":[],"documentation":{"id":12826,"nodeType":"StructuredDocumentation","src":"24032:84:14","text":"Returns true if the given path points to an existing entity, else returns false."},"functionSelector":"261a323e","implemented":false,"kind":"function","modifiers":[],"name":"exists","nameLocation":"24130:6:14","parameters":{"id":12829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12828,"mutability":"mutable","name":"path","nameLocation":"24153:4:14","nodeType":"VariableDeclaration","scope":12833,"src":"24137:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12827,"name":"string","nodeType":"ElementaryTypeName","src":"24137:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24136:22:14"},"returnParameters":{"id":12832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12831,"mutability":"mutable","name":"result","nameLocation":"24182:6:14","nodeType":"VariableDeclaration","scope":12833,"src":"24177:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12830,"name":"bool","nodeType":"ElementaryTypeName","src":"24177:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"24176:13:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12842,"nodeType":"FunctionDefinition","src":"24255:84:14","nodes":[],"documentation":{"id":12834,"nodeType":"StructuredDocumentation","src":"24196:54:14","text":"Performs a foreign function call via the terminal."},"functionSelector":"89160467","implemented":false,"kind":"function","modifiers":[],"name":"ffi","nameLocation":"24264:3:14","parameters":{"id":12838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12837,"mutability":"mutable","name":"commandInput","nameLocation":"24286:12:14","nodeType":"VariableDeclaration","scope":12842,"src":"24268:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12835,"name":"string","nodeType":"ElementaryTypeName","src":"24268:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12836,"nodeType":"ArrayTypeName","src":"24268:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"24267:32:14"},"returnParameters":{"id":12841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12840,"mutability":"mutable","name":"result","nameLocation":"24331:6:14","nodeType":"VariableDeclaration","scope":12842,"src":"24318:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12839,"name":"bytes","nodeType":"ElementaryTypeName","src":"24318:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"24317:21:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12851,"nodeType":"FunctionDefinition","src":"24438:93:14","nodes":[],"documentation":{"id":12843,"nodeType":"StructuredDocumentation","src":"24345:88:14","text":"Given a path, query the file system to get information about a file, directory, etc."},"functionSelector":"af368a08","implemented":false,"kind":"function","modifiers":[],"name":"fsMetadata","nameLocation":"24447:10:14","parameters":{"id":12846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12845,"mutability":"mutable","name":"path","nameLocation":"24474:4:14","nodeType":"VariableDeclaration","scope":12851,"src":"24458:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12844,"name":"string","nodeType":"ElementaryTypeName","src":"24458:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24457:22:14"},"returnParameters":{"id":12850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12849,"mutability":"mutable","name":"metadata","nameLocation":"24521:8:14","nodeType":"VariableDeclaration","scope":12851,"src":"24503:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$12171_memory_ptr","typeString":"struct VmSafe.FsMetadata"},"typeName":{"id":12848,"nodeType":"UserDefinedTypeName","pathNode":{"id":12847,"name":"FsMetadata","nameLocations":["24503:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":12171,"src":"24503:10:14"},"referencedDeclaration":12171,"src":"24503:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$12171_storage_ptr","typeString":"struct VmSafe.FsMetadata"}},"visibility":"internal"}],"src":"24502:28:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12859,"nodeType":"FunctionDefinition","src":"24769:101:14","nodes":[],"documentation":{"id":12852,"nodeType":"StructuredDocumentation","src":"24537:227:14","text":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"8d1cc925","implemented":false,"kind":"function","modifiers":[],"name":"getCode","nameLocation":"24778:7:14","parameters":{"id":12855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12854,"mutability":"mutable","name":"artifactPath","nameLocation":"24802:12:14","nodeType":"VariableDeclaration","scope":12859,"src":"24786:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12853,"name":"string","nodeType":"ElementaryTypeName","src":"24786:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24785:30:14"},"returnParameters":{"id":12858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12857,"mutability":"mutable","name":"creationBytecode","nameLocation":"24852:16:14","nodeType":"VariableDeclaration","scope":12859,"src":"24839:29:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12856,"name":"bytes","nodeType":"ElementaryTypeName","src":"24839:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"24838:31:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12867,"nodeType":"FunctionDefinition","src":"25108:108:14","nodes":[],"documentation":{"id":12860,"nodeType":"StructuredDocumentation","src":"24876:227:14","text":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"3ebf73b4","implemented":false,"kind":"function","modifiers":[],"name":"getDeployedCode","nameLocation":"25117:15:14","parameters":{"id":12863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12862,"mutability":"mutable","name":"artifactPath","nameLocation":"25149:12:14","nodeType":"VariableDeclaration","scope":12867,"src":"25133:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12861,"name":"string","nodeType":"ElementaryTypeName","src":"25133:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25132:30:14"},"returnParameters":{"id":12866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12865,"mutability":"mutable","name":"runtimeBytecode","nameLocation":"25199:15:14","nodeType":"VariableDeclaration","scope":12867,"src":"25186:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12864,"name":"bytes","nodeType":"ElementaryTypeName","src":"25186:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"25185:30:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12875,"nodeType":"FunctionDefinition","src":"25322:68:14","nodes":[],"documentation":{"id":12868,"nodeType":"StructuredDocumentation","src":"25222:95:14","text":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"functionSelector":"7d15d019","implemented":false,"kind":"function","modifiers":[],"name":"isDir","nameLocation":"25331:5:14","parameters":{"id":12871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12870,"mutability":"mutable","name":"path","nameLocation":"25353:4:14","nodeType":"VariableDeclaration","scope":12875,"src":"25337:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12869,"name":"string","nodeType":"ElementaryTypeName","src":"25337:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25336:22:14"},"returnParameters":{"id":12874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12873,"mutability":"mutable","name":"result","nameLocation":"25382:6:14","nodeType":"VariableDeclaration","scope":12875,"src":"25377:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12872,"name":"bool","nodeType":"ElementaryTypeName","src":"25377:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"25376:13:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12883,"nodeType":"FunctionDefinition","src":"25499:69:14","nodes":[],"documentation":{"id":12876,"nodeType":"StructuredDocumentation","src":"25396:98:14","text":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"functionSelector":"e0eb04d4","implemented":false,"kind":"function","modifiers":[],"name":"isFile","nameLocation":"25508:6:14","parameters":{"id":12879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12878,"mutability":"mutable","name":"path","nameLocation":"25531:4:14","nodeType":"VariableDeclaration","scope":12883,"src":"25515:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12877,"name":"string","nodeType":"ElementaryTypeName","src":"25515:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25514:22:14"},"returnParameters":{"id":12882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12881,"mutability":"mutable","name":"result","nameLocation":"25560:6:14","nodeType":"VariableDeclaration","scope":12883,"src":"25555:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12880,"name":"bool","nodeType":"ElementaryTypeName","src":"25555:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"25554:13:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12889,"nodeType":"FunctionDefinition","src":"25624:66:14","nodes":[],"documentation":{"id":12884,"nodeType":"StructuredDocumentation","src":"25574:45:14","text":"Get the path of the current project root."},"functionSelector":"d930a0e6","implemented":false,"kind":"function","modifiers":[],"name":"projectRoot","nameLocation":"25633:11:14","parameters":{"id":12885,"nodeType":"ParameterList","parameters":[],"src":"25644:2:14"},"returnParameters":{"id":12888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12887,"mutability":"mutable","name":"path","nameLocation":"25684:4:14","nodeType":"VariableDeclaration","scope":12889,"src":"25670:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12886,"name":"string","nodeType":"ElementaryTypeName","src":"25670:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25669:20:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12897,"nodeType":"FunctionDefinition","src":"25757:83:14","nodes":[],"documentation":{"id":12890,"nodeType":"StructuredDocumentation","src":"25696:56:14","text":"Prompts the user for a string value in the terminal."},"functionSelector":"47eaf474","implemented":false,"kind":"function","modifiers":[],"name":"prompt","nameLocation":"25766:6:14","parameters":{"id":12893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12892,"mutability":"mutable","name":"promptText","nameLocation":"25789:10:14","nodeType":"VariableDeclaration","scope":12897,"src":"25773:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12891,"name":"string","nodeType":"ElementaryTypeName","src":"25773:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25772:28:14"},"returnParameters":{"id":12896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12895,"mutability":"mutable","name":"input","nameLocation":"25833:5:14","nodeType":"VariableDeclaration","scope":12897,"src":"25819:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12894,"name":"string","nodeType":"ElementaryTypeName","src":"25819:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25818:21:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12905,"nodeType":"FunctionDefinition","src":"25903:78:14","nodes":[],"documentation":{"id":12898,"nodeType":"StructuredDocumentation","src":"25846:52:14","text":"Prompts the user for an address in the terminal."},"functionSelector":"62ee05f4","implemented":false,"kind":"function","modifiers":[],"name":"promptAddress","nameLocation":"25912:13:14","parameters":{"id":12901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12900,"mutability":"mutable","name":"promptText","nameLocation":"25942:10:14","nodeType":"VariableDeclaration","scope":12905,"src":"25926:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12899,"name":"string","nodeType":"ElementaryTypeName","src":"25926:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25925:28:14"},"returnParameters":{"id":12904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12905,"src":"25972:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12902,"name":"address","nodeType":"ElementaryTypeName","src":"25972:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25971:9:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12913,"nodeType":"FunctionDefinition","src":"26055:89:14","nodes":[],"documentation":{"id":12906,"nodeType":"StructuredDocumentation","src":"25987:63:14","text":"Prompts the user for a hidden string value in the terminal."},"functionSelector":"1e279d41","implemented":false,"kind":"function","modifiers":[],"name":"promptSecret","nameLocation":"26064:12:14","parameters":{"id":12909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12908,"mutability":"mutable","name":"promptText","nameLocation":"26093:10:14","nodeType":"VariableDeclaration","scope":12913,"src":"26077:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12907,"name":"string","nodeType":"ElementaryTypeName","src":"26077:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26076:28:14"},"returnParameters":{"id":12912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12911,"mutability":"mutable","name":"input","nameLocation":"26137:5:14","nodeType":"VariableDeclaration","scope":12913,"src":"26123:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12910,"name":"string","nodeType":"ElementaryTypeName","src":"26123:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26122:21:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12921,"nodeType":"FunctionDefinition","src":"26204:75:14","nodes":[],"documentation":{"id":12914,"nodeType":"StructuredDocumentation","src":"26150:49:14","text":"Prompts the user for uint256 in the terminal."},"functionSelector":"652fd489","implemented":false,"kind":"function","modifiers":[],"name":"promptUint","nameLocation":"26213:10:14","parameters":{"id":12917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12916,"mutability":"mutable","name":"promptText","nameLocation":"26240:10:14","nodeType":"VariableDeclaration","scope":12921,"src":"26224:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12915,"name":"string","nodeType":"ElementaryTypeName","src":"26224:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26223:28:14"},"returnParameters":{"id":12920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12921,"src":"26270:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12918,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:9:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12931,"nodeType":"FunctionDefinition","src":"26527:89:14","nodes":[],"documentation":{"id":12922,"nodeType":"StructuredDocumentation","src":"26285:237:14","text":"Reads the directory at the given path recursively, up to `maxDepth`.\n `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned.\n Follows symbolic links if `followLinks` is true."},"functionSelector":"c4bc59e0","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"26536:7:14","parameters":{"id":12925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12924,"mutability":"mutable","name":"path","nameLocation":"26560:4:14","nodeType":"VariableDeclaration","scope":12931,"src":"26544:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12923,"name":"string","nodeType":"ElementaryTypeName","src":"26544:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26543:22:14"},"returnParameters":{"id":12930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12929,"mutability":"mutable","name":"entries","nameLocation":"26607:7:14","nodeType":"VariableDeclaration","scope":12931,"src":"26589:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12155_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":12927,"nodeType":"UserDefinedTypeName","pathNode":{"id":12926,"name":"DirEntry","nameLocations":["26589:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":12155,"src":"26589:8:14"},"referencedDeclaration":12155,"src":"26589:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$12155_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":12928,"nodeType":"ArrayTypeName","src":"26589:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12155_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"26588:27:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12943,"nodeType":"FunctionDefinition","src":"26653:106:14","nodes":[],"documentation":{"id":12932,"nodeType":"StructuredDocumentation","src":"26622:26:14","text":"See `readDir(string)`."},"functionSelector":"1497876c","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"26662:7:14","parameters":{"id":12937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12934,"mutability":"mutable","name":"path","nameLocation":"26686:4:14","nodeType":"VariableDeclaration","scope":12943,"src":"26670:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12933,"name":"string","nodeType":"ElementaryTypeName","src":"26670:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12936,"mutability":"mutable","name":"maxDepth","nameLocation":"26699:8:14","nodeType":"VariableDeclaration","scope":12943,"src":"26692:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12935,"name":"uint64","nodeType":"ElementaryTypeName","src":"26692:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"26669:39:14"},"returnParameters":{"id":12942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12941,"mutability":"mutable","name":"entries","nameLocation":"26750:7:14","nodeType":"VariableDeclaration","scope":12943,"src":"26732:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12155_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":12939,"nodeType":"UserDefinedTypeName","pathNode":{"id":12938,"name":"DirEntry","nameLocations":["26732:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":12155,"src":"26732:8:14"},"referencedDeclaration":12155,"src":"26732:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$12155_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":12940,"nodeType":"ArrayTypeName","src":"26732:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12155_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"26731:27:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12957,"nodeType":"FunctionDefinition","src":"26796:148:14","nodes":[],"documentation":{"id":12944,"nodeType":"StructuredDocumentation","src":"26765:26:14","text":"See `readDir(string)`."},"functionSelector":"8102d70d","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"26805:7:14","parameters":{"id":12951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12946,"mutability":"mutable","name":"path","nameLocation":"26829:4:14","nodeType":"VariableDeclaration","scope":12957,"src":"26813:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12945,"name":"string","nodeType":"ElementaryTypeName","src":"26813:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12948,"mutability":"mutable","name":"maxDepth","nameLocation":"26842:8:14","nodeType":"VariableDeclaration","scope":12957,"src":"26835:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12947,"name":"uint64","nodeType":"ElementaryTypeName","src":"26835:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12950,"mutability":"mutable","name":"followLinks","nameLocation":"26857:11:14","nodeType":"VariableDeclaration","scope":12957,"src":"26852:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12949,"name":"bool","nodeType":"ElementaryTypeName","src":"26852:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"26812:57:14"},"returnParameters":{"id":12956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12955,"mutability":"mutable","name":"entries","nameLocation":"26935:7:14","nodeType":"VariableDeclaration","scope":12957,"src":"26917:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12155_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":12953,"nodeType":"UserDefinedTypeName","pathNode":{"id":12952,"name":"DirEntry","nameLocations":["26917:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":12155,"src":"26917:8:14"},"referencedDeclaration":12155,"src":"26917:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$12155_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":12954,"nodeType":"ArrayTypeName","src":"26917:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12155_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"26916:27:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12965,"nodeType":"FunctionDefinition","src":"27042:83:14","nodes":[],"documentation":{"id":12958,"nodeType":"StructuredDocumentation","src":"26950:87:14","text":"Reads the entire content of file to string. `path` is relative to the project root."},"functionSelector":"60f9bb11","implemented":false,"kind":"function","modifiers":[],"name":"readFile","nameLocation":"27051:8:14","parameters":{"id":12961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12960,"mutability":"mutable","name":"path","nameLocation":"27076:4:14","nodeType":"VariableDeclaration","scope":12965,"src":"27060:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12959,"name":"string","nodeType":"ElementaryTypeName","src":"27060:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27059:22:14"},"returnParameters":{"id":12964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12963,"mutability":"mutable","name":"data","nameLocation":"27119:4:14","nodeType":"VariableDeclaration","scope":12965,"src":"27105:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12962,"name":"string","nodeType":"ElementaryTypeName","src":"27105:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27104:20:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12973,"nodeType":"FunctionDefinition","src":"27223:88:14","nodes":[],"documentation":{"id":12966,"nodeType":"StructuredDocumentation","src":"27131:87:14","text":"Reads the entire content of file as binary. `path` is relative to the project root."},"functionSelector":"16ed7bc4","implemented":false,"kind":"function","modifiers":[],"name":"readFileBinary","nameLocation":"27232:14:14","parameters":{"id":12969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12968,"mutability":"mutable","name":"path","nameLocation":"27263:4:14","nodeType":"VariableDeclaration","scope":12973,"src":"27247:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12967,"name":"string","nodeType":"ElementaryTypeName","src":"27247:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27246:22:14"},"returnParameters":{"id":12972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12971,"mutability":"mutable","name":"data","nameLocation":"27305:4:14","nodeType":"VariableDeclaration","scope":12973,"src":"27292:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12970,"name":"bytes","nodeType":"ElementaryTypeName","src":"27292:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"27291:19:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12981,"nodeType":"FunctionDefinition","src":"27360:83:14","nodes":[],"documentation":{"id":12974,"nodeType":"StructuredDocumentation","src":"27317:38:14","text":"Reads next line of file to string."},"functionSelector":"70f55728","implemented":false,"kind":"function","modifiers":[],"name":"readLine","nameLocation":"27369:8:14","parameters":{"id":12977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12976,"mutability":"mutable","name":"path","nameLocation":"27394:4:14","nodeType":"VariableDeclaration","scope":12981,"src":"27378:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12975,"name":"string","nodeType":"ElementaryTypeName","src":"27378:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27377:22:14"},"returnParameters":{"id":12980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12979,"mutability":"mutable","name":"line","nameLocation":"27437:4:14","nodeType":"VariableDeclaration","scope":12981,"src":"27423:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12978,"name":"string","nodeType":"ElementaryTypeName","src":"27423:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27422:20:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12989,"nodeType":"FunctionDefinition","src":"27702:93:14","nodes":[],"documentation":{"id":12982,"nodeType":"StructuredDocumentation","src":"27449:248:14","text":"Reads a symbolic link, returning the path that the link points to.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` is not a symbolic link.\n - `path` does not exist."},"functionSelector":"9f5684a2","implemented":false,"kind":"function","modifiers":[],"name":"readLink","nameLocation":"27711:8:14","parameters":{"id":12985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12984,"mutability":"mutable","name":"linkPath","nameLocation":"27736:8:14","nodeType":"VariableDeclaration","scope":12989,"src":"27720:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12983,"name":"string","nodeType":"ElementaryTypeName","src":"27720:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27719:26:14"},"returnParameters":{"id":12988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12987,"mutability":"mutable","name":"targetPath","nameLocation":"27783:10:14","nodeType":"VariableDeclaration","scope":12989,"src":"27769:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12986,"name":"string","nodeType":"ElementaryTypeName","src":"27769:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27768:26:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12997,"nodeType":"FunctionDefinition","src":"28185:66:14","nodes":[],"documentation":{"id":12990,"nodeType":"StructuredDocumentation","src":"27801:379:14","text":"Removes a directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` doesn't exist.\n - `path` isn't a directory.\n - User lacks permissions to modify `path`.\n - The directory is not empty and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"45c62011","implemented":false,"kind":"function","modifiers":[],"name":"removeDir","nameLocation":"28194:9:14","parameters":{"id":12995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12992,"mutability":"mutable","name":"path","nameLocation":"28220:4:14","nodeType":"VariableDeclaration","scope":12997,"src":"28204:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12991,"name":"string","nodeType":"ElementaryTypeName","src":"28204:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12994,"mutability":"mutable","name":"recursive","nameLocation":"28231:9:14","nodeType":"VariableDeclaration","scope":12997,"src":"28226:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12993,"name":"bool","nodeType":"ElementaryTypeName","src":"28226:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28203:38:14"},"returnParameters":{"id":12996,"nodeType":"ParameterList","parameters":[],"src":"28250:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13003,"nodeType":"FunctionDefinition","src":"28584:51:14","nodes":[],"documentation":{"id":12998,"nodeType":"StructuredDocumentation","src":"28257:322:14","text":"Removes a file from the filesystem.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` points to a directory.\n - The file doesn't exist.\n - The user lacks permissions to remove the file.\n `path` is relative to the project root."},"functionSelector":"f1afe04d","implemented":false,"kind":"function","modifiers":[],"name":"removeFile","nameLocation":"28593:10:14","parameters":{"id":13001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13000,"mutability":"mutable","name":"path","nameLocation":"28620:4:14","nodeType":"VariableDeclaration","scope":13003,"src":"28604:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12999,"name":"string","nodeType":"ElementaryTypeName","src":"28604:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28603:22:14"},"returnParameters":{"id":13002,"nodeType":"ParameterList","parameters":[],"src":"28634:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13013,"nodeType":"FunctionDefinition","src":"28742:91:14","nodes":[],"documentation":{"id":13004,"nodeType":"StructuredDocumentation","src":"28641:96:14","text":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"functionSelector":"f45c1ce7","implemented":false,"kind":"function","modifiers":[],"name":"tryFfi","nameLocation":"28751:6:14","parameters":{"id":13008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13007,"mutability":"mutable","name":"commandInput","nameLocation":"28776:12:14","nodeType":"VariableDeclaration","scope":13013,"src":"28758:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13005,"name":"string","nodeType":"ElementaryTypeName","src":"28758:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13006,"nodeType":"ArrayTypeName","src":"28758:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"28757:32:14"},"returnParameters":{"id":13012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13011,"mutability":"mutable","name":"result","nameLocation":"28825:6:14","nodeType":"VariableDeclaration","scope":13013,"src":"28808:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$12189_memory_ptr","typeString":"struct VmSafe.FfiResult"},"typeName":{"id":13010,"nodeType":"UserDefinedTypeName","pathNode":{"id":13009,"name":"FfiResult","nameLocations":["28808:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":12189,"src":"28808:9:14"},"referencedDeclaration":12189,"src":"28808:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$12189_storage_ptr","typeString":"struct VmSafe.FfiResult"}},"visibility":"internal"}],"src":"28807:25:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13019,"nodeType":"FunctionDefinition","src":"28898:60:14","nodes":[],"documentation":{"id":13014,"nodeType":"StructuredDocumentation","src":"28839:54:14","text":"Returns the time since unix epoch in milliseconds."},"functionSelector":"625387dc","implemented":false,"kind":"function","modifiers":[],"name":"unixTime","nameLocation":"28907:8:14","parameters":{"id":13015,"nodeType":"ParameterList","parameters":[],"src":"28915:2:14"},"returnParameters":{"id":13018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13017,"mutability":"mutable","name":"milliseconds","nameLocation":"28944:12:14","nodeType":"VariableDeclaration","scope":13019,"src":"28936:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13016,"name":"uint256","nodeType":"ElementaryTypeName","src":"28936:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28935:22:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13027,"nodeType":"FunctionDefinition","src":"29127:72:14","nodes":[],"documentation":{"id":13020,"nodeType":"StructuredDocumentation","src":"28964:158:14","text":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"897e0a97","implemented":false,"kind":"function","modifiers":[],"name":"writeFile","nameLocation":"29136:9:14","parameters":{"id":13025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13022,"mutability":"mutable","name":"path","nameLocation":"29162:4:14","nodeType":"VariableDeclaration","scope":13027,"src":"29146:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13021,"name":"string","nodeType":"ElementaryTypeName","src":"29146:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13024,"mutability":"mutable","name":"data","nameLocation":"29184:4:14","nodeType":"VariableDeclaration","scope":13027,"src":"29168:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13023,"name":"string","nodeType":"ElementaryTypeName","src":"29168:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29145:44:14"},"returnParameters":{"id":13026,"nodeType":"ParameterList","parameters":[],"src":"29198:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13035,"nodeType":"FunctionDefinition","src":"29377:77:14","nodes":[],"documentation":{"id":13028,"nodeType":"StructuredDocumentation","src":"29205:167:14","text":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"1f21fc80","implemented":false,"kind":"function","modifiers":[],"name":"writeFileBinary","nameLocation":"29386:15:14","parameters":{"id":13033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13030,"mutability":"mutable","name":"path","nameLocation":"29418:4:14","nodeType":"VariableDeclaration","scope":13035,"src":"29402:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13029,"name":"string","nodeType":"ElementaryTypeName","src":"29402:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13032,"mutability":"mutable","name":"data","nameLocation":"29439:4:14","nodeType":"VariableDeclaration","scope":13035,"src":"29424:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13031,"name":"bytes","nodeType":"ElementaryTypeName","src":"29424:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29401:43:14"},"returnParameters":{"id":13034,"nodeType":"ParameterList","parameters":[],"src":"29453:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13043,"nodeType":"FunctionDefinition","src":"29575:72:14","nodes":[],"documentation":{"id":13036,"nodeType":"StructuredDocumentation","src":"29460:110:14","text":"Writes line to file, creating a file if it does not exist.\n `path` is relative to the project root."},"functionSelector":"619d897f","implemented":false,"kind":"function","modifiers":[],"name":"writeLine","nameLocation":"29584:9:14","parameters":{"id":13041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13038,"mutability":"mutable","name":"path","nameLocation":"29610:4:14","nodeType":"VariableDeclaration","scope":13043,"src":"29594:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13037,"name":"string","nodeType":"ElementaryTypeName","src":"29594:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13040,"mutability":"mutable","name":"data","nameLocation":"29632:4:14","nodeType":"VariableDeclaration","scope":13043,"src":"29616:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13039,"name":"string","nodeType":"ElementaryTypeName","src":"29616:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29593:44:14"},"returnParameters":{"id":13042,"nodeType":"ParameterList","parameters":[],"src":"29646:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13053,"nodeType":"FunctionDefinition","src":"29840:91:14","nodes":[],"documentation":{"id":13044,"nodeType":"StructuredDocumentation","src":"29684:151:14","text":"Checks if `key` exists in a JSON object\n `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"functionSelector":"528a683c","implemented":false,"kind":"function","modifiers":[],"name":"keyExists","nameLocation":"29849:9:14","parameters":{"id":13049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13046,"mutability":"mutable","name":"json","nameLocation":"29875:4:14","nodeType":"VariableDeclaration","scope":13053,"src":"29859:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13045,"name":"string","nodeType":"ElementaryTypeName","src":"29859:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13048,"mutability":"mutable","name":"key","nameLocation":"29897:3:14","nodeType":"VariableDeclaration","scope":13053,"src":"29881:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13047,"name":"string","nodeType":"ElementaryTypeName","src":"29881:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29858:43:14"},"returnParameters":{"id":13052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13053,"src":"29925:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13050,"name":"bool","nodeType":"ElementaryTypeName","src":"29925:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"29924:6:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13063,"nodeType":"FunctionDefinition","src":"29986:95:14","nodes":[],"documentation":{"id":13054,"nodeType":"StructuredDocumentation","src":"29937:44:14","text":"Checks if `key` exists in a JSON object."},"functionSelector":"db4235f6","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsJson","nameLocation":"29995:13:14","parameters":{"id":13059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13056,"mutability":"mutable","name":"json","nameLocation":"30025:4:14","nodeType":"VariableDeclaration","scope":13063,"src":"30009:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13055,"name":"string","nodeType":"ElementaryTypeName","src":"30009:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13058,"mutability":"mutable","name":"key","nameLocation":"30047:3:14","nodeType":"VariableDeclaration","scope":13063,"src":"30031:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13057,"name":"string","nodeType":"ElementaryTypeName","src":"30031:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30008:43:14"},"returnParameters":{"id":13062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13063,"src":"30075:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13060,"name":"bool","nodeType":"ElementaryTypeName","src":"30075:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"30074:6:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13073,"nodeType":"FunctionDefinition","src":"30162:101:14","nodes":[],"documentation":{"id":13064,"nodeType":"StructuredDocumentation","src":"30087:70:14","text":"Parses a string of JSON data at `key` and coerces it to `address`."},"functionSelector":"1e19e657","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddress","nameLocation":"30171:16:14","parameters":{"id":13069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13066,"mutability":"mutable","name":"json","nameLocation":"30204:4:14","nodeType":"VariableDeclaration","scope":13073,"src":"30188:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13065,"name":"string","nodeType":"ElementaryTypeName","src":"30188:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13068,"mutability":"mutable","name":"key","nameLocation":"30226:3:14","nodeType":"VariableDeclaration","scope":13073,"src":"30210:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13067,"name":"string","nodeType":"ElementaryTypeName","src":"30210:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30187:43:14"},"returnParameters":{"id":13072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13073,"src":"30254:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13070,"name":"address","nodeType":"ElementaryTypeName","src":"30254:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"30253:9:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13084,"nodeType":"FunctionDefinition","src":"30346:139:14","nodes":[],"documentation":{"id":13074,"nodeType":"StructuredDocumentation","src":"30269:72:14","text":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"functionSelector":"2fce7883","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddressArray","nameLocation":"30355:21:14","parameters":{"id":13079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13076,"mutability":"mutable","name":"json","nameLocation":"30393:4:14","nodeType":"VariableDeclaration","scope":13084,"src":"30377:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13075,"name":"string","nodeType":"ElementaryTypeName","src":"30377:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13078,"mutability":"mutable","name":"key","nameLocation":"30415:3:14","nodeType":"VariableDeclaration","scope":13084,"src":"30399:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13077,"name":"string","nodeType":"ElementaryTypeName","src":"30399:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30376:43:14"},"returnParameters":{"id":13083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13084,"src":"30467:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13080,"name":"address","nodeType":"ElementaryTypeName","src":"30467:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13081,"nodeType":"ArrayTypeName","src":"30467:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"30466:18:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13094,"nodeType":"FunctionDefinition","src":"30563:95:14","nodes":[],"documentation":{"id":13085,"nodeType":"StructuredDocumentation","src":"30491:67:14","text":"Parses a string of JSON data at `key` and coerces it to `bool`."},"functionSelector":"9f86dc91","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBool","nameLocation":"30572:13:14","parameters":{"id":13090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13087,"mutability":"mutable","name":"json","nameLocation":"30602:4:14","nodeType":"VariableDeclaration","scope":13094,"src":"30586:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13086,"name":"string","nodeType":"ElementaryTypeName","src":"30586:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13089,"mutability":"mutable","name":"key","nameLocation":"30624:3:14","nodeType":"VariableDeclaration","scope":13094,"src":"30608:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13088,"name":"string","nodeType":"ElementaryTypeName","src":"30608:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30585:43:14"},"returnParameters":{"id":13093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13094,"src":"30652:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13091,"name":"bool","nodeType":"ElementaryTypeName","src":"30652:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"30651:6:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13105,"nodeType":"FunctionDefinition","src":"30738:109:14","nodes":[],"documentation":{"id":13095,"nodeType":"StructuredDocumentation","src":"30664:69:14","text":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"functionSelector":"91f3b94f","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBoolArray","nameLocation":"30747:18:14","parameters":{"id":13100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13097,"mutability":"mutable","name":"json","nameLocation":"30782:4:14","nodeType":"VariableDeclaration","scope":13105,"src":"30766:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13096,"name":"string","nodeType":"ElementaryTypeName","src":"30766:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13099,"mutability":"mutable","name":"key","nameLocation":"30804:3:14","nodeType":"VariableDeclaration","scope":13105,"src":"30788:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13098,"name":"string","nodeType":"ElementaryTypeName","src":"30788:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30765:43:14"},"returnParameters":{"id":13104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13105,"src":"30832:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13101,"name":"bool","nodeType":"ElementaryTypeName","src":"30832:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13102,"nodeType":"ArrayTypeName","src":"30832:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"30831:15:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13115,"nodeType":"FunctionDefinition","src":"30926:104:14","nodes":[],"documentation":{"id":13106,"nodeType":"StructuredDocumentation","src":"30853:68:14","text":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"functionSelector":"fd921be8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes","nameLocation":"30935:14:14","parameters":{"id":13111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13108,"mutability":"mutable","name":"json","nameLocation":"30966:4:14","nodeType":"VariableDeclaration","scope":13115,"src":"30950:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13107,"name":"string","nodeType":"ElementaryTypeName","src":"30950:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13110,"mutability":"mutable","name":"key","nameLocation":"30988:3:14","nodeType":"VariableDeclaration","scope":13115,"src":"30972:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13109,"name":"string","nodeType":"ElementaryTypeName","src":"30972:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30949:43:14"},"returnParameters":{"id":13114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13115,"src":"31016:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13112,"name":"bytes","nodeType":"ElementaryTypeName","src":"31016:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"31015:14:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13125,"nodeType":"FunctionDefinition","src":"31111:101:14","nodes":[],"documentation":{"id":13116,"nodeType":"StructuredDocumentation","src":"31036:70:14","text":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"functionSelector":"1777e59d","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32","nameLocation":"31120:16:14","parameters":{"id":13121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13118,"mutability":"mutable","name":"json","nameLocation":"31153:4:14","nodeType":"VariableDeclaration","scope":13125,"src":"31137:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13117,"name":"string","nodeType":"ElementaryTypeName","src":"31137:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13120,"mutability":"mutable","name":"key","nameLocation":"31175:3:14","nodeType":"VariableDeclaration","scope":13125,"src":"31159:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13119,"name":"string","nodeType":"ElementaryTypeName","src":"31159:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31136:43:14"},"returnParameters":{"id":13124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13125,"src":"31203:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13122,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31203:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"31202:9:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13136,"nodeType":"FunctionDefinition","src":"31295:139:14","nodes":[],"documentation":{"id":13126,"nodeType":"StructuredDocumentation","src":"31218:72:14","text":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"functionSelector":"91c75bc3","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32Array","nameLocation":"31304:21:14","parameters":{"id":13131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13128,"mutability":"mutable","name":"json","nameLocation":"31342:4:14","nodeType":"VariableDeclaration","scope":13136,"src":"31326:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13127,"name":"string","nodeType":"ElementaryTypeName","src":"31326:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13130,"mutability":"mutable","name":"key","nameLocation":"31364:3:14","nodeType":"VariableDeclaration","scope":13136,"src":"31348:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13129,"name":"string","nodeType":"ElementaryTypeName","src":"31348:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31325:43:14"},"returnParameters":{"id":13135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13136,"src":"31416:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31416:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13133,"nodeType":"ArrayTypeName","src":"31416:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"31415:18:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13147,"nodeType":"FunctionDefinition","src":"31515:111:14","nodes":[],"documentation":{"id":13137,"nodeType":"StructuredDocumentation","src":"31440:70:14","text":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"functionSelector":"6631aa99","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytesArray","nameLocation":"31524:19:14","parameters":{"id":13142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13139,"mutability":"mutable","name":"json","nameLocation":"31560:4:14","nodeType":"VariableDeclaration","scope":13147,"src":"31544:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13138,"name":"string","nodeType":"ElementaryTypeName","src":"31544:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13141,"mutability":"mutable","name":"key","nameLocation":"31582:3:14","nodeType":"VariableDeclaration","scope":13147,"src":"31566:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13140,"name":"string","nodeType":"ElementaryTypeName","src":"31566:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31543:43:14"},"returnParameters":{"id":13146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13147,"src":"31610:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13143,"name":"bytes","nodeType":"ElementaryTypeName","src":"31610:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13144,"nodeType":"ArrayTypeName","src":"31610:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"31609:16:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13157,"nodeType":"FunctionDefinition","src":"31706:96:14","nodes":[],"documentation":{"id":13148,"nodeType":"StructuredDocumentation","src":"31632:69:14","text":"Parses a string of JSON data at `key` and coerces it to `int256`."},"functionSelector":"7b048ccd","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonInt","nameLocation":"31715:12:14","parameters":{"id":13153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13150,"mutability":"mutable","name":"json","nameLocation":"31744:4:14","nodeType":"VariableDeclaration","scope":13157,"src":"31728:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13149,"name":"string","nodeType":"ElementaryTypeName","src":"31728:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13152,"mutability":"mutable","name":"key","nameLocation":"31766:3:14","nodeType":"VariableDeclaration","scope":13157,"src":"31750:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13151,"name":"string","nodeType":"ElementaryTypeName","src":"31750:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31727:43:14"},"returnParameters":{"id":13156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13157,"src":"31794:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13154,"name":"int256","nodeType":"ElementaryTypeName","src":"31794:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31793:8:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13168,"nodeType":"FunctionDefinition","src":"31884:110:14","nodes":[],"documentation":{"id":13158,"nodeType":"StructuredDocumentation","src":"31808:71:14","text":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"functionSelector":"9983c28a","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonIntArray","nameLocation":"31893:17:14","parameters":{"id":13163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13160,"mutability":"mutable","name":"json","nameLocation":"31927:4:14","nodeType":"VariableDeclaration","scope":13168,"src":"31911:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13159,"name":"string","nodeType":"ElementaryTypeName","src":"31911:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13162,"mutability":"mutable","name":"key","nameLocation":"31949:3:14","nodeType":"VariableDeclaration","scope":13168,"src":"31933:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13161,"name":"string","nodeType":"ElementaryTypeName","src":"31933:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31910:43:14"},"returnParameters":{"id":13167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13168,"src":"31977:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13164,"name":"int256","nodeType":"ElementaryTypeName","src":"31977:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13165,"nodeType":"ArrayTypeName","src":"31977:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"31976:17:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13179,"nodeType":"FunctionDefinition","src":"32059:111:14","nodes":[],"documentation":{"id":13169,"nodeType":"StructuredDocumentation","src":"32000:54:14","text":"Returns an array of all the keys in a JSON object."},"functionSelector":"213e4198","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonKeys","nameLocation":"32068:13:14","parameters":{"id":13174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13171,"mutability":"mutable","name":"json","nameLocation":"32098:4:14","nodeType":"VariableDeclaration","scope":13179,"src":"32082:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13170,"name":"string","nodeType":"ElementaryTypeName","src":"32082:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13173,"mutability":"mutable","name":"key","nameLocation":"32120:3:14","nodeType":"VariableDeclaration","scope":13179,"src":"32104:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13172,"name":"string","nodeType":"ElementaryTypeName","src":"32104:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32081:43:14"},"returnParameters":{"id":13178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13177,"mutability":"mutable","name":"keys","nameLocation":"32164:4:14","nodeType":"VariableDeclaration","scope":13179,"src":"32148:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13175,"name":"string","nodeType":"ElementaryTypeName","src":"32148:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13176,"nodeType":"ArrayTypeName","src":"32148:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"32147:22:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13189,"nodeType":"FunctionDefinition","src":"32250:106:14","nodes":[],"documentation":{"id":13180,"nodeType":"StructuredDocumentation","src":"32176:69:14","text":"Parses a string of JSON data at `key` and coerces it to `string`."},"functionSelector":"49c4fac8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonString","nameLocation":"32259:15:14","parameters":{"id":13185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13182,"mutability":"mutable","name":"json","nameLocation":"32291:4:14","nodeType":"VariableDeclaration","scope":13189,"src":"32275:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13181,"name":"string","nodeType":"ElementaryTypeName","src":"32275:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13184,"mutability":"mutable","name":"key","nameLocation":"32313:3:14","nodeType":"VariableDeclaration","scope":13189,"src":"32297:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13183,"name":"string","nodeType":"ElementaryTypeName","src":"32297:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32274:43:14"},"returnParameters":{"id":13188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13189,"src":"32341:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13186,"name":"string","nodeType":"ElementaryTypeName","src":"32341:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32340:15:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13200,"nodeType":"FunctionDefinition","src":"32438:113:14","nodes":[],"documentation":{"id":13190,"nodeType":"StructuredDocumentation","src":"32362:71:14","text":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"functionSelector":"498fdcf4","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonStringArray","nameLocation":"32447:20:14","parameters":{"id":13195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13192,"mutability":"mutable","name":"json","nameLocation":"32484:4:14","nodeType":"VariableDeclaration","scope":13200,"src":"32468:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13191,"name":"string","nodeType":"ElementaryTypeName","src":"32468:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13194,"mutability":"mutable","name":"key","nameLocation":"32506:3:14","nodeType":"VariableDeclaration","scope":13200,"src":"32490:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13193,"name":"string","nodeType":"ElementaryTypeName","src":"32490:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32467:43:14"},"returnParameters":{"id":13199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13200,"src":"32534:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13196,"name":"string","nodeType":"ElementaryTypeName","src":"32534:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13197,"nodeType":"ArrayTypeName","src":"32534:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"32533:17:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13210,"nodeType":"FunctionDefinition","src":"32632:98:14","nodes":[],"documentation":{"id":13201,"nodeType":"StructuredDocumentation","src":"32557:70:14","text":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"functionSelector":"addde2b6","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUint","nameLocation":"32641:13:14","parameters":{"id":13206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13203,"mutability":"mutable","name":"json","nameLocation":"32671:4:14","nodeType":"VariableDeclaration","scope":13210,"src":"32655:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13202,"name":"string","nodeType":"ElementaryTypeName","src":"32655:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13205,"mutability":"mutable","name":"key","nameLocation":"32693:3:14","nodeType":"VariableDeclaration","scope":13210,"src":"32677:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13204,"name":"string","nodeType":"ElementaryTypeName","src":"32677:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32654:43:14"},"returnParameters":{"id":13209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13210,"src":"32721:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13207,"name":"uint256","nodeType":"ElementaryTypeName","src":"32721:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"32720:9:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13221,"nodeType":"FunctionDefinition","src":"32813:112:14","nodes":[],"documentation":{"id":13211,"nodeType":"StructuredDocumentation","src":"32736:72:14","text":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"functionSelector":"522074ab","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUintArray","nameLocation":"32822:18:14","parameters":{"id":13216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13213,"mutability":"mutable","name":"json","nameLocation":"32857:4:14","nodeType":"VariableDeclaration","scope":13221,"src":"32841:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13212,"name":"string","nodeType":"ElementaryTypeName","src":"32841:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13215,"mutability":"mutable","name":"key","nameLocation":"32879:3:14","nodeType":"VariableDeclaration","scope":13221,"src":"32863:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13214,"name":"string","nodeType":"ElementaryTypeName","src":"32863:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32840:43:14"},"returnParameters":{"id":13220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13221,"src":"32907:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13217,"name":"uint256","nodeType":"ElementaryTypeName","src":"32907:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13218,"nodeType":"ArrayTypeName","src":"32907:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"32906:18:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13229,"nodeType":"FunctionDefinition","src":"32966:93:14","nodes":[],"documentation":{"id":13222,"nodeType":"StructuredDocumentation","src":"32931:30:14","text":"ABI-encodes a JSON object."},"functionSelector":"6a82600a","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"32975:9:14","parameters":{"id":13225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13224,"mutability":"mutable","name":"json","nameLocation":"33001:4:14","nodeType":"VariableDeclaration","scope":13229,"src":"32985:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13223,"name":"string","nodeType":"ElementaryTypeName","src":"32985:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32984:22:14"},"returnParameters":{"id":13228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13227,"mutability":"mutable","name":"abiEncodedData","nameLocation":"33043:14:14","nodeType":"VariableDeclaration","scope":13229,"src":"33030:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13226,"name":"bytes","nodeType":"ElementaryTypeName","src":"33030:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33029:29:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13239,"nodeType":"FunctionDefinition","src":"33109:114:14","nodes":[],"documentation":{"id":13230,"nodeType":"StructuredDocumentation","src":"33065:39:14","text":"ABI-encodes a JSON object at `key`."},"functionSelector":"85940ef1","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"33118:9:14","parameters":{"id":13235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13232,"mutability":"mutable","name":"json","nameLocation":"33144:4:14","nodeType":"VariableDeclaration","scope":13239,"src":"33128:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13231,"name":"string","nodeType":"ElementaryTypeName","src":"33128:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13234,"mutability":"mutable","name":"key","nameLocation":"33166:3:14","nodeType":"VariableDeclaration","scope":13239,"src":"33150:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13233,"name":"string","nodeType":"ElementaryTypeName","src":"33150:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33127:43:14"},"returnParameters":{"id":13238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13237,"mutability":"mutable","name":"abiEncodedData","nameLocation":"33207:14:14","nodeType":"VariableDeclaration","scope":13239,"src":"33194:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13236,"name":"bytes","nodeType":"ElementaryTypeName","src":"33194:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33193:29:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13251,"nodeType":"FunctionDefinition","src":"33258:148:14","nodes":[],"documentation":{"id":13240,"nodeType":"StructuredDocumentation","src":"33229:24:14","text":"See `serializeJson`."},"functionSelector":"972c6062","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"33267:16:14","parameters":{"id":13247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13242,"mutability":"mutable","name":"objectKey","nameLocation":"33300:9:14","nodeType":"VariableDeclaration","scope":13251,"src":"33284:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13241,"name":"string","nodeType":"ElementaryTypeName","src":"33284:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13244,"mutability":"mutable","name":"valueKey","nameLocation":"33327:8:14","nodeType":"VariableDeclaration","scope":13251,"src":"33311:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13243,"name":"string","nodeType":"ElementaryTypeName","src":"33311:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13246,"mutability":"mutable","name":"value","nameLocation":"33345:5:14","nodeType":"VariableDeclaration","scope":13251,"src":"33337:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13245,"name":"address","nodeType":"ElementaryTypeName","src":"33337:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"33283:68:14"},"returnParameters":{"id":13250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13249,"mutability":"mutable","name":"json","nameLocation":"33400:4:14","nodeType":"VariableDeclaration","scope":13251,"src":"33386:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13248,"name":"string","nodeType":"ElementaryTypeName","src":"33386:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33385:20:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13264,"nodeType":"FunctionDefinition","src":"33441:160:14","nodes":[],"documentation":{"id":13252,"nodeType":"StructuredDocumentation","src":"33412:24:14","text":"See `serializeJson`."},"functionSelector":"1e356e1a","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"33450:16:14","parameters":{"id":13260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13254,"mutability":"mutable","name":"objectKey","nameLocation":"33483:9:14","nodeType":"VariableDeclaration","scope":13264,"src":"33467:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13253,"name":"string","nodeType":"ElementaryTypeName","src":"33467:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13256,"mutability":"mutable","name":"valueKey","nameLocation":"33510:8:14","nodeType":"VariableDeclaration","scope":13264,"src":"33494:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13255,"name":"string","nodeType":"ElementaryTypeName","src":"33494:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13259,"mutability":"mutable","name":"values","nameLocation":"33539:6:14","nodeType":"VariableDeclaration","scope":13264,"src":"33520:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13257,"name":"address","nodeType":"ElementaryTypeName","src":"33520:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13258,"nodeType":"ArrayTypeName","src":"33520:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"33466:80:14"},"returnParameters":{"id":13263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13262,"mutability":"mutable","name":"json","nameLocation":"33595:4:14","nodeType":"VariableDeclaration","scope":13264,"src":"33581:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13261,"name":"string","nodeType":"ElementaryTypeName","src":"33581:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33580:20:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13276,"nodeType":"FunctionDefinition","src":"33636:142:14","nodes":[],"documentation":{"id":13265,"nodeType":"StructuredDocumentation","src":"33607:24:14","text":"See `serializeJson`."},"functionSelector":"ac22e971","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"33645:13:14","parameters":{"id":13272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13267,"mutability":"mutable","name":"objectKey","nameLocation":"33675:9:14","nodeType":"VariableDeclaration","scope":13276,"src":"33659:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13266,"name":"string","nodeType":"ElementaryTypeName","src":"33659:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13269,"mutability":"mutable","name":"valueKey","nameLocation":"33702:8:14","nodeType":"VariableDeclaration","scope":13276,"src":"33686:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13268,"name":"string","nodeType":"ElementaryTypeName","src":"33686:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13271,"mutability":"mutable","name":"value","nameLocation":"33717:5:14","nodeType":"VariableDeclaration","scope":13276,"src":"33712:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13270,"name":"bool","nodeType":"ElementaryTypeName","src":"33712:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"33658:65:14"},"returnParameters":{"id":13275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13274,"mutability":"mutable","name":"json","nameLocation":"33772:4:14","nodeType":"VariableDeclaration","scope":13276,"src":"33758:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13273,"name":"string","nodeType":"ElementaryTypeName","src":"33758:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33757:20:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13289,"nodeType":"FunctionDefinition","src":"33813:154:14","nodes":[],"documentation":{"id":13277,"nodeType":"StructuredDocumentation","src":"33784:24:14","text":"See `serializeJson`."},"functionSelector":"92925aa1","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"33822:13:14","parameters":{"id":13285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13279,"mutability":"mutable","name":"objectKey","nameLocation":"33852:9:14","nodeType":"VariableDeclaration","scope":13289,"src":"33836:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13278,"name":"string","nodeType":"ElementaryTypeName","src":"33836:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13281,"mutability":"mutable","name":"valueKey","nameLocation":"33879:8:14","nodeType":"VariableDeclaration","scope":13289,"src":"33863:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13280,"name":"string","nodeType":"ElementaryTypeName","src":"33863:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13284,"mutability":"mutable","name":"values","nameLocation":"33905:6:14","nodeType":"VariableDeclaration","scope":13289,"src":"33889:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13282,"name":"bool","nodeType":"ElementaryTypeName","src":"33889:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13283,"nodeType":"ArrayTypeName","src":"33889:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"33835:77:14"},"returnParameters":{"id":13288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13287,"mutability":"mutable","name":"json","nameLocation":"33961:4:14","nodeType":"VariableDeclaration","scope":13289,"src":"33947:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13286,"name":"string","nodeType":"ElementaryTypeName","src":"33947:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33946:20:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13301,"nodeType":"FunctionDefinition","src":"34002:148:14","nodes":[],"documentation":{"id":13290,"nodeType":"StructuredDocumentation","src":"33973:24:14","text":"See `serializeJson`."},"functionSelector":"2d812b44","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"34011:16:14","parameters":{"id":13297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13292,"mutability":"mutable","name":"objectKey","nameLocation":"34044:9:14","nodeType":"VariableDeclaration","scope":13301,"src":"34028:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13291,"name":"string","nodeType":"ElementaryTypeName","src":"34028:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13294,"mutability":"mutable","name":"valueKey","nameLocation":"34071:8:14","nodeType":"VariableDeclaration","scope":13301,"src":"34055:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13293,"name":"string","nodeType":"ElementaryTypeName","src":"34055:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13296,"mutability":"mutable","name":"value","nameLocation":"34089:5:14","nodeType":"VariableDeclaration","scope":13301,"src":"34081:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"34081:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"34027:68:14"},"returnParameters":{"id":13300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13299,"mutability":"mutable","name":"json","nameLocation":"34144:4:14","nodeType":"VariableDeclaration","scope":13301,"src":"34130:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13298,"name":"string","nodeType":"ElementaryTypeName","src":"34130:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34129:20:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13314,"nodeType":"FunctionDefinition","src":"34185:160:14","nodes":[],"documentation":{"id":13302,"nodeType":"StructuredDocumentation","src":"34156:24:14","text":"See `serializeJson`."},"functionSelector":"201e43e2","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"34194:16:14","parameters":{"id":13310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13304,"mutability":"mutable","name":"objectKey","nameLocation":"34227:9:14","nodeType":"VariableDeclaration","scope":13314,"src":"34211:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13303,"name":"string","nodeType":"ElementaryTypeName","src":"34211:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13306,"mutability":"mutable","name":"valueKey","nameLocation":"34254:8:14","nodeType":"VariableDeclaration","scope":13314,"src":"34238:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13305,"name":"string","nodeType":"ElementaryTypeName","src":"34238:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13309,"mutability":"mutable","name":"values","nameLocation":"34283:6:14","nodeType":"VariableDeclaration","scope":13314,"src":"34264:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13307,"name":"bytes32","nodeType":"ElementaryTypeName","src":"34264:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13308,"nodeType":"ArrayTypeName","src":"34264:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"34210:80:14"},"returnParameters":{"id":13313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13312,"mutability":"mutable","name":"json","nameLocation":"34339:4:14","nodeType":"VariableDeclaration","scope":13314,"src":"34325:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13311,"name":"string","nodeType":"ElementaryTypeName","src":"34325:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34324:20:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13326,"nodeType":"FunctionDefinition","src":"34380:153:14","nodes":[],"documentation":{"id":13315,"nodeType":"StructuredDocumentation","src":"34351:24:14","text":"See `serializeJson`."},"functionSelector":"f21d52c7","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"34389:14:14","parameters":{"id":13322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13317,"mutability":"mutable","name":"objectKey","nameLocation":"34420:9:14","nodeType":"VariableDeclaration","scope":13326,"src":"34404:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13316,"name":"string","nodeType":"ElementaryTypeName","src":"34404:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13319,"mutability":"mutable","name":"valueKey","nameLocation":"34447:8:14","nodeType":"VariableDeclaration","scope":13326,"src":"34431:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13318,"name":"string","nodeType":"ElementaryTypeName","src":"34431:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13321,"mutability":"mutable","name":"value","nameLocation":"34472:5:14","nodeType":"VariableDeclaration","scope":13326,"src":"34457:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13320,"name":"bytes","nodeType":"ElementaryTypeName","src":"34457:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34403:75:14"},"returnParameters":{"id":13325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13324,"mutability":"mutable","name":"json","nameLocation":"34527:4:14","nodeType":"VariableDeclaration","scope":13326,"src":"34513:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13323,"name":"string","nodeType":"ElementaryTypeName","src":"34513:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34512:20:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13339,"nodeType":"FunctionDefinition","src":"34568:156:14","nodes":[],"documentation":{"id":13327,"nodeType":"StructuredDocumentation","src":"34539:24:14","text":"See `serializeJson`."},"functionSelector":"9884b232","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"34577:14:14","parameters":{"id":13335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13329,"mutability":"mutable","name":"objectKey","nameLocation":"34608:9:14","nodeType":"VariableDeclaration","scope":13339,"src":"34592:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13328,"name":"string","nodeType":"ElementaryTypeName","src":"34592:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13331,"mutability":"mutable","name":"valueKey","nameLocation":"34635:8:14","nodeType":"VariableDeclaration","scope":13339,"src":"34619:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13330,"name":"string","nodeType":"ElementaryTypeName","src":"34619:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13334,"mutability":"mutable","name":"values","nameLocation":"34662:6:14","nodeType":"VariableDeclaration","scope":13339,"src":"34645:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13332,"name":"bytes","nodeType":"ElementaryTypeName","src":"34645:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13333,"nodeType":"ArrayTypeName","src":"34645:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"34591:78:14"},"returnParameters":{"id":13338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13337,"mutability":"mutable","name":"json","nameLocation":"34718:4:14","nodeType":"VariableDeclaration","scope":13339,"src":"34704:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13336,"name":"string","nodeType":"ElementaryTypeName","src":"34704:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34703:20:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13351,"nodeType":"FunctionDefinition","src":"34759:143:14","nodes":[],"documentation":{"id":13340,"nodeType":"StructuredDocumentation","src":"34730:24:14","text":"See `serializeJson`."},"functionSelector":"3f33db60","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"34768:12:14","parameters":{"id":13347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13342,"mutability":"mutable","name":"objectKey","nameLocation":"34797:9:14","nodeType":"VariableDeclaration","scope":13351,"src":"34781:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13341,"name":"string","nodeType":"ElementaryTypeName","src":"34781:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13344,"mutability":"mutable","name":"valueKey","nameLocation":"34824:8:14","nodeType":"VariableDeclaration","scope":13351,"src":"34808:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13343,"name":"string","nodeType":"ElementaryTypeName","src":"34808:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13346,"mutability":"mutable","name":"value","nameLocation":"34841:5:14","nodeType":"VariableDeclaration","scope":13351,"src":"34834:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13345,"name":"int256","nodeType":"ElementaryTypeName","src":"34834:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34780:67:14"},"returnParameters":{"id":13350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13349,"mutability":"mutable","name":"json","nameLocation":"34896:4:14","nodeType":"VariableDeclaration","scope":13351,"src":"34882:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13348,"name":"string","nodeType":"ElementaryTypeName","src":"34882:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34881:20:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13364,"nodeType":"FunctionDefinition","src":"34937:155:14","nodes":[],"documentation":{"id":13352,"nodeType":"StructuredDocumentation","src":"34908:24:14","text":"See `serializeJson`."},"functionSelector":"7676e127","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"34946:12:14","parameters":{"id":13360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13354,"mutability":"mutable","name":"objectKey","nameLocation":"34975:9:14","nodeType":"VariableDeclaration","scope":13364,"src":"34959:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13353,"name":"string","nodeType":"ElementaryTypeName","src":"34959:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13356,"mutability":"mutable","name":"valueKey","nameLocation":"35002:8:14","nodeType":"VariableDeclaration","scope":13364,"src":"34986:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13355,"name":"string","nodeType":"ElementaryTypeName","src":"34986:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13359,"mutability":"mutable","name":"values","nameLocation":"35030:6:14","nodeType":"VariableDeclaration","scope":13364,"src":"35012:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13357,"name":"int256","nodeType":"ElementaryTypeName","src":"35012:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13358,"nodeType":"ArrayTypeName","src":"35012:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"34958:79:14"},"returnParameters":{"id":13363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13362,"mutability":"mutable","name":"json","nameLocation":"35086:4:14","nodeType":"VariableDeclaration","scope":13364,"src":"35072:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13361,"name":"string","nodeType":"ElementaryTypeName","src":"35072:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35071:20:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13374,"nodeType":"FunctionDefinition","src":"35289:111:14","nodes":[],"documentation":{"id":13365,"nodeType":"StructuredDocumentation","src":"35098:186:14","text":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file.\n Returns the stringified version of the specific JSON file up to that moment."},"functionSelector":"9b3358b0","implemented":false,"kind":"function","modifiers":[],"name":"serializeJson","nameLocation":"35298:13:14","parameters":{"id":13370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13367,"mutability":"mutable","name":"objectKey","nameLocation":"35328:9:14","nodeType":"VariableDeclaration","scope":13374,"src":"35312:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13366,"name":"string","nodeType":"ElementaryTypeName","src":"35312:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13369,"mutability":"mutable","name":"value","nameLocation":"35355:5:14","nodeType":"VariableDeclaration","scope":13374,"src":"35339:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13368,"name":"string","nodeType":"ElementaryTypeName","src":"35339:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35311:50:14"},"returnParameters":{"id":13373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13372,"mutability":"mutable","name":"json","nameLocation":"35394:4:14","nodeType":"VariableDeclaration","scope":13374,"src":"35380:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13371,"name":"string","nodeType":"ElementaryTypeName","src":"35380:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35379:20:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13386,"nodeType":"FunctionDefinition","src":"35435:155:14","nodes":[],"documentation":{"id":13375,"nodeType":"StructuredDocumentation","src":"35406:24:14","text":"See `serializeJson`."},"functionSelector":"88da6d35","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"35444:15:14","parameters":{"id":13382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13377,"mutability":"mutable","name":"objectKey","nameLocation":"35476:9:14","nodeType":"VariableDeclaration","scope":13386,"src":"35460:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13376,"name":"string","nodeType":"ElementaryTypeName","src":"35460:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13379,"mutability":"mutable","name":"valueKey","nameLocation":"35503:8:14","nodeType":"VariableDeclaration","scope":13386,"src":"35487:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13378,"name":"string","nodeType":"ElementaryTypeName","src":"35487:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13381,"mutability":"mutable","name":"value","nameLocation":"35529:5:14","nodeType":"VariableDeclaration","scope":13386,"src":"35513:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13380,"name":"string","nodeType":"ElementaryTypeName","src":"35513:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35459:76:14"},"returnParameters":{"id":13385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13384,"mutability":"mutable","name":"json","nameLocation":"35584:4:14","nodeType":"VariableDeclaration","scope":13386,"src":"35570:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13383,"name":"string","nodeType":"ElementaryTypeName","src":"35570:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35569:20:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13399,"nodeType":"FunctionDefinition","src":"35625:158:14","nodes":[],"documentation":{"id":13387,"nodeType":"StructuredDocumentation","src":"35596:24:14","text":"See `serializeJson`."},"functionSelector":"561cd6f3","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"35634:15:14","parameters":{"id":13395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13389,"mutability":"mutable","name":"objectKey","nameLocation":"35666:9:14","nodeType":"VariableDeclaration","scope":13399,"src":"35650:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13388,"name":"string","nodeType":"ElementaryTypeName","src":"35650:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13391,"mutability":"mutable","name":"valueKey","nameLocation":"35693:8:14","nodeType":"VariableDeclaration","scope":13399,"src":"35677:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13390,"name":"string","nodeType":"ElementaryTypeName","src":"35677:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13394,"mutability":"mutable","name":"values","nameLocation":"35721:6:14","nodeType":"VariableDeclaration","scope":13399,"src":"35703:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13392,"name":"string","nodeType":"ElementaryTypeName","src":"35703:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13393,"nodeType":"ArrayTypeName","src":"35703:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"35649:79:14"},"returnParameters":{"id":13398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13397,"mutability":"mutable","name":"json","nameLocation":"35777:4:14","nodeType":"VariableDeclaration","scope":13399,"src":"35763:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13396,"name":"string","nodeType":"ElementaryTypeName","src":"35763:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35762:20:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13411,"nodeType":"FunctionDefinition","src":"35818:150:14","nodes":[],"documentation":{"id":13400,"nodeType":"StructuredDocumentation","src":"35789:24:14","text":"See `serializeJson`."},"functionSelector":"ae5a2ae8","implemented":false,"kind":"function","modifiers":[],"name":"serializeUintToHex","nameLocation":"35827:18:14","parameters":{"id":13407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13402,"mutability":"mutable","name":"objectKey","nameLocation":"35862:9:14","nodeType":"VariableDeclaration","scope":13411,"src":"35846:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13401,"name":"string","nodeType":"ElementaryTypeName","src":"35846:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13404,"mutability":"mutable","name":"valueKey","nameLocation":"35889:8:14","nodeType":"VariableDeclaration","scope":13411,"src":"35873:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13403,"name":"string","nodeType":"ElementaryTypeName","src":"35873:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13406,"mutability":"mutable","name":"value","nameLocation":"35907:5:14","nodeType":"VariableDeclaration","scope":13411,"src":"35899:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13405,"name":"uint256","nodeType":"ElementaryTypeName","src":"35899:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35845:68:14"},"returnParameters":{"id":13410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13409,"mutability":"mutable","name":"json","nameLocation":"35962:4:14","nodeType":"VariableDeclaration","scope":13411,"src":"35948:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13408,"name":"string","nodeType":"ElementaryTypeName","src":"35948:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35947:20:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13423,"nodeType":"FunctionDefinition","src":"36003:145:14","nodes":[],"documentation":{"id":13412,"nodeType":"StructuredDocumentation","src":"35974:24:14","text":"See `serializeJson`."},"functionSelector":"129e9002","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"36012:13:14","parameters":{"id":13419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13414,"mutability":"mutable","name":"objectKey","nameLocation":"36042:9:14","nodeType":"VariableDeclaration","scope":13423,"src":"36026:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13413,"name":"string","nodeType":"ElementaryTypeName","src":"36026:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13416,"mutability":"mutable","name":"valueKey","nameLocation":"36069:8:14","nodeType":"VariableDeclaration","scope":13423,"src":"36053:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13415,"name":"string","nodeType":"ElementaryTypeName","src":"36053:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13418,"mutability":"mutable","name":"value","nameLocation":"36087:5:14","nodeType":"VariableDeclaration","scope":13423,"src":"36079:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13417,"name":"uint256","nodeType":"ElementaryTypeName","src":"36079:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"36025:68:14"},"returnParameters":{"id":13422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13421,"mutability":"mutable","name":"json","nameLocation":"36142:4:14","nodeType":"VariableDeclaration","scope":13423,"src":"36128:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13420,"name":"string","nodeType":"ElementaryTypeName","src":"36128:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36127:20:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13436,"nodeType":"FunctionDefinition","src":"36183:157:14","nodes":[],"documentation":{"id":13424,"nodeType":"StructuredDocumentation","src":"36154:24:14","text":"See `serializeJson`."},"functionSelector":"fee9a469","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"36192:13:14","parameters":{"id":13432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13426,"mutability":"mutable","name":"objectKey","nameLocation":"36222:9:14","nodeType":"VariableDeclaration","scope":13436,"src":"36206:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13425,"name":"string","nodeType":"ElementaryTypeName","src":"36206:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13428,"mutability":"mutable","name":"valueKey","nameLocation":"36249:8:14","nodeType":"VariableDeclaration","scope":13436,"src":"36233:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13427,"name":"string","nodeType":"ElementaryTypeName","src":"36233:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13431,"mutability":"mutable","name":"values","nameLocation":"36278:6:14","nodeType":"VariableDeclaration","scope":13436,"src":"36259:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13429,"name":"uint256","nodeType":"ElementaryTypeName","src":"36259:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13430,"nodeType":"ArrayTypeName","src":"36259:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"36205:80:14"},"returnParameters":{"id":13435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13434,"mutability":"mutable","name":"json","nameLocation":"36334:4:14","nodeType":"VariableDeclaration","scope":13436,"src":"36320:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13433,"name":"string","nodeType":"ElementaryTypeName","src":"36320:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36319:20:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13444,"nodeType":"FunctionDefinition","src":"36440:72:14","nodes":[],"documentation":{"id":13437,"nodeType":"StructuredDocumentation","src":"36346:89:14","text":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"functionSelector":"e23cd19f","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"36449:9:14","parameters":{"id":13442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13439,"mutability":"mutable","name":"json","nameLocation":"36475:4:14","nodeType":"VariableDeclaration","scope":13444,"src":"36459:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13438,"name":"string","nodeType":"ElementaryTypeName","src":"36459:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13441,"mutability":"mutable","name":"path","nameLocation":"36497:4:14","nodeType":"VariableDeclaration","scope":13444,"src":"36481:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13440,"name":"string","nodeType":"ElementaryTypeName","src":"36481:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36458:44:14"},"returnParameters":{"id":13443,"nodeType":"ParameterList","parameters":[],"src":"36511:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13454,"nodeType":"FunctionDefinition","src":"36738:98:14","nodes":[],"documentation":{"id":13445,"nodeType":"StructuredDocumentation","src":"36518:215:14","text":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"functionSelector":"35d6ad46","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"36747:9:14","parameters":{"id":13452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13447,"mutability":"mutable","name":"json","nameLocation":"36773:4:14","nodeType":"VariableDeclaration","scope":13454,"src":"36757:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13446,"name":"string","nodeType":"ElementaryTypeName","src":"36757:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13449,"mutability":"mutable","name":"path","nameLocation":"36795:4:14","nodeType":"VariableDeclaration","scope":13454,"src":"36779:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13448,"name":"string","nodeType":"ElementaryTypeName","src":"36779:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13451,"mutability":"mutable","name":"valueKey","nameLocation":"36817:8:14","nodeType":"VariableDeclaration","scope":13454,"src":"36801:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13450,"name":"string","nodeType":"ElementaryTypeName","src":"36801:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36756:70:14"},"returnParameters":{"id":13453,"nodeType":"ParameterList","parameters":[],"src":"36835:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13458,"nodeType":"FunctionDefinition","src":"37375:30:14","nodes":[],"documentation":{"id":13455,"nodeType":"StructuredDocumentation","src":"36878:492:14","text":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"afc98040","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"37384:9:14","parameters":{"id":13456,"nodeType":"ParameterList","parameters":[],"src":"37393:2:14"},"returnParameters":{"id":13457,"nodeType":"ParameterList","parameters":[],"src":"37404:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13464,"nodeType":"FunctionDefinition","src":"37575:44:14","nodes":[],"documentation":{"id":13459,"nodeType":"StructuredDocumentation","src":"37411:159:14","text":"Has the next call (at this call depth only) create a transaction with the address provided\n as the sender that can later be signed and sent onchain."},"functionSelector":"e6962cdb","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"37584:9:14","parameters":{"id":13462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13461,"mutability":"mutable","name":"signer","nameLocation":"37602:6:14","nodeType":"VariableDeclaration","scope":13464,"src":"37594:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13460,"name":"address","nodeType":"ElementaryTypeName","src":"37594:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"37593:16:14"},"returnParameters":{"id":13463,"nodeType":"ParameterList","parameters":[],"src":"37618:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13470,"nodeType":"FunctionDefinition","src":"37793:48:14","nodes":[],"documentation":{"id":13465,"nodeType":"StructuredDocumentation","src":"37625:163:14","text":"Has the next call (at this call depth only) create a transaction with the private key\n provided as the sender that can later be signed and sent onchain."},"functionSelector":"f67a965b","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"37802:9:14","parameters":{"id":13468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13467,"mutability":"mutable","name":"privateKey","nameLocation":"37820:10:14","nodeType":"VariableDeclaration","scope":13470,"src":"37812:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13466,"name":"uint256","nodeType":"ElementaryTypeName","src":"37812:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"37811:20:14"},"returnParameters":{"id":13469,"nodeType":"ParameterList","parameters":[],"src":"37840:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13474,"nodeType":"FunctionDefinition","src":"38351:35:14","nodes":[],"documentation":{"id":13471,"nodeType":"StructuredDocumentation","src":"37847:499:14","text":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"7fb5297f","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"38360:14:14","parameters":{"id":13472,"nodeType":"ParameterList","parameters":[],"src":"38374:2:14"},"returnParameters":{"id":13473,"nodeType":"ParameterList","parameters":[],"src":"38385:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13480,"nodeType":"FunctionDefinition","src":"38548:49:14","nodes":[],"documentation":{"id":13475,"nodeType":"StructuredDocumentation","src":"38392:151:14","text":"Has all subsequent calls (at this call depth only) create transactions with the address\n provided that can later be signed and sent onchain."},"functionSelector":"7fec2a8d","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"38557:14:14","parameters":{"id":13478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13477,"mutability":"mutable","name":"signer","nameLocation":"38580:6:14","nodeType":"VariableDeclaration","scope":13480,"src":"38572:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13476,"name":"address","nodeType":"ElementaryTypeName","src":"38572:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"38571:16:14"},"returnParameters":{"id":13479,"nodeType":"ParameterList","parameters":[],"src":"38596:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13486,"nodeType":"FunctionDefinition","src":"38763:53:14","nodes":[],"documentation":{"id":13481,"nodeType":"StructuredDocumentation","src":"38603:155:14","text":"Has all subsequent calls (at this call depth only) create transactions with the private key\n provided that can later be signed and sent onchain."},"functionSelector":"ce817d47","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"38772:14:14","parameters":{"id":13484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13483,"mutability":"mutable","name":"privateKey","nameLocation":"38795:10:14","nodeType":"VariableDeclaration","scope":13486,"src":"38787:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13482,"name":"uint256","nodeType":"ElementaryTypeName","src":"38787:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"38786:20:14"},"returnParameters":{"id":13485,"nodeType":"ParameterList","parameters":[],"src":"38815:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13490,"nodeType":"FunctionDefinition","src":"38869:34:14","nodes":[],"documentation":{"id":13487,"nodeType":"StructuredDocumentation","src":"38822:42:14","text":"Stops collecting onchain transactions."},"functionSelector":"76eadd36","implemented":false,"kind":"function","modifiers":[],"name":"stopBroadcast","nameLocation":"38878:13:14","parameters":{"id":13488,"nodeType":"ParameterList","parameters":[],"src":"38891:2:14"},"returnParameters":{"id":13489,"nodeType":"ParameterList","parameters":[],"src":"38902:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13500,"nodeType":"FunctionDefinition","src":"39152:93:14","nodes":[],"documentation":{"id":13491,"nodeType":"StructuredDocumentation","src":"38942:205:14","text":"Returns the index of the first occurrence of a `key` in an `input` string.\n Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found.\n Returns 0 in case of an empty `key`."},"functionSelector":"8a0807b7","implemented":false,"kind":"function","modifiers":[],"name":"indexOf","nameLocation":"39161:7:14","parameters":{"id":13496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13493,"mutability":"mutable","name":"input","nameLocation":"39185:5:14","nodeType":"VariableDeclaration","scope":13500,"src":"39169:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13492,"name":"string","nodeType":"ElementaryTypeName","src":"39169:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13495,"mutability":"mutable","name":"key","nameLocation":"39208:3:14","nodeType":"VariableDeclaration","scope":13500,"src":"39192:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13494,"name":"string","nodeType":"ElementaryTypeName","src":"39192:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39168:44:14"},"returnParameters":{"id":13499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13500,"src":"39236:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13497,"name":"uint256","nodeType":"ElementaryTypeName","src":"39236:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"39235:9:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13508,"nodeType":"FunctionDefinition","src":"39304:100:14","nodes":[],"documentation":{"id":13501,"nodeType":"StructuredDocumentation","src":"39251:48:14","text":"Parses the given `string` into an `address`."},"functionSelector":"c6ce059d","implemented":false,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"39313:12:14","parameters":{"id":13504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13503,"mutability":"mutable","name":"stringifiedValue","nameLocation":"39342:16:14","nodeType":"VariableDeclaration","scope":13508,"src":"39326:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13502,"name":"string","nodeType":"ElementaryTypeName","src":"39326:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39325:34:14"},"returnParameters":{"id":13507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13506,"mutability":"mutable","name":"parsedValue","nameLocation":"39391:11:14","nodeType":"VariableDeclaration","scope":13508,"src":"39383:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13505,"name":"address","nodeType":"ElementaryTypeName","src":"39383:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"39382:21:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13516,"nodeType":"FunctionDefinition","src":"39459:94:14","nodes":[],"documentation":{"id":13509,"nodeType":"StructuredDocumentation","src":"39410:44:14","text":"Parses the given `string` into a `bool`."},"functionSelector":"974ef924","implemented":false,"kind":"function","modifiers":[],"name":"parseBool","nameLocation":"39468:9:14","parameters":{"id":13512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13511,"mutability":"mutable","name":"stringifiedValue","nameLocation":"39494:16:14","nodeType":"VariableDeclaration","scope":13516,"src":"39478:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13510,"name":"string","nodeType":"ElementaryTypeName","src":"39478:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39477:34:14"},"returnParameters":{"id":13515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13514,"mutability":"mutable","name":"parsedValue","nameLocation":"39540:11:14","nodeType":"VariableDeclaration","scope":13516,"src":"39535:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13513,"name":"bool","nodeType":"ElementaryTypeName","src":"39535:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"39534:18:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13524,"nodeType":"FunctionDefinition","src":"39607:103:14","nodes":[],"documentation":{"id":13517,"nodeType":"StructuredDocumentation","src":"39559:43:14","text":"Parses the given `string` into `bytes`."},"functionSelector":"8f5d232d","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes","nameLocation":"39616:10:14","parameters":{"id":13520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13519,"mutability":"mutable","name":"stringifiedValue","nameLocation":"39643:16:14","nodeType":"VariableDeclaration","scope":13524,"src":"39627:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13518,"name":"string","nodeType":"ElementaryTypeName","src":"39627:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39626:34:14"},"returnParameters":{"id":13523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13522,"mutability":"mutable","name":"parsedValue","nameLocation":"39697:11:14","nodeType":"VariableDeclaration","scope":13524,"src":"39684:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13521,"name":"bytes","nodeType":"ElementaryTypeName","src":"39684:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"39683:26:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13532,"nodeType":"FunctionDefinition","src":"39768:100:14","nodes":[],"documentation":{"id":13525,"nodeType":"StructuredDocumentation","src":"39716:47:14","text":"Parses the given `string` into a `bytes32`."},"functionSelector":"087e6e81","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes32","nameLocation":"39777:12:14","parameters":{"id":13528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13527,"mutability":"mutable","name":"stringifiedValue","nameLocation":"39806:16:14","nodeType":"VariableDeclaration","scope":13532,"src":"39790:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13526,"name":"string","nodeType":"ElementaryTypeName","src":"39790:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39789:34:14"},"returnParameters":{"id":13531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13530,"mutability":"mutable","name":"parsedValue","nameLocation":"39855:11:14","nodeType":"VariableDeclaration","scope":13532,"src":"39847:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13529,"name":"bytes32","nodeType":"ElementaryTypeName","src":"39847:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"39846:21:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13540,"nodeType":"FunctionDefinition","src":"39925:95:14","nodes":[],"documentation":{"id":13533,"nodeType":"StructuredDocumentation","src":"39874:46:14","text":"Parses the given `string` into a `int256`."},"functionSelector":"42346c5e","implemented":false,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"39934:8:14","parameters":{"id":13536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13535,"mutability":"mutable","name":"stringifiedValue","nameLocation":"39959:16:14","nodeType":"VariableDeclaration","scope":13540,"src":"39943:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13534,"name":"string","nodeType":"ElementaryTypeName","src":"39943:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39942:34:14"},"returnParameters":{"id":13539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13538,"mutability":"mutable","name":"parsedValue","nameLocation":"40007:11:14","nodeType":"VariableDeclaration","scope":13540,"src":"40000:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13537,"name":"int256","nodeType":"ElementaryTypeName","src":"40000:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"39999:20:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13548,"nodeType":"FunctionDefinition","src":"40078:97:14","nodes":[],"documentation":{"id":13541,"nodeType":"StructuredDocumentation","src":"40026:47:14","text":"Parses the given `string` into a `uint256`."},"functionSelector":"fa91454d","implemented":false,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"40087:9:14","parameters":{"id":13544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13543,"mutability":"mutable","name":"stringifiedValue","nameLocation":"40113:16:14","nodeType":"VariableDeclaration","scope":13548,"src":"40097:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13542,"name":"string","nodeType":"ElementaryTypeName","src":"40097:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40096:34:14"},"returnParameters":{"id":13547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13546,"mutability":"mutable","name":"parsedValue","nameLocation":"40162:11:14","nodeType":"VariableDeclaration","scope":13548,"src":"40154:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13545,"name":"uint256","nodeType":"ElementaryTypeName","src":"40154:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"40153:21:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13560,"nodeType":"FunctionDefinition","src":"40253:151:14","nodes":[],"documentation":{"id":13549,"nodeType":"StructuredDocumentation","src":"40181:67:14","text":"Replaces occurrences of `from` in the given `string` with `to`."},"functionSelector":"e00ad03e","implemented":false,"kind":"function","modifiers":[],"name":"replace","nameLocation":"40262:7:14","parameters":{"id":13556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13551,"mutability":"mutable","name":"input","nameLocation":"40286:5:14","nodeType":"VariableDeclaration","scope":13560,"src":"40270:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13550,"name":"string","nodeType":"ElementaryTypeName","src":"40270:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13553,"mutability":"mutable","name":"from","nameLocation":"40309:4:14","nodeType":"VariableDeclaration","scope":13560,"src":"40293:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13552,"name":"string","nodeType":"ElementaryTypeName","src":"40293:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13555,"mutability":"mutable","name":"to","nameLocation":"40331:2:14","nodeType":"VariableDeclaration","scope":13560,"src":"40315:18:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13554,"name":"string","nodeType":"ElementaryTypeName","src":"40315:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40269:65:14"},"returnParameters":{"id":13559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13558,"mutability":"mutable","name":"output","nameLocation":"40396:6:14","nodeType":"VariableDeclaration","scope":13560,"src":"40382:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13557,"name":"string","nodeType":"ElementaryTypeName","src":"40382:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40381:22:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13571,"nodeType":"FunctionDefinition","src":"40497:113:14","nodes":[],"documentation":{"id":13561,"nodeType":"StructuredDocumentation","src":"40410:82:14","text":"Splits the given `string` into an array of strings divided by the `delimiter`."},"functionSelector":"8bb75533","implemented":false,"kind":"function","modifiers":[],"name":"split","nameLocation":"40506:5:14","parameters":{"id":13566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13563,"mutability":"mutable","name":"input","nameLocation":"40528:5:14","nodeType":"VariableDeclaration","scope":13571,"src":"40512:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13562,"name":"string","nodeType":"ElementaryTypeName","src":"40512:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13565,"mutability":"mutable","name":"delimiter","nameLocation":"40551:9:14","nodeType":"VariableDeclaration","scope":13571,"src":"40535:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13564,"name":"string","nodeType":"ElementaryTypeName","src":"40535:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40511:50:14"},"returnParameters":{"id":13570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13569,"mutability":"mutable","name":"outputs","nameLocation":"40601:7:14","nodeType":"VariableDeclaration","scope":13571,"src":"40585:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13567,"name":"string","nodeType":"ElementaryTypeName","src":"40585:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13568,"nodeType":"ArrayTypeName","src":"40585:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"40584:25:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13579,"nodeType":"FunctionDefinition","src":"40672:89:14","nodes":[],"documentation":{"id":13572,"nodeType":"StructuredDocumentation","src":"40616:51:14","text":"Converts the given `string` value to Lowercase."},"functionSelector":"50bb0884","implemented":false,"kind":"function","modifiers":[],"name":"toLowercase","nameLocation":"40681:11:14","parameters":{"id":13575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13574,"mutability":"mutable","name":"input","nameLocation":"40709:5:14","nodeType":"VariableDeclaration","scope":13579,"src":"40693:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13573,"name":"string","nodeType":"ElementaryTypeName","src":"40693:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40692:23:14"},"returnParameters":{"id":13578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13577,"mutability":"mutable","name":"output","nameLocation":"40753:6:14","nodeType":"VariableDeclaration","scope":13579,"src":"40739:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13576,"name":"string","nodeType":"ElementaryTypeName","src":"40739:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40738:22:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13587,"nodeType":"FunctionDefinition","src":"40815:88:14","nodes":[],"documentation":{"id":13580,"nodeType":"StructuredDocumentation","src":"40767:43:14","text":"Converts the given value to a `string`."},"functionSelector":"56ca623e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"40824:8:14","parameters":{"id":13583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13582,"mutability":"mutable","name":"value","nameLocation":"40841:5:14","nodeType":"VariableDeclaration","scope":13587,"src":"40833:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13581,"name":"address","nodeType":"ElementaryTypeName","src":"40833:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"40832:15:14"},"returnParameters":{"id":13586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13585,"mutability":"mutable","name":"stringifiedValue","nameLocation":"40885:16:14","nodeType":"VariableDeclaration","scope":13587,"src":"40871:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13584,"name":"string","nodeType":"ElementaryTypeName","src":"40871:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40870:32:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13595,"nodeType":"FunctionDefinition","src":"40957:95:14","nodes":[],"documentation":{"id":13588,"nodeType":"StructuredDocumentation","src":"40909:43:14","text":"Converts the given value to a `string`."},"functionSelector":"71aad10d","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"40966:8:14","parameters":{"id":13591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13590,"mutability":"mutable","name":"value","nameLocation":"40990:5:14","nodeType":"VariableDeclaration","scope":13595,"src":"40975:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13589,"name":"bytes","nodeType":"ElementaryTypeName","src":"40975:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"40974:22:14"},"returnParameters":{"id":13594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13593,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41034:16:14","nodeType":"VariableDeclaration","scope":13595,"src":"41020:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13592,"name":"string","nodeType":"ElementaryTypeName","src":"41020:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41019:32:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13603,"nodeType":"FunctionDefinition","src":"41106:88:14","nodes":[],"documentation":{"id":13596,"nodeType":"StructuredDocumentation","src":"41058:43:14","text":"Converts the given value to a `string`."},"functionSelector":"b11a19e8","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"41115:8:14","parameters":{"id":13599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13598,"mutability":"mutable","name":"value","nameLocation":"41132:5:14","nodeType":"VariableDeclaration","scope":13603,"src":"41124:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"41124:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"41123:15:14"},"returnParameters":{"id":13602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13601,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41176:16:14","nodeType":"VariableDeclaration","scope":13603,"src":"41162:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13600,"name":"string","nodeType":"ElementaryTypeName","src":"41162:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41161:32:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13611,"nodeType":"FunctionDefinition","src":"41248:85:14","nodes":[],"documentation":{"id":13604,"nodeType":"StructuredDocumentation","src":"41200:43:14","text":"Converts the given value to a `string`."},"functionSelector":"71dce7da","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"41257:8:14","parameters":{"id":13607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13606,"mutability":"mutable","name":"value","nameLocation":"41271:5:14","nodeType":"VariableDeclaration","scope":13611,"src":"41266:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13605,"name":"bool","nodeType":"ElementaryTypeName","src":"41266:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"41265:12:14"},"returnParameters":{"id":13610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13609,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41315:16:14","nodeType":"VariableDeclaration","scope":13611,"src":"41301:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13608,"name":"string","nodeType":"ElementaryTypeName","src":"41301:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41300:32:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13619,"nodeType":"FunctionDefinition","src":"41387:88:14","nodes":[],"documentation":{"id":13612,"nodeType":"StructuredDocumentation","src":"41339:43:14","text":"Converts the given value to a `string`."},"functionSelector":"6900a3ae","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"41396:8:14","parameters":{"id":13615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13614,"mutability":"mutable","name":"value","nameLocation":"41413:5:14","nodeType":"VariableDeclaration","scope":13619,"src":"41405:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13613,"name":"uint256","nodeType":"ElementaryTypeName","src":"41405:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"41404:15:14"},"returnParameters":{"id":13618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13617,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41457:16:14","nodeType":"VariableDeclaration","scope":13619,"src":"41443:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13616,"name":"string","nodeType":"ElementaryTypeName","src":"41443:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41442:32:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13627,"nodeType":"FunctionDefinition","src":"41529:87:14","nodes":[],"documentation":{"id":13620,"nodeType":"StructuredDocumentation","src":"41481:43:14","text":"Converts the given value to a `string`."},"functionSelector":"a322c40e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"41538:8:14","parameters":{"id":13623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13622,"mutability":"mutable","name":"value","nameLocation":"41554:5:14","nodeType":"VariableDeclaration","scope":13627,"src":"41547:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13621,"name":"int256","nodeType":"ElementaryTypeName","src":"41547:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"41546:14:14"},"returnParameters":{"id":13626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13625,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41598:16:14","nodeType":"VariableDeclaration","scope":13627,"src":"41584:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13624,"name":"string","nodeType":"ElementaryTypeName","src":"41584:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41583:32:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13635,"nodeType":"FunctionDefinition","src":"41678:89:14","nodes":[],"documentation":{"id":13628,"nodeType":"StructuredDocumentation","src":"41622:51:14","text":"Converts the given `string` value to Uppercase."},"functionSelector":"074ae3d7","implemented":false,"kind":"function","modifiers":[],"name":"toUppercase","nameLocation":"41687:11:14","parameters":{"id":13631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13630,"mutability":"mutable","name":"input","nameLocation":"41715:5:14","nodeType":"VariableDeclaration","scope":13635,"src":"41699:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13629,"name":"string","nodeType":"ElementaryTypeName","src":"41699:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41698:23:14"},"returnParameters":{"id":13634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13633,"mutability":"mutable","name":"output","nameLocation":"41759:6:14","nodeType":"VariableDeclaration","scope":13635,"src":"41745:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13632,"name":"string","nodeType":"ElementaryTypeName","src":"41745:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41744:22:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13643,"nodeType":"FunctionDefinition","src":"41850:82:14","nodes":[],"documentation":{"id":13636,"nodeType":"StructuredDocumentation","src":"41773:72:14","text":"Trims leading and trailing whitespace from the given `string` value."},"functionSelector":"b2dad155","implemented":false,"kind":"function","modifiers":[],"name":"trim","nameLocation":"41859:4:14","parameters":{"id":13639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13638,"mutability":"mutable","name":"input","nameLocation":"41880:5:14","nodeType":"VariableDeclaration","scope":13643,"src":"41864:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13637,"name":"string","nodeType":"ElementaryTypeName","src":"41864:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41863:23:14"},"returnParameters":{"id":13642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13641,"mutability":"mutable","name":"output","nameLocation":"41924:6:14","nodeType":"VariableDeclaration","scope":13643,"src":"41910:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13640,"name":"string","nodeType":"ElementaryTypeName","src":"41910:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41909:22:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13655,"nodeType":"FunctionDefinition","src":"42127:113:14","nodes":[],"documentation":{"id":13644,"nodeType":"StructuredDocumentation","src":"41972:150:14","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"045c55ce","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"42136:24:14","parameters":{"id":13653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13646,"mutability":"mutable","name":"left","nameLocation":"42169:4:14","nodeType":"VariableDeclaration","scope":13655,"src":"42161:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13645,"name":"uint256","nodeType":"ElementaryTypeName","src":"42161:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13648,"mutability":"mutable","name":"right","nameLocation":"42183:5:14","nodeType":"VariableDeclaration","scope":13655,"src":"42175:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13647,"name":"uint256","nodeType":"ElementaryTypeName","src":"42175:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13650,"mutability":"mutable","name":"maxDelta","nameLocation":"42198:8:14","nodeType":"VariableDeclaration","scope":13655,"src":"42190:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13649,"name":"uint256","nodeType":"ElementaryTypeName","src":"42190:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13652,"mutability":"mutable","name":"decimals","nameLocation":"42216:8:14","nodeType":"VariableDeclaration","scope":13655,"src":"42208:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13651,"name":"uint256","nodeType":"ElementaryTypeName","src":"42208:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42160:65:14"},"returnParameters":{"id":13654,"nodeType":"ParameterList","parameters":[],"src":"42239:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13669,"nodeType":"FunctionDefinition","src":"42455:182:14","nodes":[],"documentation":{"id":13656,"nodeType":"StructuredDocumentation","src":"42246:204:14","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"60429eb2","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"42464:24:14","parameters":{"id":13667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13658,"mutability":"mutable","name":"left","nameLocation":"42506:4:14","nodeType":"VariableDeclaration","scope":13669,"src":"42498:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13657,"name":"uint256","nodeType":"ElementaryTypeName","src":"42498:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13660,"mutability":"mutable","name":"right","nameLocation":"42528:5:14","nodeType":"VariableDeclaration","scope":13669,"src":"42520:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13659,"name":"uint256","nodeType":"ElementaryTypeName","src":"42520:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13662,"mutability":"mutable","name":"maxDelta","nameLocation":"42551:8:14","nodeType":"VariableDeclaration","scope":13669,"src":"42543:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13661,"name":"uint256","nodeType":"ElementaryTypeName","src":"42543:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13664,"mutability":"mutable","name":"decimals","nameLocation":"42577:8:14","nodeType":"VariableDeclaration","scope":13669,"src":"42569:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13663,"name":"uint256","nodeType":"ElementaryTypeName","src":"42569:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13666,"mutability":"mutable","name":"error","nameLocation":"42611:5:14","nodeType":"VariableDeclaration","scope":13669,"src":"42595:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13665,"name":"string","nodeType":"ElementaryTypeName","src":"42595:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42488:134:14"},"returnParameters":{"id":13668,"nodeType":"ParameterList","parameters":[],"src":"42636:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13681,"nodeType":"FunctionDefinition","src":"42797:111:14","nodes":[],"documentation":{"id":13670,"nodeType":"StructuredDocumentation","src":"42643:149:14","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"3d5bc8bc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"42806:24:14","parameters":{"id":13679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13672,"mutability":"mutable","name":"left","nameLocation":"42838:4:14","nodeType":"VariableDeclaration","scope":13681,"src":"42831:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13671,"name":"int256","nodeType":"ElementaryTypeName","src":"42831:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13674,"mutability":"mutable","name":"right","nameLocation":"42851:5:14","nodeType":"VariableDeclaration","scope":13681,"src":"42844:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13673,"name":"int256","nodeType":"ElementaryTypeName","src":"42844:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13676,"mutability":"mutable","name":"maxDelta","nameLocation":"42866:8:14","nodeType":"VariableDeclaration","scope":13681,"src":"42858:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13675,"name":"uint256","nodeType":"ElementaryTypeName","src":"42858:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13678,"mutability":"mutable","name":"decimals","nameLocation":"42884:8:14","nodeType":"VariableDeclaration","scope":13681,"src":"42876:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13677,"name":"uint256","nodeType":"ElementaryTypeName","src":"42876:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42830:63:14"},"returnParameters":{"id":13680,"nodeType":"ParameterList","parameters":[],"src":"42907:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13695,"nodeType":"FunctionDefinition","src":"43122:180:14","nodes":[],"documentation":{"id":13682,"nodeType":"StructuredDocumentation","src":"42914:203:14","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"6a5066d4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"43131:24:14","parameters":{"id":13693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13684,"mutability":"mutable","name":"left","nameLocation":"43172:4:14","nodeType":"VariableDeclaration","scope":13695,"src":"43165:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13683,"name":"int256","nodeType":"ElementaryTypeName","src":"43165:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13686,"mutability":"mutable","name":"right","nameLocation":"43193:5:14","nodeType":"VariableDeclaration","scope":13695,"src":"43186:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13685,"name":"int256","nodeType":"ElementaryTypeName","src":"43186:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13688,"mutability":"mutable","name":"maxDelta","nameLocation":"43216:8:14","nodeType":"VariableDeclaration","scope":13695,"src":"43208:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13687,"name":"uint256","nodeType":"ElementaryTypeName","src":"43208:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13690,"mutability":"mutable","name":"decimals","nameLocation":"43242:8:14","nodeType":"VariableDeclaration","scope":13695,"src":"43234:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13689,"name":"uint256","nodeType":"ElementaryTypeName","src":"43234:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13692,"mutability":"mutable","name":"error","nameLocation":"43276:5:14","nodeType":"VariableDeclaration","scope":13695,"src":"43260:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13691,"name":"string","nodeType":"ElementaryTypeName","src":"43260:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43155:132:14"},"returnParameters":{"id":13694,"nodeType":"ParameterList","parameters":[],"src":"43301:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13705,"nodeType":"FunctionDefinition","src":"43406:88:14","nodes":[],"documentation":{"id":13696,"nodeType":"StructuredDocumentation","src":"43308:93:14","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"16d207c6","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"43415:17:14","parameters":{"id":13703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13698,"mutability":"mutable","name":"left","nameLocation":"43441:4:14","nodeType":"VariableDeclaration","scope":13705,"src":"43433:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13697,"name":"uint256","nodeType":"ElementaryTypeName","src":"43433:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13700,"mutability":"mutable","name":"right","nameLocation":"43455:5:14","nodeType":"VariableDeclaration","scope":13705,"src":"43447:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13699,"name":"uint256","nodeType":"ElementaryTypeName","src":"43447:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13702,"mutability":"mutable","name":"maxDelta","nameLocation":"43470:8:14","nodeType":"VariableDeclaration","scope":13705,"src":"43462:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13701,"name":"uint256","nodeType":"ElementaryTypeName","src":"43462:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"43432:47:14"},"returnParameters":{"id":13704,"nodeType":"ParameterList","parameters":[],"src":"43493:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13717,"nodeType":"FunctionDefinition","src":"43660:111:14","nodes":[],"documentation":{"id":13706,"nodeType":"StructuredDocumentation","src":"43500:155:14","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"f710b062","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"43669:17:14","parameters":{"id":13715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13708,"mutability":"mutable","name":"left","nameLocation":"43695:4:14","nodeType":"VariableDeclaration","scope":13717,"src":"43687:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13707,"name":"uint256","nodeType":"ElementaryTypeName","src":"43687:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13710,"mutability":"mutable","name":"right","nameLocation":"43709:5:14","nodeType":"VariableDeclaration","scope":13717,"src":"43701:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13709,"name":"uint256","nodeType":"ElementaryTypeName","src":"43701:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13712,"mutability":"mutable","name":"maxDelta","nameLocation":"43724:8:14","nodeType":"VariableDeclaration","scope":13717,"src":"43716:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13711,"name":"uint256","nodeType":"ElementaryTypeName","src":"43716:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13714,"mutability":"mutable","name":"error","nameLocation":"43750:5:14","nodeType":"VariableDeclaration","scope":13717,"src":"43734:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13713,"name":"string","nodeType":"ElementaryTypeName","src":"43734:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43686:70:14"},"returnParameters":{"id":13716,"nodeType":"ParameterList","parameters":[],"src":"43770:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13727,"nodeType":"FunctionDefinition","src":"43874:86:14","nodes":[],"documentation":{"id":13718,"nodeType":"StructuredDocumentation","src":"43777:92:14","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"240f839d","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"43883:17:14","parameters":{"id":13725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13720,"mutability":"mutable","name":"left","nameLocation":"43908:4:14","nodeType":"VariableDeclaration","scope":13727,"src":"43901:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13719,"name":"int256","nodeType":"ElementaryTypeName","src":"43901:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13722,"mutability":"mutable","name":"right","nameLocation":"43921:5:14","nodeType":"VariableDeclaration","scope":13727,"src":"43914:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13721,"name":"int256","nodeType":"ElementaryTypeName","src":"43914:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13724,"mutability":"mutable","name":"maxDelta","nameLocation":"43936:8:14","nodeType":"VariableDeclaration","scope":13727,"src":"43928:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13723,"name":"uint256","nodeType":"ElementaryTypeName","src":"43928:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"43900:45:14"},"returnParameters":{"id":13726,"nodeType":"ParameterList","parameters":[],"src":"43959:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13739,"nodeType":"FunctionDefinition","src":"44125:109:14","nodes":[],"documentation":{"id":13728,"nodeType":"StructuredDocumentation","src":"43966:154:14","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"8289e621","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"44134:17:14","parameters":{"id":13737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13730,"mutability":"mutable","name":"left","nameLocation":"44159:4:14","nodeType":"VariableDeclaration","scope":13739,"src":"44152:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13729,"name":"int256","nodeType":"ElementaryTypeName","src":"44152:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13732,"mutability":"mutable","name":"right","nameLocation":"44172:5:14","nodeType":"VariableDeclaration","scope":13739,"src":"44165:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13731,"name":"int256","nodeType":"ElementaryTypeName","src":"44165:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13734,"mutability":"mutable","name":"maxDelta","nameLocation":"44187:8:14","nodeType":"VariableDeclaration","scope":13739,"src":"44179:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13733,"name":"uint256","nodeType":"ElementaryTypeName","src":"44179:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13736,"mutability":"mutable","name":"error","nameLocation":"44213:5:14","nodeType":"VariableDeclaration","scope":13739,"src":"44197:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13735,"name":"string","nodeType":"ElementaryTypeName","src":"44197:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44151:68:14"},"returnParameters":{"id":13738,"nodeType":"ParameterList","parameters":[],"src":"44233:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13751,"nodeType":"FunctionDefinition","src":"44505:136:14","nodes":[],"documentation":{"id":13740,"nodeType":"StructuredDocumentation","src":"44240:260:14","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"21ed2977","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"44514:24:14","parameters":{"id":13749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13742,"mutability":"mutable","name":"left","nameLocation":"44547:4:14","nodeType":"VariableDeclaration","scope":13751,"src":"44539:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13741,"name":"uint256","nodeType":"ElementaryTypeName","src":"44539:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13744,"mutability":"mutable","name":"right","nameLocation":"44561:5:14","nodeType":"VariableDeclaration","scope":13751,"src":"44553:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13743,"name":"uint256","nodeType":"ElementaryTypeName","src":"44553:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13746,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"44576:15:14","nodeType":"VariableDeclaration","scope":13751,"src":"44568:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13745,"name":"uint256","nodeType":"ElementaryTypeName","src":"44568:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13748,"mutability":"mutable","name":"decimals","nameLocation":"44601:8:14","nodeType":"VariableDeclaration","scope":13751,"src":"44593:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13747,"name":"uint256","nodeType":"ElementaryTypeName","src":"44593:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"44538:72:14"},"returnParameters":{"id":13750,"nodeType":"ParameterList","parameters":[],"src":"44640:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13765,"nodeType":"FunctionDefinition","src":"44966:189:14","nodes":[],"documentation":{"id":13752,"nodeType":"StructuredDocumentation","src":"44647:314:14","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"82d6c8fd","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"44975:24:14","parameters":{"id":13763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13754,"mutability":"mutable","name":"left","nameLocation":"45017:4:14","nodeType":"VariableDeclaration","scope":13765,"src":"45009:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13753,"name":"uint256","nodeType":"ElementaryTypeName","src":"45009:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13756,"mutability":"mutable","name":"right","nameLocation":"45039:5:14","nodeType":"VariableDeclaration","scope":13765,"src":"45031:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13755,"name":"uint256","nodeType":"ElementaryTypeName","src":"45031:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13758,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"45062:15:14","nodeType":"VariableDeclaration","scope":13765,"src":"45054:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13757,"name":"uint256","nodeType":"ElementaryTypeName","src":"45054:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13760,"mutability":"mutable","name":"decimals","nameLocation":"45095:8:14","nodeType":"VariableDeclaration","scope":13765,"src":"45087:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13759,"name":"uint256","nodeType":"ElementaryTypeName","src":"45087:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13762,"mutability":"mutable","name":"error","nameLocation":"45129:5:14","nodeType":"VariableDeclaration","scope":13765,"src":"45113:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13761,"name":"string","nodeType":"ElementaryTypeName","src":"45113:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44999:141:14"},"returnParameters":{"id":13764,"nodeType":"ParameterList","parameters":[],"src":"45154:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13777,"nodeType":"FunctionDefinition","src":"45425:134:14","nodes":[],"documentation":{"id":13766,"nodeType":"StructuredDocumentation","src":"45161:259:14","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"abbf21cc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"45434:24:14","parameters":{"id":13775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13768,"mutability":"mutable","name":"left","nameLocation":"45466:4:14","nodeType":"VariableDeclaration","scope":13777,"src":"45459:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13767,"name":"int256","nodeType":"ElementaryTypeName","src":"45459:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13770,"mutability":"mutable","name":"right","nameLocation":"45479:5:14","nodeType":"VariableDeclaration","scope":13777,"src":"45472:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13769,"name":"int256","nodeType":"ElementaryTypeName","src":"45472:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13772,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"45494:15:14","nodeType":"VariableDeclaration","scope":13777,"src":"45486:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13771,"name":"uint256","nodeType":"ElementaryTypeName","src":"45486:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13774,"mutability":"mutable","name":"decimals","nameLocation":"45519:8:14","nodeType":"VariableDeclaration","scope":13777,"src":"45511:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13773,"name":"uint256","nodeType":"ElementaryTypeName","src":"45511:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45458:70:14"},"returnParameters":{"id":13776,"nodeType":"ParameterList","parameters":[],"src":"45558:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13791,"nodeType":"FunctionDefinition","src":"45883:187:14","nodes":[],"documentation":{"id":13778,"nodeType":"StructuredDocumentation","src":"45565:313:14","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"fccc11c4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"45892:24:14","parameters":{"id":13789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13780,"mutability":"mutable","name":"left","nameLocation":"45933:4:14","nodeType":"VariableDeclaration","scope":13791,"src":"45926:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13779,"name":"int256","nodeType":"ElementaryTypeName","src":"45926:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13782,"mutability":"mutable","name":"right","nameLocation":"45954:5:14","nodeType":"VariableDeclaration","scope":13791,"src":"45947:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13781,"name":"int256","nodeType":"ElementaryTypeName","src":"45947:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13784,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"45977:15:14","nodeType":"VariableDeclaration","scope":13791,"src":"45969:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13783,"name":"uint256","nodeType":"ElementaryTypeName","src":"45969:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13786,"mutability":"mutable","name":"decimals","nameLocation":"46010:8:14","nodeType":"VariableDeclaration","scope":13791,"src":"46002:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13785,"name":"uint256","nodeType":"ElementaryTypeName","src":"46002:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13788,"mutability":"mutable","name":"error","nameLocation":"46044:5:14","nodeType":"VariableDeclaration","scope":13791,"src":"46028:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13787,"name":"string","nodeType":"ElementaryTypeName","src":"46028:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45916:139:14"},"returnParameters":{"id":13790,"nodeType":"ParameterList","parameters":[],"src":"46069:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13801,"nodeType":"FunctionDefinition","src":"46284:95:14","nodes":[],"documentation":{"id":13792,"nodeType":"StructuredDocumentation","src":"46076:203:14","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"8cf25ef4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"46293:17:14","parameters":{"id":13799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13794,"mutability":"mutable","name":"left","nameLocation":"46319:4:14","nodeType":"VariableDeclaration","scope":13801,"src":"46311:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13793,"name":"uint256","nodeType":"ElementaryTypeName","src":"46311:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13796,"mutability":"mutable","name":"right","nameLocation":"46333:5:14","nodeType":"VariableDeclaration","scope":13801,"src":"46325:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13795,"name":"uint256","nodeType":"ElementaryTypeName","src":"46325:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13798,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"46348:15:14","nodeType":"VariableDeclaration","scope":13801,"src":"46340:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13797,"name":"uint256","nodeType":"ElementaryTypeName","src":"46340:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"46310:54:14"},"returnParameters":{"id":13800,"nodeType":"ParameterList","parameters":[],"src":"46378:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13813,"nodeType":"FunctionDefinition","src":"46655:134:14","nodes":[],"documentation":{"id":13802,"nodeType":"StructuredDocumentation","src":"46385:265:14","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"1ecb7d33","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"46664:17:14","parameters":{"id":13811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13804,"mutability":"mutable","name":"left","nameLocation":"46690:4:14","nodeType":"VariableDeclaration","scope":13813,"src":"46682:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13803,"name":"uint256","nodeType":"ElementaryTypeName","src":"46682:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13806,"mutability":"mutable","name":"right","nameLocation":"46704:5:14","nodeType":"VariableDeclaration","scope":13813,"src":"46696:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13805,"name":"uint256","nodeType":"ElementaryTypeName","src":"46696:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13808,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"46719:15:14","nodeType":"VariableDeclaration","scope":13813,"src":"46711:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13807,"name":"uint256","nodeType":"ElementaryTypeName","src":"46711:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13810,"mutability":"mutable","name":"error","nameLocation":"46752:5:14","nodeType":"VariableDeclaration","scope":13813,"src":"46736:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13809,"name":"string","nodeType":"ElementaryTypeName","src":"46736:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46681:77:14"},"returnParameters":{"id":13812,"nodeType":"ParameterList","parameters":[],"src":"46788:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13823,"nodeType":"FunctionDefinition","src":"47002:93:14","nodes":[],"documentation":{"id":13814,"nodeType":"StructuredDocumentation","src":"46795:202:14","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"fea2d14f","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"47011:17:14","parameters":{"id":13821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13816,"mutability":"mutable","name":"left","nameLocation":"47036:4:14","nodeType":"VariableDeclaration","scope":13823,"src":"47029:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13815,"name":"int256","nodeType":"ElementaryTypeName","src":"47029:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13818,"mutability":"mutable","name":"right","nameLocation":"47049:5:14","nodeType":"VariableDeclaration","scope":13823,"src":"47042:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13817,"name":"int256","nodeType":"ElementaryTypeName","src":"47042:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13820,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"47064:15:14","nodeType":"VariableDeclaration","scope":13823,"src":"47056:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13819,"name":"uint256","nodeType":"ElementaryTypeName","src":"47056:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47028:52:14"},"returnParameters":{"id":13822,"nodeType":"ParameterList","parameters":[],"src":"47094:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13835,"nodeType":"FunctionDefinition","src":"47370:132:14","nodes":[],"documentation":{"id":13824,"nodeType":"StructuredDocumentation","src":"47101:264:14","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"ef277d72","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"47379:17:14","parameters":{"id":13833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13826,"mutability":"mutable","name":"left","nameLocation":"47404:4:14","nodeType":"VariableDeclaration","scope":13835,"src":"47397:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13825,"name":"int256","nodeType":"ElementaryTypeName","src":"47397:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13828,"mutability":"mutable","name":"right","nameLocation":"47417:5:14","nodeType":"VariableDeclaration","scope":13835,"src":"47410:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13827,"name":"int256","nodeType":"ElementaryTypeName","src":"47410:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13830,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"47432:15:14","nodeType":"VariableDeclaration","scope":13835,"src":"47424:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13829,"name":"uint256","nodeType":"ElementaryTypeName","src":"47424:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13832,"mutability":"mutable","name":"error","nameLocation":"47465:5:14","nodeType":"VariableDeclaration","scope":13835,"src":"47449:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13831,"name":"string","nodeType":"ElementaryTypeName","src":"47449:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47396:75:14"},"returnParameters":{"id":13834,"nodeType":"ParameterList","parameters":[],"src":"47501:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13845,"nodeType":"FunctionDefinition","src":"47611:86:14","nodes":[],"documentation":{"id":13836,"nodeType":"StructuredDocumentation","src":"47508:98:14","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"functionSelector":"27af7d9c","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"47620:15:14","parameters":{"id":13843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13838,"mutability":"mutable","name":"left","nameLocation":"47644:4:14","nodeType":"VariableDeclaration","scope":13845,"src":"47636:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13837,"name":"uint256","nodeType":"ElementaryTypeName","src":"47636:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13840,"mutability":"mutable","name":"right","nameLocation":"47658:5:14","nodeType":"VariableDeclaration","scope":13845,"src":"47650:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13839,"name":"uint256","nodeType":"ElementaryTypeName","src":"47650:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13842,"mutability":"mutable","name":"decimals","nameLocation":"47673:8:14","nodeType":"VariableDeclaration","scope":13845,"src":"47665:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13841,"name":"uint256","nodeType":"ElementaryTypeName","src":"47665:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47635:47:14"},"returnParameters":{"id":13844,"nodeType":"ParameterList","parameters":[],"src":"47696:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13857,"nodeType":"FunctionDefinition","src":"47868:109:14","nodes":[],"documentation":{"id":13846,"nodeType":"StructuredDocumentation","src":"47703:160:14","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"d0cbbdef","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"47877:15:14","parameters":{"id":13855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13848,"mutability":"mutable","name":"left","nameLocation":"47901:4:14","nodeType":"VariableDeclaration","scope":13857,"src":"47893:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13847,"name":"uint256","nodeType":"ElementaryTypeName","src":"47893:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13850,"mutability":"mutable","name":"right","nameLocation":"47915:5:14","nodeType":"VariableDeclaration","scope":13857,"src":"47907:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13849,"name":"uint256","nodeType":"ElementaryTypeName","src":"47907:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13852,"mutability":"mutable","name":"decimals","nameLocation":"47930:8:14","nodeType":"VariableDeclaration","scope":13857,"src":"47922:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13851,"name":"uint256","nodeType":"ElementaryTypeName","src":"47922:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13854,"mutability":"mutable","name":"error","nameLocation":"47956:5:14","nodeType":"VariableDeclaration","scope":13857,"src":"47940:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13853,"name":"string","nodeType":"ElementaryTypeName","src":"47940:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47892:70:14"},"returnParameters":{"id":13856,"nodeType":"ParameterList","parameters":[],"src":"47976:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13867,"nodeType":"FunctionDefinition","src":"48085:84:14","nodes":[],"documentation":{"id":13858,"nodeType":"StructuredDocumentation","src":"47983:97:14","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"functionSelector":"48016c04","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"48094:15:14","parameters":{"id":13865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13860,"mutability":"mutable","name":"left","nameLocation":"48117:4:14","nodeType":"VariableDeclaration","scope":13867,"src":"48110:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13859,"name":"int256","nodeType":"ElementaryTypeName","src":"48110:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13862,"mutability":"mutable","name":"right","nameLocation":"48130:5:14","nodeType":"VariableDeclaration","scope":13867,"src":"48123:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13861,"name":"int256","nodeType":"ElementaryTypeName","src":"48123:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13864,"mutability":"mutable","name":"decimals","nameLocation":"48145:8:14","nodeType":"VariableDeclaration","scope":13867,"src":"48137:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13863,"name":"uint256","nodeType":"ElementaryTypeName","src":"48137:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"48109:45:14"},"returnParameters":{"id":13866,"nodeType":"ParameterList","parameters":[],"src":"48168:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13879,"nodeType":"FunctionDefinition","src":"48339:107:14","nodes":[],"documentation":{"id":13868,"nodeType":"StructuredDocumentation","src":"48175:159:14","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"7e77b0c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"48348:15:14","parameters":{"id":13877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13870,"mutability":"mutable","name":"left","nameLocation":"48371:4:14","nodeType":"VariableDeclaration","scope":13879,"src":"48364:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13869,"name":"int256","nodeType":"ElementaryTypeName","src":"48364:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13872,"mutability":"mutable","name":"right","nameLocation":"48384:5:14","nodeType":"VariableDeclaration","scope":13879,"src":"48377:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13871,"name":"int256","nodeType":"ElementaryTypeName","src":"48377:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13874,"mutability":"mutable","name":"decimals","nameLocation":"48399:8:14","nodeType":"VariableDeclaration","scope":13879,"src":"48391:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13873,"name":"uint256","nodeType":"ElementaryTypeName","src":"48391:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13876,"mutability":"mutable","name":"error","nameLocation":"48425:5:14","nodeType":"VariableDeclaration","scope":13879,"src":"48409:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13875,"name":"string","nodeType":"ElementaryTypeName","src":"48409:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48363:68:14"},"returnParameters":{"id":13878,"nodeType":"ParameterList","parameters":[],"src":"48445:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13887,"nodeType":"FunctionDefinition","src":"48502:55:14","nodes":[],"documentation":{"id":13880,"nodeType":"StructuredDocumentation","src":"48452:45:14","text":"Asserts that two `bool` values are equal."},"functionSelector":"f7fe3477","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"48511:8:14","parameters":{"id":13885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13882,"mutability":"mutable","name":"left","nameLocation":"48525:4:14","nodeType":"VariableDeclaration","scope":13887,"src":"48520:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13881,"name":"bool","nodeType":"ElementaryTypeName","src":"48520:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13884,"mutability":"mutable","name":"right","nameLocation":"48536:5:14","nodeType":"VariableDeclaration","scope":13887,"src":"48531:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13883,"name":"bool","nodeType":"ElementaryTypeName","src":"48531:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"48519:23:14"},"returnParameters":{"id":13886,"nodeType":"ParameterList","parameters":[],"src":"48556:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13897,"nodeType":"FunctionDefinition","src":"48670:78:14","nodes":[],"documentation":{"id":13888,"nodeType":"StructuredDocumentation","src":"48563:102:14","text":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"4db19e7e","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"48679:8:14","parameters":{"id":13895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13890,"mutability":"mutable","name":"left","nameLocation":"48693:4:14","nodeType":"VariableDeclaration","scope":13897,"src":"48688:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13889,"name":"bool","nodeType":"ElementaryTypeName","src":"48688:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13892,"mutability":"mutable","name":"right","nameLocation":"48704:5:14","nodeType":"VariableDeclaration","scope":13897,"src":"48699:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13891,"name":"bool","nodeType":"ElementaryTypeName","src":"48699:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13894,"mutability":"mutable","name":"error","nameLocation":"48727:5:14","nodeType":"VariableDeclaration","scope":13897,"src":"48711:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13893,"name":"string","nodeType":"ElementaryTypeName","src":"48711:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48687:46:14"},"returnParameters":{"id":13896,"nodeType":"ParameterList","parameters":[],"src":"48747:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13905,"nodeType":"FunctionDefinition","src":"48806:77:14","nodes":[],"documentation":{"id":13898,"nodeType":"StructuredDocumentation","src":"48754:47:14","text":"Asserts that two `string` values are equal."},"functionSelector":"f320d963","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"48815:8:14","parameters":{"id":13903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13900,"mutability":"mutable","name":"left","nameLocation":"48840:4:14","nodeType":"VariableDeclaration","scope":13905,"src":"48824:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13899,"name":"string","nodeType":"ElementaryTypeName","src":"48824:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13902,"mutability":"mutable","name":"right","nameLocation":"48862:5:14","nodeType":"VariableDeclaration","scope":13905,"src":"48846:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13901,"name":"string","nodeType":"ElementaryTypeName","src":"48846:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48823:45:14"},"returnParameters":{"id":13904,"nodeType":"ParameterList","parameters":[],"src":"48882:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13915,"nodeType":"FunctionDefinition","src":"48998:100:14","nodes":[],"documentation":{"id":13906,"nodeType":"StructuredDocumentation","src":"48889:104:14","text":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"functionSelector":"36f656d8","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49007:8:14","parameters":{"id":13913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13908,"mutability":"mutable","name":"left","nameLocation":"49032:4:14","nodeType":"VariableDeclaration","scope":13915,"src":"49016:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13907,"name":"string","nodeType":"ElementaryTypeName","src":"49016:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13910,"mutability":"mutable","name":"right","nameLocation":"49054:5:14","nodeType":"VariableDeclaration","scope":13915,"src":"49038:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13909,"name":"string","nodeType":"ElementaryTypeName","src":"49038:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13912,"mutability":"mutable","name":"error","nameLocation":"49077:5:14","nodeType":"VariableDeclaration","scope":13915,"src":"49061:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13911,"name":"string","nodeType":"ElementaryTypeName","src":"49061:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49015:68:14"},"returnParameters":{"id":13914,"nodeType":"ParameterList","parameters":[],"src":"49097:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13923,"nodeType":"FunctionDefinition","src":"49155:75:14","nodes":[],"documentation":{"id":13916,"nodeType":"StructuredDocumentation","src":"49104:46:14","text":"Asserts that two `bytes` values are equal."},"functionSelector":"97624631","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49164:8:14","parameters":{"id":13921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13918,"mutability":"mutable","name":"left","nameLocation":"49188:4:14","nodeType":"VariableDeclaration","scope":13923,"src":"49173:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13917,"name":"bytes","nodeType":"ElementaryTypeName","src":"49173:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13920,"mutability":"mutable","name":"right","nameLocation":"49209:5:14","nodeType":"VariableDeclaration","scope":13923,"src":"49194:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13919,"name":"bytes","nodeType":"ElementaryTypeName","src":"49194:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"49172:43:14"},"returnParameters":{"id":13922,"nodeType":"ParameterList","parameters":[],"src":"49229:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13933,"nodeType":"FunctionDefinition","src":"49344:98:14","nodes":[],"documentation":{"id":13924,"nodeType":"StructuredDocumentation","src":"49236:103:14","text":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"e24fed00","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49353:8:14","parameters":{"id":13931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13926,"mutability":"mutable","name":"left","nameLocation":"49377:4:14","nodeType":"VariableDeclaration","scope":13933,"src":"49362:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13925,"name":"bytes","nodeType":"ElementaryTypeName","src":"49362:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13928,"mutability":"mutable","name":"right","nameLocation":"49398:5:14","nodeType":"VariableDeclaration","scope":13933,"src":"49383:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13927,"name":"bytes","nodeType":"ElementaryTypeName","src":"49383:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13930,"mutability":"mutable","name":"error","nameLocation":"49421:5:14","nodeType":"VariableDeclaration","scope":13933,"src":"49405:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13929,"name":"string","nodeType":"ElementaryTypeName","src":"49405:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49361:66:14"},"returnParameters":{"id":13932,"nodeType":"ParameterList","parameters":[],"src":"49441:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13943,"nodeType":"FunctionDefinition","src":"49508:77:14","nodes":[],"documentation":{"id":13934,"nodeType":"StructuredDocumentation","src":"49448:55:14","text":"Asserts that two arrays of `bool` values are equal."},"functionSelector":"707df785","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49517:8:14","parameters":{"id":13941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13937,"mutability":"mutable","name":"left","nameLocation":"49542:4:14","nodeType":"VariableDeclaration","scope":13943,"src":"49526:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13935,"name":"bool","nodeType":"ElementaryTypeName","src":"49526:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13936,"nodeType":"ArrayTypeName","src":"49526:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":13940,"mutability":"mutable","name":"right","nameLocation":"49564:5:14","nodeType":"VariableDeclaration","scope":13943,"src":"49548:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13938,"name":"bool","nodeType":"ElementaryTypeName","src":"49548:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13939,"nodeType":"ArrayTypeName","src":"49548:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"49525:45:14"},"returnParameters":{"id":13942,"nodeType":"ParameterList","parameters":[],"src":"49584:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13955,"nodeType":"FunctionDefinition","src":"49708:100:14","nodes":[],"documentation":{"id":13944,"nodeType":"StructuredDocumentation","src":"49591:112:14","text":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"e48a8f8d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49717:8:14","parameters":{"id":13953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13947,"mutability":"mutable","name":"left","nameLocation":"49742:4:14","nodeType":"VariableDeclaration","scope":13955,"src":"49726:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13945,"name":"bool","nodeType":"ElementaryTypeName","src":"49726:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13946,"nodeType":"ArrayTypeName","src":"49726:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":13950,"mutability":"mutable","name":"right","nameLocation":"49764:5:14","nodeType":"VariableDeclaration","scope":13955,"src":"49748:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13948,"name":"bool","nodeType":"ElementaryTypeName","src":"49748:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13949,"nodeType":"ArrayTypeName","src":"49748:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":13952,"mutability":"mutable","name":"error","nameLocation":"49787:5:14","nodeType":"VariableDeclaration","scope":13955,"src":"49771:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13951,"name":"string","nodeType":"ElementaryTypeName","src":"49771:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49725:68:14"},"returnParameters":{"id":13954,"nodeType":"ParameterList","parameters":[],"src":"49807:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13965,"nodeType":"FunctionDefinition","src":"49876:83:14","nodes":[],"documentation":{"id":13956,"nodeType":"StructuredDocumentation","src":"49814:57:14","text":"Asserts that two arrays of `uint256 values are equal."},"functionSelector":"975d5a12","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"49885:8:14","parameters":{"id":13963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13959,"mutability":"mutable","name":"left","nameLocation":"49913:4:14","nodeType":"VariableDeclaration","scope":13965,"src":"49894:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13957,"name":"uint256","nodeType":"ElementaryTypeName","src":"49894:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13958,"nodeType":"ArrayTypeName","src":"49894:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":13962,"mutability":"mutable","name":"right","nameLocation":"49938:5:14","nodeType":"VariableDeclaration","scope":13965,"src":"49919:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13960,"name":"uint256","nodeType":"ElementaryTypeName","src":"49919:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13961,"nodeType":"ArrayTypeName","src":"49919:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"49893:51:14"},"returnParameters":{"id":13964,"nodeType":"ParameterList","parameters":[],"src":"49958:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13977,"nodeType":"FunctionDefinition","src":"50085:106:14","nodes":[],"documentation":{"id":13966,"nodeType":"StructuredDocumentation","src":"49965:115:14","text":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"5d18c73a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50094:8:14","parameters":{"id":13975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13969,"mutability":"mutable","name":"left","nameLocation":"50122:4:14","nodeType":"VariableDeclaration","scope":13977,"src":"50103:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13967,"name":"uint256","nodeType":"ElementaryTypeName","src":"50103:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13968,"nodeType":"ArrayTypeName","src":"50103:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":13972,"mutability":"mutable","name":"right","nameLocation":"50147:5:14","nodeType":"VariableDeclaration","scope":13977,"src":"50128:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13970,"name":"uint256","nodeType":"ElementaryTypeName","src":"50128:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13971,"nodeType":"ArrayTypeName","src":"50128:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":13974,"mutability":"mutable","name":"error","nameLocation":"50170:5:14","nodeType":"VariableDeclaration","scope":13977,"src":"50154:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13973,"name":"string","nodeType":"ElementaryTypeName","src":"50154:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50102:74:14"},"returnParameters":{"id":13976,"nodeType":"ParameterList","parameters":[],"src":"50190:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13987,"nodeType":"FunctionDefinition","src":"50259:81:14","nodes":[],"documentation":{"id":13978,"nodeType":"StructuredDocumentation","src":"50197:57:14","text":"Asserts that two arrays of `int256` values are equal."},"functionSelector":"711043ac","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50268:8:14","parameters":{"id":13985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13981,"mutability":"mutable","name":"left","nameLocation":"50295:4:14","nodeType":"VariableDeclaration","scope":13987,"src":"50277:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13979,"name":"int256","nodeType":"ElementaryTypeName","src":"50277:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13980,"nodeType":"ArrayTypeName","src":"50277:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":13984,"mutability":"mutable","name":"right","nameLocation":"50319:5:14","nodeType":"VariableDeclaration","scope":13987,"src":"50301:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13982,"name":"int256","nodeType":"ElementaryTypeName","src":"50301:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13983,"nodeType":"ArrayTypeName","src":"50301:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"50276:49:14"},"returnParameters":{"id":13986,"nodeType":"ParameterList","parameters":[],"src":"50339:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13999,"nodeType":"FunctionDefinition","src":"50465:104:14","nodes":[],"documentation":{"id":13988,"nodeType":"StructuredDocumentation","src":"50346:114:14","text":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"191f1b30","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50474:8:14","parameters":{"id":13997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13991,"mutability":"mutable","name":"left","nameLocation":"50501:4:14","nodeType":"VariableDeclaration","scope":13999,"src":"50483:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13989,"name":"int256","nodeType":"ElementaryTypeName","src":"50483:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13990,"nodeType":"ArrayTypeName","src":"50483:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":13994,"mutability":"mutable","name":"right","nameLocation":"50525:5:14","nodeType":"VariableDeclaration","scope":13999,"src":"50507:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13992,"name":"int256","nodeType":"ElementaryTypeName","src":"50507:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13993,"nodeType":"ArrayTypeName","src":"50507:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":13996,"mutability":"mutable","name":"error","nameLocation":"50548:5:14","nodeType":"VariableDeclaration","scope":13999,"src":"50532:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13995,"name":"string","nodeType":"ElementaryTypeName","src":"50532:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50482:72:14"},"returnParameters":{"id":13998,"nodeType":"ParameterList","parameters":[],"src":"50568:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14007,"nodeType":"FunctionDefinition","src":"50628:61:14","nodes":[],"documentation":{"id":14000,"nodeType":"StructuredDocumentation","src":"50575:48:14","text":"Asserts that two `uint256` values are equal."},"functionSelector":"98296c54","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50637:8:14","parameters":{"id":14005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14002,"mutability":"mutable","name":"left","nameLocation":"50654:4:14","nodeType":"VariableDeclaration","scope":14007,"src":"50646:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14001,"name":"uint256","nodeType":"ElementaryTypeName","src":"50646:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14004,"mutability":"mutable","name":"right","nameLocation":"50668:5:14","nodeType":"VariableDeclaration","scope":14007,"src":"50660:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14003,"name":"uint256","nodeType":"ElementaryTypeName","src":"50660:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"50645:29:14"},"returnParameters":{"id":14006,"nodeType":"ParameterList","parameters":[],"src":"50688:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14017,"nodeType":"FunctionDefinition","src":"50758:83:14","nodes":[],"documentation":{"id":14008,"nodeType":"StructuredDocumentation","src":"50695:58:14","text":"Asserts that two arrays of `address` values are equal."},"functionSelector":"3868ac34","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50767:8:14","parameters":{"id":14015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14011,"mutability":"mutable","name":"left","nameLocation":"50795:4:14","nodeType":"VariableDeclaration","scope":14017,"src":"50776:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14009,"name":"address","nodeType":"ElementaryTypeName","src":"50776:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14010,"nodeType":"ArrayTypeName","src":"50776:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":14014,"mutability":"mutable","name":"right","nameLocation":"50820:5:14","nodeType":"VariableDeclaration","scope":14017,"src":"50801:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14012,"name":"address","nodeType":"ElementaryTypeName","src":"50801:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14013,"nodeType":"ArrayTypeName","src":"50801:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"50775:51:14"},"returnParameters":{"id":14016,"nodeType":"ParameterList","parameters":[],"src":"50840:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14029,"nodeType":"FunctionDefinition","src":"50967:106:14","nodes":[],"documentation":{"id":14018,"nodeType":"StructuredDocumentation","src":"50847:115:14","text":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"functionSelector":"3e9173c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50976:8:14","parameters":{"id":14027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14021,"mutability":"mutable","name":"left","nameLocation":"51004:4:14","nodeType":"VariableDeclaration","scope":14029,"src":"50985:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14019,"name":"address","nodeType":"ElementaryTypeName","src":"50985:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14020,"nodeType":"ArrayTypeName","src":"50985:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":14024,"mutability":"mutable","name":"right","nameLocation":"51029:5:14","nodeType":"VariableDeclaration","scope":14029,"src":"51010:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14022,"name":"address","nodeType":"ElementaryTypeName","src":"51010:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14023,"nodeType":"ArrayTypeName","src":"51010:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":14026,"mutability":"mutable","name":"error","nameLocation":"51052:5:14","nodeType":"VariableDeclaration","scope":14029,"src":"51036:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14025,"name":"string","nodeType":"ElementaryTypeName","src":"51036:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50984:74:14"},"returnParameters":{"id":14028,"nodeType":"ParameterList","parameters":[],"src":"51072:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14039,"nodeType":"FunctionDefinition","src":"51142:83:14","nodes":[],"documentation":{"id":14030,"nodeType":"StructuredDocumentation","src":"51079:58:14","text":"Asserts that two arrays of `bytes32` values are equal."},"functionSelector":"0cc9ee84","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51151:8:14","parameters":{"id":14037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14033,"mutability":"mutable","name":"left","nameLocation":"51179:4:14","nodeType":"VariableDeclaration","scope":14039,"src":"51160:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14031,"name":"bytes32","nodeType":"ElementaryTypeName","src":"51160:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14032,"nodeType":"ArrayTypeName","src":"51160:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14036,"mutability":"mutable","name":"right","nameLocation":"51204:5:14","nodeType":"VariableDeclaration","scope":14039,"src":"51185:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"51185:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14035,"nodeType":"ArrayTypeName","src":"51185:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"51159:51:14"},"returnParameters":{"id":14038,"nodeType":"ParameterList","parameters":[],"src":"51224:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14051,"nodeType":"FunctionDefinition","src":"51351:106:14","nodes":[],"documentation":{"id":14040,"nodeType":"StructuredDocumentation","src":"51231:115:14","text":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"e03e9177","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51360:8:14","parameters":{"id":14049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14043,"mutability":"mutable","name":"left","nameLocation":"51388:4:14","nodeType":"VariableDeclaration","scope":14051,"src":"51369:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14041,"name":"bytes32","nodeType":"ElementaryTypeName","src":"51369:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14042,"nodeType":"ArrayTypeName","src":"51369:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14046,"mutability":"mutable","name":"right","nameLocation":"51413:5:14","nodeType":"VariableDeclaration","scope":14051,"src":"51394:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14044,"name":"bytes32","nodeType":"ElementaryTypeName","src":"51394:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14045,"nodeType":"ArrayTypeName","src":"51394:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14048,"mutability":"mutable","name":"error","nameLocation":"51436:5:14","nodeType":"VariableDeclaration","scope":14051,"src":"51420:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14047,"name":"string","nodeType":"ElementaryTypeName","src":"51420:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51368:74:14"},"returnParameters":{"id":14050,"nodeType":"ParameterList","parameters":[],"src":"51456:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14061,"nodeType":"FunctionDefinition","src":"51525:81:14","nodes":[],"documentation":{"id":14052,"nodeType":"StructuredDocumentation","src":"51463:57:14","text":"Asserts that two arrays of `string` values are equal."},"functionSelector":"cf1c049c","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51534:8:14","parameters":{"id":14059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14055,"mutability":"mutable","name":"left","nameLocation":"51561:4:14","nodeType":"VariableDeclaration","scope":14061,"src":"51543:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14053,"name":"string","nodeType":"ElementaryTypeName","src":"51543:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14054,"nodeType":"ArrayTypeName","src":"51543:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":14058,"mutability":"mutable","name":"right","nameLocation":"51585:5:14","nodeType":"VariableDeclaration","scope":14061,"src":"51567:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14056,"name":"string","nodeType":"ElementaryTypeName","src":"51567:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14057,"nodeType":"ArrayTypeName","src":"51567:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"51542:49:14"},"returnParameters":{"id":14060,"nodeType":"ParameterList","parameters":[],"src":"51605:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14073,"nodeType":"FunctionDefinition","src":"51731:104:14","nodes":[],"documentation":{"id":14062,"nodeType":"StructuredDocumentation","src":"51612:114:14","text":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"functionSelector":"eff6b27d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51740:8:14","parameters":{"id":14071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14065,"mutability":"mutable","name":"left","nameLocation":"51767:4:14","nodeType":"VariableDeclaration","scope":14073,"src":"51749:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14063,"name":"string","nodeType":"ElementaryTypeName","src":"51749:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14064,"nodeType":"ArrayTypeName","src":"51749:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":14068,"mutability":"mutable","name":"right","nameLocation":"51791:5:14","nodeType":"VariableDeclaration","scope":14073,"src":"51773:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14066,"name":"string","nodeType":"ElementaryTypeName","src":"51773:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14067,"nodeType":"ArrayTypeName","src":"51773:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":14070,"mutability":"mutable","name":"error","nameLocation":"51814:5:14","nodeType":"VariableDeclaration","scope":14073,"src":"51798:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14069,"name":"string","nodeType":"ElementaryTypeName","src":"51798:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51748:72:14"},"returnParameters":{"id":14072,"nodeType":"ParameterList","parameters":[],"src":"51834:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14083,"nodeType":"FunctionDefinition","src":"51902:79:14","nodes":[],"documentation":{"id":14074,"nodeType":"StructuredDocumentation","src":"51841:56:14","text":"Asserts that two arrays of `bytes` values are equal."},"functionSelector":"e5fb9b4a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51911:8:14","parameters":{"id":14081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14077,"mutability":"mutable","name":"left","nameLocation":"51937:4:14","nodeType":"VariableDeclaration","scope":14083,"src":"51920:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14075,"name":"bytes","nodeType":"ElementaryTypeName","src":"51920:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14076,"nodeType":"ArrayTypeName","src":"51920:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":14080,"mutability":"mutable","name":"right","nameLocation":"51960:5:14","nodeType":"VariableDeclaration","scope":14083,"src":"51943:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14078,"name":"bytes","nodeType":"ElementaryTypeName","src":"51943:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14079,"nodeType":"ArrayTypeName","src":"51943:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"51919:47:14"},"returnParameters":{"id":14082,"nodeType":"ParameterList","parameters":[],"src":"51980:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14095,"nodeType":"FunctionDefinition","src":"52105:102:14","nodes":[],"documentation":{"id":14084,"nodeType":"StructuredDocumentation","src":"51987:113:14","text":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"f413f0b6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52114:8:14","parameters":{"id":14093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14087,"mutability":"mutable","name":"left","nameLocation":"52140:4:14","nodeType":"VariableDeclaration","scope":14095,"src":"52123:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14085,"name":"bytes","nodeType":"ElementaryTypeName","src":"52123:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14086,"nodeType":"ArrayTypeName","src":"52123:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":14090,"mutability":"mutable","name":"right","nameLocation":"52163:5:14","nodeType":"VariableDeclaration","scope":14095,"src":"52146:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14088,"name":"bytes","nodeType":"ElementaryTypeName","src":"52146:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14089,"nodeType":"ArrayTypeName","src":"52146:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":14092,"mutability":"mutable","name":"error","nameLocation":"52186:5:14","nodeType":"VariableDeclaration","scope":14095,"src":"52170:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14091,"name":"string","nodeType":"ElementaryTypeName","src":"52170:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52122:70:14"},"returnParameters":{"id":14094,"nodeType":"ParameterList","parameters":[],"src":"52206:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14105,"nodeType":"FunctionDefinition","src":"52323:84:14","nodes":[],"documentation":{"id":14096,"nodeType":"StructuredDocumentation","src":"52213:105:14","text":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"88b44c85","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52332:8:14","parameters":{"id":14103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14098,"mutability":"mutable","name":"left","nameLocation":"52349:4:14","nodeType":"VariableDeclaration","scope":14105,"src":"52341:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14097,"name":"uint256","nodeType":"ElementaryTypeName","src":"52341:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14100,"mutability":"mutable","name":"right","nameLocation":"52363:5:14","nodeType":"VariableDeclaration","scope":14105,"src":"52355:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14099,"name":"uint256","nodeType":"ElementaryTypeName","src":"52355:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14102,"mutability":"mutable","name":"error","nameLocation":"52386:5:14","nodeType":"VariableDeclaration","scope":14105,"src":"52370:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14101,"name":"string","nodeType":"ElementaryTypeName","src":"52370:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52340:52:14"},"returnParameters":{"id":14104,"nodeType":"ParameterList","parameters":[],"src":"52406:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14113,"nodeType":"FunctionDefinition","src":"52465:59:14","nodes":[],"documentation":{"id":14106,"nodeType":"StructuredDocumentation","src":"52413:47:14","text":"Asserts that two `int256` values are equal."},"functionSelector":"fe74f05b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52474:8:14","parameters":{"id":14111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14108,"mutability":"mutable","name":"left","nameLocation":"52490:4:14","nodeType":"VariableDeclaration","scope":14113,"src":"52483:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14107,"name":"int256","nodeType":"ElementaryTypeName","src":"52483:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14110,"mutability":"mutable","name":"right","nameLocation":"52503:5:14","nodeType":"VariableDeclaration","scope":14113,"src":"52496:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14109,"name":"int256","nodeType":"ElementaryTypeName","src":"52496:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"52482:27:14"},"returnParameters":{"id":14112,"nodeType":"ParameterList","parameters":[],"src":"52523:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14123,"nodeType":"FunctionDefinition","src":"52639:82:14","nodes":[],"documentation":{"id":14114,"nodeType":"StructuredDocumentation","src":"52530:104:14","text":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"714a2f13","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52648:8:14","parameters":{"id":14121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14116,"mutability":"mutable","name":"left","nameLocation":"52664:4:14","nodeType":"VariableDeclaration","scope":14123,"src":"52657:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14115,"name":"int256","nodeType":"ElementaryTypeName","src":"52657:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14118,"mutability":"mutable","name":"right","nameLocation":"52677:5:14","nodeType":"VariableDeclaration","scope":14123,"src":"52670:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14117,"name":"int256","nodeType":"ElementaryTypeName","src":"52670:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14120,"mutability":"mutable","name":"error","nameLocation":"52700:5:14","nodeType":"VariableDeclaration","scope":14123,"src":"52684:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14119,"name":"string","nodeType":"ElementaryTypeName","src":"52684:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52656:50:14"},"returnParameters":{"id":14122,"nodeType":"ParameterList","parameters":[],"src":"52720:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14131,"nodeType":"FunctionDefinition","src":"52780:61:14","nodes":[],"documentation":{"id":14124,"nodeType":"StructuredDocumentation","src":"52727:48:14","text":"Asserts that two `address` values are equal."},"functionSelector":"515361f6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52789:8:14","parameters":{"id":14129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14126,"mutability":"mutable","name":"left","nameLocation":"52806:4:14","nodeType":"VariableDeclaration","scope":14131,"src":"52798:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14125,"name":"address","nodeType":"ElementaryTypeName","src":"52798:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14128,"mutability":"mutable","name":"right","nameLocation":"52820:5:14","nodeType":"VariableDeclaration","scope":14131,"src":"52812:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14127,"name":"address","nodeType":"ElementaryTypeName","src":"52812:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"52797:29:14"},"returnParameters":{"id":14130,"nodeType":"ParameterList","parameters":[],"src":"52840:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14141,"nodeType":"FunctionDefinition","src":"52957:84:14","nodes":[],"documentation":{"id":14132,"nodeType":"StructuredDocumentation","src":"52847:105:14","text":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"functionSelector":"2f2769d1","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52966:8:14","parameters":{"id":14139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14134,"mutability":"mutable","name":"left","nameLocation":"52983:4:14","nodeType":"VariableDeclaration","scope":14141,"src":"52975:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14133,"name":"address","nodeType":"ElementaryTypeName","src":"52975:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14136,"mutability":"mutable","name":"right","nameLocation":"52997:5:14","nodeType":"VariableDeclaration","scope":14141,"src":"52989:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14135,"name":"address","nodeType":"ElementaryTypeName","src":"52989:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14138,"mutability":"mutable","name":"error","nameLocation":"53020:5:14","nodeType":"VariableDeclaration","scope":14141,"src":"53004:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14137,"name":"string","nodeType":"ElementaryTypeName","src":"53004:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52974:52:14"},"returnParameters":{"id":14140,"nodeType":"ParameterList","parameters":[],"src":"53040:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14149,"nodeType":"FunctionDefinition","src":"53100:61:14","nodes":[],"documentation":{"id":14142,"nodeType":"StructuredDocumentation","src":"53047:48:14","text":"Asserts that two `bytes32` values are equal."},"functionSelector":"7c84c69b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53109:8:14","parameters":{"id":14147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14144,"mutability":"mutable","name":"left","nameLocation":"53126:4:14","nodeType":"VariableDeclaration","scope":14149,"src":"53118:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14143,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53118:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14146,"mutability":"mutable","name":"right","nameLocation":"53140:5:14","nodeType":"VariableDeclaration","scope":14149,"src":"53132:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14145,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53132:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"53117:29:14"},"returnParameters":{"id":14148,"nodeType":"ParameterList","parameters":[],"src":"53160:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14159,"nodeType":"FunctionDefinition","src":"53277:84:14","nodes":[],"documentation":{"id":14150,"nodeType":"StructuredDocumentation","src":"53167:105:14","text":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"c1fa1ed0","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53286:8:14","parameters":{"id":14157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14152,"mutability":"mutable","name":"left","nameLocation":"53303:4:14","nodeType":"VariableDeclaration","scope":14159,"src":"53295:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14151,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53295:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14154,"mutability":"mutable","name":"right","nameLocation":"53317:5:14","nodeType":"VariableDeclaration","scope":14159,"src":"53309:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14153,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53309:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14156,"mutability":"mutable","name":"error","nameLocation":"53340:5:14","nodeType":"VariableDeclaration","scope":14159,"src":"53324:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14155,"name":"string","nodeType":"ElementaryTypeName","src":"53324:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53294:52:14"},"returnParameters":{"id":14158,"nodeType":"ParameterList","parameters":[],"src":"53360:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14165,"nodeType":"FunctionDefinition","src":"53418:51:14","nodes":[],"documentation":{"id":14160,"nodeType":"StructuredDocumentation","src":"53367:46:14","text":"Asserts that the given condition is false."},"functionSelector":"a5982885","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"53427:11:14","parameters":{"id":14163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14162,"mutability":"mutable","name":"condition","nameLocation":"53444:9:14","nodeType":"VariableDeclaration","scope":14165,"src":"53439:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14161,"name":"bool","nodeType":"ElementaryTypeName","src":"53439:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"53438:16:14"},"returnParameters":{"id":14164,"nodeType":"ParameterList","parameters":[],"src":"53468:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14173,"nodeType":"FunctionDefinition","src":"53583:74:14","nodes":[],"documentation":{"id":14166,"nodeType":"StructuredDocumentation","src":"53475:103:14","text":"Asserts that the given condition is false and includes error message into revert string on failure."},"functionSelector":"7ba04809","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"53592:11:14","parameters":{"id":14171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14168,"mutability":"mutable","name":"condition","nameLocation":"53609:9:14","nodeType":"VariableDeclaration","scope":14173,"src":"53604:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14167,"name":"bool","nodeType":"ElementaryTypeName","src":"53604:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14170,"mutability":"mutable","name":"error","nameLocation":"53636:5:14","nodeType":"VariableDeclaration","scope":14173,"src":"53620:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14169,"name":"string","nodeType":"ElementaryTypeName","src":"53620:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53603:39:14"},"returnParameters":{"id":14172,"nodeType":"ParameterList","parameters":[],"src":"53656:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14183,"nodeType":"FunctionDefinition","src":"53818:86:14","nodes":[],"documentation":{"id":14174,"nodeType":"StructuredDocumentation","src":"53663:150:14","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"3d1fe08a","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"53827:15:14","parameters":{"id":14181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14176,"mutability":"mutable","name":"left","nameLocation":"53851:4:14","nodeType":"VariableDeclaration","scope":14183,"src":"53843:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14175,"name":"uint256","nodeType":"ElementaryTypeName","src":"53843:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14178,"mutability":"mutable","name":"right","nameLocation":"53865:5:14","nodeType":"VariableDeclaration","scope":14183,"src":"53857:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14177,"name":"uint256","nodeType":"ElementaryTypeName","src":"53857:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14180,"mutability":"mutable","name":"decimals","nameLocation":"53880:8:14","nodeType":"VariableDeclaration","scope":14183,"src":"53872:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14179,"name":"uint256","nodeType":"ElementaryTypeName","src":"53872:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53842:47:14"},"returnParameters":{"id":14182,"nodeType":"ParameterList","parameters":[],"src":"53903:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14195,"nodeType":"FunctionDefinition","src":"54119:109:14","nodes":[],"documentation":{"id":14184,"nodeType":"StructuredDocumentation","src":"53910:204:14","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"8bff9133","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"54128:15:14","parameters":{"id":14193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14186,"mutability":"mutable","name":"left","nameLocation":"54152:4:14","nodeType":"VariableDeclaration","scope":14195,"src":"54144:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14185,"name":"uint256","nodeType":"ElementaryTypeName","src":"54144:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14188,"mutability":"mutable","name":"right","nameLocation":"54166:5:14","nodeType":"VariableDeclaration","scope":14195,"src":"54158:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14187,"name":"uint256","nodeType":"ElementaryTypeName","src":"54158:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14190,"mutability":"mutable","name":"decimals","nameLocation":"54181:8:14","nodeType":"VariableDeclaration","scope":14195,"src":"54173:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14189,"name":"uint256","nodeType":"ElementaryTypeName","src":"54173:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14192,"mutability":"mutable","name":"error","nameLocation":"54207:5:14","nodeType":"VariableDeclaration","scope":14195,"src":"54191:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14191,"name":"string","nodeType":"ElementaryTypeName","src":"54191:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54143:70:14"},"returnParameters":{"id":14194,"nodeType":"ParameterList","parameters":[],"src":"54227:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14205,"nodeType":"FunctionDefinition","src":"54388:84:14","nodes":[],"documentation":{"id":14196,"nodeType":"StructuredDocumentation","src":"54234:149:14","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"dc28c0f1","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"54397:15:14","parameters":{"id":14203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14198,"mutability":"mutable","name":"left","nameLocation":"54420:4:14","nodeType":"VariableDeclaration","scope":14205,"src":"54413:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14197,"name":"int256","nodeType":"ElementaryTypeName","src":"54413:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14200,"mutability":"mutable","name":"right","nameLocation":"54433:5:14","nodeType":"VariableDeclaration","scope":14205,"src":"54426:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14199,"name":"int256","nodeType":"ElementaryTypeName","src":"54426:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14202,"mutability":"mutable","name":"decimals","nameLocation":"54448:8:14","nodeType":"VariableDeclaration","scope":14205,"src":"54440:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14201,"name":"uint256","nodeType":"ElementaryTypeName","src":"54440:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"54412:45:14"},"returnParameters":{"id":14204,"nodeType":"ParameterList","parameters":[],"src":"54471:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14217,"nodeType":"FunctionDefinition","src":"54686:107:14","nodes":[],"documentation":{"id":14206,"nodeType":"StructuredDocumentation","src":"54478:203:14","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"5df93c9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"54695:15:14","parameters":{"id":14215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14208,"mutability":"mutable","name":"left","nameLocation":"54718:4:14","nodeType":"VariableDeclaration","scope":14217,"src":"54711:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14207,"name":"int256","nodeType":"ElementaryTypeName","src":"54711:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14210,"mutability":"mutable","name":"right","nameLocation":"54731:5:14","nodeType":"VariableDeclaration","scope":14217,"src":"54724:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14209,"name":"int256","nodeType":"ElementaryTypeName","src":"54724:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14212,"mutability":"mutable","name":"decimals","nameLocation":"54746:8:14","nodeType":"VariableDeclaration","scope":14217,"src":"54738:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14211,"name":"uint256","nodeType":"ElementaryTypeName","src":"54738:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14214,"mutability":"mutable","name":"error","nameLocation":"54772:5:14","nodeType":"VariableDeclaration","scope":14217,"src":"54756:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14213,"name":"string","nodeType":"ElementaryTypeName","src":"54756:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54710:68:14"},"returnParameters":{"id":14216,"nodeType":"ParameterList","parameters":[],"src":"54792:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14225,"nodeType":"FunctionDefinition","src":"54897:61:14","nodes":[],"documentation":{"id":14218,"nodeType":"StructuredDocumentation","src":"54799:93:14","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"functionSelector":"a8d4d1d9","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"54906:8:14","parameters":{"id":14223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14220,"mutability":"mutable","name":"left","nameLocation":"54923:4:14","nodeType":"VariableDeclaration","scope":14225,"src":"54915:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14219,"name":"uint256","nodeType":"ElementaryTypeName","src":"54915:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14222,"mutability":"mutable","name":"right","nameLocation":"54937:5:14","nodeType":"VariableDeclaration","scope":14225,"src":"54929:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14221,"name":"uint256","nodeType":"ElementaryTypeName","src":"54929:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"54914:29:14"},"returnParameters":{"id":14224,"nodeType":"ParameterList","parameters":[],"src":"54957:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14235,"nodeType":"FunctionDefinition","src":"55124:84:14","nodes":[],"documentation":{"id":14226,"nodeType":"StructuredDocumentation","src":"54964:155:14","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"e25242c0","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"55133:8:14","parameters":{"id":14233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14228,"mutability":"mutable","name":"left","nameLocation":"55150:4:14","nodeType":"VariableDeclaration","scope":14235,"src":"55142:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14227,"name":"uint256","nodeType":"ElementaryTypeName","src":"55142:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14230,"mutability":"mutable","name":"right","nameLocation":"55164:5:14","nodeType":"VariableDeclaration","scope":14235,"src":"55156:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14229,"name":"uint256","nodeType":"ElementaryTypeName","src":"55156:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14232,"mutability":"mutable","name":"error","nameLocation":"55187:5:14","nodeType":"VariableDeclaration","scope":14235,"src":"55171:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14231,"name":"string","nodeType":"ElementaryTypeName","src":"55171:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55141:52:14"},"returnParameters":{"id":14234,"nodeType":"ParameterList","parameters":[],"src":"55207:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14243,"nodeType":"FunctionDefinition","src":"55311:59:14","nodes":[],"documentation":{"id":14236,"nodeType":"StructuredDocumentation","src":"55214:92:14","text":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"functionSelector":"0a30b771","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"55320:8:14","parameters":{"id":14241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14238,"mutability":"mutable","name":"left","nameLocation":"55336:4:14","nodeType":"VariableDeclaration","scope":14243,"src":"55329:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14237,"name":"int256","nodeType":"ElementaryTypeName","src":"55329:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14240,"mutability":"mutable","name":"right","nameLocation":"55349:5:14","nodeType":"VariableDeclaration","scope":14243,"src":"55342:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14239,"name":"int256","nodeType":"ElementaryTypeName","src":"55342:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"55328:27:14"},"returnParameters":{"id":14242,"nodeType":"ParameterList","parameters":[],"src":"55369:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14253,"nodeType":"FunctionDefinition","src":"55535:82:14","nodes":[],"documentation":{"id":14244,"nodeType":"StructuredDocumentation","src":"55376:154:14","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"a84328dd","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"55544:8:14","parameters":{"id":14251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14246,"mutability":"mutable","name":"left","nameLocation":"55560:4:14","nodeType":"VariableDeclaration","scope":14253,"src":"55553:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14245,"name":"int256","nodeType":"ElementaryTypeName","src":"55553:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14248,"mutability":"mutable","name":"right","nameLocation":"55573:5:14","nodeType":"VariableDeclaration","scope":14253,"src":"55566:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14247,"name":"int256","nodeType":"ElementaryTypeName","src":"55566:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14250,"mutability":"mutable","name":"error","nameLocation":"55596:5:14","nodeType":"VariableDeclaration","scope":14253,"src":"55580:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14249,"name":"string","nodeType":"ElementaryTypeName","src":"55580:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55552:50:14"},"returnParameters":{"id":14252,"nodeType":"ParameterList","parameters":[],"src":"55616:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14263,"nodeType":"FunctionDefinition","src":"55766:86:14","nodes":[],"documentation":{"id":14254,"nodeType":"StructuredDocumentation","src":"55623:138:14","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"eccd2437","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"55775:15:14","parameters":{"id":14261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14256,"mutability":"mutable","name":"left","nameLocation":"55799:4:14","nodeType":"VariableDeclaration","scope":14263,"src":"55791:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14255,"name":"uint256","nodeType":"ElementaryTypeName","src":"55791:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14258,"mutability":"mutable","name":"right","nameLocation":"55813:5:14","nodeType":"VariableDeclaration","scope":14263,"src":"55805:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14257,"name":"uint256","nodeType":"ElementaryTypeName","src":"55805:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14260,"mutability":"mutable","name":"decimals","nameLocation":"55828:8:14","nodeType":"VariableDeclaration","scope":14263,"src":"55820:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14259,"name":"uint256","nodeType":"ElementaryTypeName","src":"55820:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55790:47:14"},"returnParameters":{"id":14262,"nodeType":"ParameterList","parameters":[],"src":"55851:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14275,"nodeType":"FunctionDefinition","src":"56055:109:14","nodes":[],"documentation":{"id":14264,"nodeType":"StructuredDocumentation","src":"55858:192:14","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"64949a8d","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"56064:15:14","parameters":{"id":14273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14266,"mutability":"mutable","name":"left","nameLocation":"56088:4:14","nodeType":"VariableDeclaration","scope":14275,"src":"56080:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14265,"name":"uint256","nodeType":"ElementaryTypeName","src":"56080:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14268,"mutability":"mutable","name":"right","nameLocation":"56102:5:14","nodeType":"VariableDeclaration","scope":14275,"src":"56094:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14267,"name":"uint256","nodeType":"ElementaryTypeName","src":"56094:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14270,"mutability":"mutable","name":"decimals","nameLocation":"56117:8:14","nodeType":"VariableDeclaration","scope":14275,"src":"56109:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14269,"name":"uint256","nodeType":"ElementaryTypeName","src":"56109:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14272,"mutability":"mutable","name":"error","nameLocation":"56143:5:14","nodeType":"VariableDeclaration","scope":14275,"src":"56127:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14271,"name":"string","nodeType":"ElementaryTypeName","src":"56127:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56079:70:14"},"returnParameters":{"id":14274,"nodeType":"ParameterList","parameters":[],"src":"56163:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14285,"nodeType":"FunctionDefinition","src":"56312:84:14","nodes":[],"documentation":{"id":14276,"nodeType":"StructuredDocumentation","src":"56170:137:14","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"78611f0e","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"56321:15:14","parameters":{"id":14283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14278,"mutability":"mutable","name":"left","nameLocation":"56344:4:14","nodeType":"VariableDeclaration","scope":14285,"src":"56337:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14277,"name":"int256","nodeType":"ElementaryTypeName","src":"56337:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14280,"mutability":"mutable","name":"right","nameLocation":"56357:5:14","nodeType":"VariableDeclaration","scope":14285,"src":"56350:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14279,"name":"int256","nodeType":"ElementaryTypeName","src":"56350:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14282,"mutability":"mutable","name":"decimals","nameLocation":"56372:8:14","nodeType":"VariableDeclaration","scope":14285,"src":"56364:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14281,"name":"uint256","nodeType":"ElementaryTypeName","src":"56364:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"56336:45:14"},"returnParameters":{"id":14284,"nodeType":"ParameterList","parameters":[],"src":"56395:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14297,"nodeType":"FunctionDefinition","src":"56598:107:14","nodes":[],"documentation":{"id":14286,"nodeType":"StructuredDocumentation","src":"56402:191:14","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"04a5c7ab","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"56607:15:14","parameters":{"id":14295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14288,"mutability":"mutable","name":"left","nameLocation":"56630:4:14","nodeType":"VariableDeclaration","scope":14297,"src":"56623:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14287,"name":"int256","nodeType":"ElementaryTypeName","src":"56623:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14290,"mutability":"mutable","name":"right","nameLocation":"56643:5:14","nodeType":"VariableDeclaration","scope":14297,"src":"56636:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14289,"name":"int256","nodeType":"ElementaryTypeName","src":"56636:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14292,"mutability":"mutable","name":"decimals","nameLocation":"56658:8:14","nodeType":"VariableDeclaration","scope":14297,"src":"56650:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14291,"name":"uint256","nodeType":"ElementaryTypeName","src":"56650:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14294,"mutability":"mutable","name":"error","nameLocation":"56684:5:14","nodeType":"VariableDeclaration","scope":14297,"src":"56668:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14293,"name":"string","nodeType":"ElementaryTypeName","src":"56668:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56622:68:14"},"returnParameters":{"id":14296,"nodeType":"ParameterList","parameters":[],"src":"56704:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14305,"nodeType":"FunctionDefinition","src":"56797:61:14","nodes":[],"documentation":{"id":14298,"nodeType":"StructuredDocumentation","src":"56711:81:14","text":"Compares two `uint256` values. Expects first value to be greater than second."},"functionSelector":"db07fcd2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"56806:8:14","parameters":{"id":14303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14300,"mutability":"mutable","name":"left","nameLocation":"56823:4:14","nodeType":"VariableDeclaration","scope":14305,"src":"56815:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14299,"name":"uint256","nodeType":"ElementaryTypeName","src":"56815:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14302,"mutability":"mutable","name":"right","nameLocation":"56837:5:14","nodeType":"VariableDeclaration","scope":14305,"src":"56829:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14301,"name":"uint256","nodeType":"ElementaryTypeName","src":"56829:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"56814:29:14"},"returnParameters":{"id":14304,"nodeType":"ParameterList","parameters":[],"src":"56857:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14315,"nodeType":"FunctionDefinition","src":"57012:84:14","nodes":[],"documentation":{"id":14306,"nodeType":"StructuredDocumentation","src":"56864:143:14","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"d9a3c4d2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"57021:8:14","parameters":{"id":14313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14308,"mutability":"mutable","name":"left","nameLocation":"57038:4:14","nodeType":"VariableDeclaration","scope":14315,"src":"57030:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14307,"name":"uint256","nodeType":"ElementaryTypeName","src":"57030:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14310,"mutability":"mutable","name":"right","nameLocation":"57052:5:14","nodeType":"VariableDeclaration","scope":14315,"src":"57044:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14309,"name":"uint256","nodeType":"ElementaryTypeName","src":"57044:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14312,"mutability":"mutable","name":"error","nameLocation":"57075:5:14","nodeType":"VariableDeclaration","scope":14315,"src":"57059:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14311,"name":"string","nodeType":"ElementaryTypeName","src":"57059:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57029:52:14"},"returnParameters":{"id":14314,"nodeType":"ParameterList","parameters":[],"src":"57095:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14323,"nodeType":"FunctionDefinition","src":"57187:59:14","nodes":[],"documentation":{"id":14316,"nodeType":"StructuredDocumentation","src":"57102:80:14","text":"Compares two `int256` values. Expects first value to be greater than second."},"functionSelector":"5a362d45","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"57196:8:14","parameters":{"id":14321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14318,"mutability":"mutable","name":"left","nameLocation":"57212:4:14","nodeType":"VariableDeclaration","scope":14323,"src":"57205:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14317,"name":"int256","nodeType":"ElementaryTypeName","src":"57205:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14320,"mutability":"mutable","name":"right","nameLocation":"57225:5:14","nodeType":"VariableDeclaration","scope":14323,"src":"57218:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14319,"name":"int256","nodeType":"ElementaryTypeName","src":"57218:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"57204:27:14"},"returnParameters":{"id":14322,"nodeType":"ParameterList","parameters":[],"src":"57245:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14333,"nodeType":"FunctionDefinition","src":"57399:82:14","nodes":[],"documentation":{"id":14324,"nodeType":"StructuredDocumentation","src":"57252:142:14","text":"Compares two `int256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"f8d33b9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"57408:8:14","parameters":{"id":14331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14326,"mutability":"mutable","name":"left","nameLocation":"57424:4:14","nodeType":"VariableDeclaration","scope":14333,"src":"57417:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14325,"name":"int256","nodeType":"ElementaryTypeName","src":"57417:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14328,"mutability":"mutable","name":"right","nameLocation":"57437:5:14","nodeType":"VariableDeclaration","scope":14333,"src":"57430:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14327,"name":"int256","nodeType":"ElementaryTypeName","src":"57430:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14330,"mutability":"mutable","name":"error","nameLocation":"57460:5:14","nodeType":"VariableDeclaration","scope":14333,"src":"57444:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14329,"name":"string","nodeType":"ElementaryTypeName","src":"57444:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57416:50:14"},"returnParameters":{"id":14332,"nodeType":"ParameterList","parameters":[],"src":"57480:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14343,"nodeType":"FunctionDefinition","src":"57639:86:14","nodes":[],"documentation":{"id":14334,"nodeType":"StructuredDocumentation","src":"57487:147:14","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"c304aab7","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"57648:15:14","parameters":{"id":14341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14336,"mutability":"mutable","name":"left","nameLocation":"57672:4:14","nodeType":"VariableDeclaration","scope":14343,"src":"57664:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14335,"name":"uint256","nodeType":"ElementaryTypeName","src":"57664:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14338,"mutability":"mutable","name":"right","nameLocation":"57686:5:14","nodeType":"VariableDeclaration","scope":14343,"src":"57678:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14337,"name":"uint256","nodeType":"ElementaryTypeName","src":"57678:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14340,"mutability":"mutable","name":"decimals","nameLocation":"57701:8:14","nodeType":"VariableDeclaration","scope":14343,"src":"57693:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14339,"name":"uint256","nodeType":"ElementaryTypeName","src":"57693:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"57663:47:14"},"returnParameters":{"id":14342,"nodeType":"ParameterList","parameters":[],"src":"57724:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14355,"nodeType":"FunctionDefinition","src":"57937:109:14","nodes":[],"documentation":{"id":14344,"nodeType":"StructuredDocumentation","src":"57731:201:14","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"7fefbbe0","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"57946:15:14","parameters":{"id":14353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14346,"mutability":"mutable","name":"left","nameLocation":"57970:4:14","nodeType":"VariableDeclaration","scope":14355,"src":"57962:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14345,"name":"uint256","nodeType":"ElementaryTypeName","src":"57962:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14348,"mutability":"mutable","name":"right","nameLocation":"57984:5:14","nodeType":"VariableDeclaration","scope":14355,"src":"57976:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14347,"name":"uint256","nodeType":"ElementaryTypeName","src":"57976:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14350,"mutability":"mutable","name":"decimals","nameLocation":"57999:8:14","nodeType":"VariableDeclaration","scope":14355,"src":"57991:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14349,"name":"uint256","nodeType":"ElementaryTypeName","src":"57991:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14352,"mutability":"mutable","name":"error","nameLocation":"58025:5:14","nodeType":"VariableDeclaration","scope":14355,"src":"58009:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14351,"name":"string","nodeType":"ElementaryTypeName","src":"58009:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57961:70:14"},"returnParameters":{"id":14354,"nodeType":"ParameterList","parameters":[],"src":"58045:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14365,"nodeType":"FunctionDefinition","src":"58203:84:14","nodes":[],"documentation":{"id":14356,"nodeType":"StructuredDocumentation","src":"58052:146:14","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"11d1364a","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"58212:15:14","parameters":{"id":14363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14358,"mutability":"mutable","name":"left","nameLocation":"58235:4:14","nodeType":"VariableDeclaration","scope":14365,"src":"58228:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14357,"name":"int256","nodeType":"ElementaryTypeName","src":"58228:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14360,"mutability":"mutable","name":"right","nameLocation":"58248:5:14","nodeType":"VariableDeclaration","scope":14365,"src":"58241:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14359,"name":"int256","nodeType":"ElementaryTypeName","src":"58241:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14362,"mutability":"mutable","name":"decimals","nameLocation":"58263:8:14","nodeType":"VariableDeclaration","scope":14365,"src":"58255:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14361,"name":"uint256","nodeType":"ElementaryTypeName","src":"58255:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58227:45:14"},"returnParameters":{"id":14364,"nodeType":"ParameterList","parameters":[],"src":"58286:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14377,"nodeType":"FunctionDefinition","src":"58498:107:14","nodes":[],"documentation":{"id":14366,"nodeType":"StructuredDocumentation","src":"58293:200:14","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"aa5cf788","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"58507:15:14","parameters":{"id":14375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14368,"mutability":"mutable","name":"left","nameLocation":"58530:4:14","nodeType":"VariableDeclaration","scope":14377,"src":"58523:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14367,"name":"int256","nodeType":"ElementaryTypeName","src":"58523:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14370,"mutability":"mutable","name":"right","nameLocation":"58543:5:14","nodeType":"VariableDeclaration","scope":14377,"src":"58536:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14369,"name":"int256","nodeType":"ElementaryTypeName","src":"58536:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14372,"mutability":"mutable","name":"decimals","nameLocation":"58558:8:14","nodeType":"VariableDeclaration","scope":14377,"src":"58550:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14371,"name":"uint256","nodeType":"ElementaryTypeName","src":"58550:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14374,"mutability":"mutable","name":"error","nameLocation":"58584:5:14","nodeType":"VariableDeclaration","scope":14377,"src":"58568:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14373,"name":"string","nodeType":"ElementaryTypeName","src":"58568:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58522:68:14"},"returnParameters":{"id":14376,"nodeType":"ParameterList","parameters":[],"src":"58604:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14385,"nodeType":"FunctionDefinition","src":"58706:61:14","nodes":[],"documentation":{"id":14378,"nodeType":"StructuredDocumentation","src":"58611:90:14","text":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"functionSelector":"8466f415","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"58715:8:14","parameters":{"id":14383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14380,"mutability":"mutable","name":"left","nameLocation":"58732:4:14","nodeType":"VariableDeclaration","scope":14385,"src":"58724:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14379,"name":"uint256","nodeType":"ElementaryTypeName","src":"58724:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14382,"mutability":"mutable","name":"right","nameLocation":"58746:5:14","nodeType":"VariableDeclaration","scope":14385,"src":"58738:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14381,"name":"uint256","nodeType":"ElementaryTypeName","src":"58738:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58723:29:14"},"returnParameters":{"id":14384,"nodeType":"ParameterList","parameters":[],"src":"58766:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14395,"nodeType":"FunctionDefinition","src":"58930:84:14","nodes":[],"documentation":{"id":14386,"nodeType":"StructuredDocumentation","src":"58773:152:14","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"d17d4b0d","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"58939:8:14","parameters":{"id":14393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14388,"mutability":"mutable","name":"left","nameLocation":"58956:4:14","nodeType":"VariableDeclaration","scope":14395,"src":"58948:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14387,"name":"uint256","nodeType":"ElementaryTypeName","src":"58948:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14390,"mutability":"mutable","name":"right","nameLocation":"58970:5:14","nodeType":"VariableDeclaration","scope":14395,"src":"58962:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14389,"name":"uint256","nodeType":"ElementaryTypeName","src":"58962:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14392,"mutability":"mutable","name":"error","nameLocation":"58993:5:14","nodeType":"VariableDeclaration","scope":14395,"src":"58977:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14391,"name":"string","nodeType":"ElementaryTypeName","src":"58977:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58947:52:14"},"returnParameters":{"id":14394,"nodeType":"ParameterList","parameters":[],"src":"59013:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14403,"nodeType":"FunctionDefinition","src":"59114:59:14","nodes":[],"documentation":{"id":14396,"nodeType":"StructuredDocumentation","src":"59020:89:14","text":"Compares two `int256` values. Expects first value to be less than or equal to second."},"functionSelector":"95fd154e","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"59123:8:14","parameters":{"id":14401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14398,"mutability":"mutable","name":"left","nameLocation":"59139:4:14","nodeType":"VariableDeclaration","scope":14403,"src":"59132:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14397,"name":"int256","nodeType":"ElementaryTypeName","src":"59132:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14400,"mutability":"mutable","name":"right","nameLocation":"59152:5:14","nodeType":"VariableDeclaration","scope":14403,"src":"59145:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14399,"name":"int256","nodeType":"ElementaryTypeName","src":"59145:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"59131:27:14"},"returnParameters":{"id":14402,"nodeType":"ParameterList","parameters":[],"src":"59172:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14413,"nodeType":"FunctionDefinition","src":"59335:82:14","nodes":[],"documentation":{"id":14404,"nodeType":"StructuredDocumentation","src":"59179:151:14","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"4dfe692c","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"59344:8:14","parameters":{"id":14411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14406,"mutability":"mutable","name":"left","nameLocation":"59360:4:14","nodeType":"VariableDeclaration","scope":14413,"src":"59353:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14405,"name":"int256","nodeType":"ElementaryTypeName","src":"59353:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14408,"mutability":"mutable","name":"right","nameLocation":"59373:5:14","nodeType":"VariableDeclaration","scope":14413,"src":"59366:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14407,"name":"int256","nodeType":"ElementaryTypeName","src":"59366:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14410,"mutability":"mutable","name":"error","nameLocation":"59396:5:14","nodeType":"VariableDeclaration","scope":14413,"src":"59380:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14409,"name":"string","nodeType":"ElementaryTypeName","src":"59380:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59352:50:14"},"returnParameters":{"id":14412,"nodeType":"ParameterList","parameters":[],"src":"59416:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14423,"nodeType":"FunctionDefinition","src":"59563:86:14","nodes":[],"documentation":{"id":14414,"nodeType":"StructuredDocumentation","src":"59423:135:14","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"2077337e","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"59572:15:14","parameters":{"id":14421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14416,"mutability":"mutable","name":"left","nameLocation":"59596:4:14","nodeType":"VariableDeclaration","scope":14423,"src":"59588:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14415,"name":"uint256","nodeType":"ElementaryTypeName","src":"59588:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14418,"mutability":"mutable","name":"right","nameLocation":"59610:5:14","nodeType":"VariableDeclaration","scope":14423,"src":"59602:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14417,"name":"uint256","nodeType":"ElementaryTypeName","src":"59602:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14420,"mutability":"mutable","name":"decimals","nameLocation":"59625:8:14","nodeType":"VariableDeclaration","scope":14423,"src":"59617:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14419,"name":"uint256","nodeType":"ElementaryTypeName","src":"59617:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"59587:47:14"},"returnParameters":{"id":14422,"nodeType":"ParameterList","parameters":[],"src":"59648:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14435,"nodeType":"FunctionDefinition","src":"59849:109:14","nodes":[],"documentation":{"id":14424,"nodeType":"StructuredDocumentation","src":"59655:189:14","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"a972d037","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"59858:15:14","parameters":{"id":14433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14426,"mutability":"mutable","name":"left","nameLocation":"59882:4:14","nodeType":"VariableDeclaration","scope":14435,"src":"59874:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14425,"name":"uint256","nodeType":"ElementaryTypeName","src":"59874:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14428,"mutability":"mutable","name":"right","nameLocation":"59896:5:14","nodeType":"VariableDeclaration","scope":14435,"src":"59888:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14427,"name":"uint256","nodeType":"ElementaryTypeName","src":"59888:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14430,"mutability":"mutable","name":"decimals","nameLocation":"59911:8:14","nodeType":"VariableDeclaration","scope":14435,"src":"59903:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14429,"name":"uint256","nodeType":"ElementaryTypeName","src":"59903:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14432,"mutability":"mutable","name":"error","nameLocation":"59937:5:14","nodeType":"VariableDeclaration","scope":14435,"src":"59921:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14431,"name":"string","nodeType":"ElementaryTypeName","src":"59921:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59873:70:14"},"returnParameters":{"id":14434,"nodeType":"ParameterList","parameters":[],"src":"59957:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14445,"nodeType":"FunctionDefinition","src":"60103:84:14","nodes":[],"documentation":{"id":14436,"nodeType":"StructuredDocumentation","src":"59964:134:14","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"dbe8d88b","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"60112:15:14","parameters":{"id":14443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14438,"mutability":"mutable","name":"left","nameLocation":"60135:4:14","nodeType":"VariableDeclaration","scope":14445,"src":"60128:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14437,"name":"int256","nodeType":"ElementaryTypeName","src":"60128:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14440,"mutability":"mutable","name":"right","nameLocation":"60148:5:14","nodeType":"VariableDeclaration","scope":14445,"src":"60141:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14439,"name":"int256","nodeType":"ElementaryTypeName","src":"60141:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14442,"mutability":"mutable","name":"decimals","nameLocation":"60163:8:14","nodeType":"VariableDeclaration","scope":14445,"src":"60155:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14441,"name":"uint256","nodeType":"ElementaryTypeName","src":"60155:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"60127:45:14"},"returnParameters":{"id":14444,"nodeType":"ParameterList","parameters":[],"src":"60186:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14457,"nodeType":"FunctionDefinition","src":"60386:107:14","nodes":[],"documentation":{"id":14446,"nodeType":"StructuredDocumentation","src":"60193:188:14","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"40f0b4e0","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"60395:15:14","parameters":{"id":14455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14448,"mutability":"mutable","name":"left","nameLocation":"60418:4:14","nodeType":"VariableDeclaration","scope":14457,"src":"60411:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14447,"name":"int256","nodeType":"ElementaryTypeName","src":"60411:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14450,"mutability":"mutable","name":"right","nameLocation":"60431:5:14","nodeType":"VariableDeclaration","scope":14457,"src":"60424:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14449,"name":"int256","nodeType":"ElementaryTypeName","src":"60424:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14452,"mutability":"mutable","name":"decimals","nameLocation":"60446:8:14","nodeType":"VariableDeclaration","scope":14457,"src":"60438:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14451,"name":"uint256","nodeType":"ElementaryTypeName","src":"60438:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14454,"mutability":"mutable","name":"error","nameLocation":"60472:5:14","nodeType":"VariableDeclaration","scope":14457,"src":"60456:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14453,"name":"string","nodeType":"ElementaryTypeName","src":"60456:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60410:68:14"},"returnParameters":{"id":14456,"nodeType":"ParameterList","parameters":[],"src":"60492:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14465,"nodeType":"FunctionDefinition","src":"60582:61:14","nodes":[],"documentation":{"id":14458,"nodeType":"StructuredDocumentation","src":"60499:78:14","text":"Compares two `uint256` values. Expects first value to be less than second."},"functionSelector":"b12fc005","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"60591:8:14","parameters":{"id":14463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14460,"mutability":"mutable","name":"left","nameLocation":"60608:4:14","nodeType":"VariableDeclaration","scope":14465,"src":"60600:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14459,"name":"uint256","nodeType":"ElementaryTypeName","src":"60600:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14462,"mutability":"mutable","name":"right","nameLocation":"60622:5:14","nodeType":"VariableDeclaration","scope":14465,"src":"60614:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14461,"name":"uint256","nodeType":"ElementaryTypeName","src":"60614:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"60599:29:14"},"returnParameters":{"id":14464,"nodeType":"ParameterList","parameters":[],"src":"60642:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14475,"nodeType":"FunctionDefinition","src":"60794:84:14","nodes":[],"documentation":{"id":14466,"nodeType":"StructuredDocumentation","src":"60649:140:14","text":"Compares two `uint256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"65d5c135","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"60803:8:14","parameters":{"id":14473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14468,"mutability":"mutable","name":"left","nameLocation":"60820:4:14","nodeType":"VariableDeclaration","scope":14475,"src":"60812:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14467,"name":"uint256","nodeType":"ElementaryTypeName","src":"60812:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14470,"mutability":"mutable","name":"right","nameLocation":"60834:5:14","nodeType":"VariableDeclaration","scope":14475,"src":"60826:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14469,"name":"uint256","nodeType":"ElementaryTypeName","src":"60826:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14472,"mutability":"mutable","name":"error","nameLocation":"60857:5:14","nodeType":"VariableDeclaration","scope":14475,"src":"60841:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14471,"name":"string","nodeType":"ElementaryTypeName","src":"60841:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60811:52:14"},"returnParameters":{"id":14474,"nodeType":"ParameterList","parameters":[],"src":"60877:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14483,"nodeType":"FunctionDefinition","src":"60966:59:14","nodes":[],"documentation":{"id":14476,"nodeType":"StructuredDocumentation","src":"60884:77:14","text":"Compares two `int256` values. Expects first value to be less than second."},"functionSelector":"3e914080","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"60975:8:14","parameters":{"id":14481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14478,"mutability":"mutable","name":"left","nameLocation":"60991:4:14","nodeType":"VariableDeclaration","scope":14483,"src":"60984:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14477,"name":"int256","nodeType":"ElementaryTypeName","src":"60984:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14480,"mutability":"mutable","name":"right","nameLocation":"61004:5:14","nodeType":"VariableDeclaration","scope":14483,"src":"60997:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14479,"name":"int256","nodeType":"ElementaryTypeName","src":"60997:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"60983:27:14"},"returnParameters":{"id":14482,"nodeType":"ParameterList","parameters":[],"src":"61024:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14493,"nodeType":"FunctionDefinition","src":"61175:82:14","nodes":[],"documentation":{"id":14484,"nodeType":"StructuredDocumentation","src":"61031:139:14","text":"Compares two `int256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"9ff531e3","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"61184:8:14","parameters":{"id":14491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14486,"mutability":"mutable","name":"left","nameLocation":"61200:4:14","nodeType":"VariableDeclaration","scope":14493,"src":"61193:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14485,"name":"int256","nodeType":"ElementaryTypeName","src":"61193:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14488,"mutability":"mutable","name":"right","nameLocation":"61213:5:14","nodeType":"VariableDeclaration","scope":14493,"src":"61206:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14487,"name":"int256","nodeType":"ElementaryTypeName","src":"61206:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14490,"mutability":"mutable","name":"error","nameLocation":"61236:5:14","nodeType":"VariableDeclaration","scope":14493,"src":"61220:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14489,"name":"string","nodeType":"ElementaryTypeName","src":"61220:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61192:50:14"},"returnParameters":{"id":14492,"nodeType":"ParameterList","parameters":[],"src":"61256:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14503,"nodeType":"FunctionDefinition","src":"61370:89:14","nodes":[],"documentation":{"id":14494,"nodeType":"StructuredDocumentation","src":"61263:102:14","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"669efca7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"61379:18:14","parameters":{"id":14501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14496,"mutability":"mutable","name":"left","nameLocation":"61406:4:14","nodeType":"VariableDeclaration","scope":14503,"src":"61398:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14495,"name":"uint256","nodeType":"ElementaryTypeName","src":"61398:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14498,"mutability":"mutable","name":"right","nameLocation":"61420:5:14","nodeType":"VariableDeclaration","scope":14503,"src":"61412:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14497,"name":"uint256","nodeType":"ElementaryTypeName","src":"61412:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14500,"mutability":"mutable","name":"decimals","nameLocation":"61435:8:14","nodeType":"VariableDeclaration","scope":14503,"src":"61427:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14499,"name":"uint256","nodeType":"ElementaryTypeName","src":"61427:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61397:47:14"},"returnParameters":{"id":14502,"nodeType":"ParameterList","parameters":[],"src":"61458:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14515,"nodeType":"FunctionDefinition","src":"61634:112:14","nodes":[],"documentation":{"id":14504,"nodeType":"StructuredDocumentation","src":"61465:164:14","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"f5a55558","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"61643:18:14","parameters":{"id":14513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14506,"mutability":"mutable","name":"left","nameLocation":"61670:4:14","nodeType":"VariableDeclaration","scope":14515,"src":"61662:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14505,"name":"uint256","nodeType":"ElementaryTypeName","src":"61662:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14508,"mutability":"mutable","name":"right","nameLocation":"61684:5:14","nodeType":"VariableDeclaration","scope":14515,"src":"61676:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14507,"name":"uint256","nodeType":"ElementaryTypeName","src":"61676:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14510,"mutability":"mutable","name":"decimals","nameLocation":"61699:8:14","nodeType":"VariableDeclaration","scope":14515,"src":"61691:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14509,"name":"uint256","nodeType":"ElementaryTypeName","src":"61691:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14512,"mutability":"mutable","name":"error","nameLocation":"61725:5:14","nodeType":"VariableDeclaration","scope":14515,"src":"61709:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14511,"name":"string","nodeType":"ElementaryTypeName","src":"61709:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61661:70:14"},"returnParameters":{"id":14514,"nodeType":"ParameterList","parameters":[],"src":"61745:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14525,"nodeType":"FunctionDefinition","src":"61858:87:14","nodes":[],"documentation":{"id":14516,"nodeType":"StructuredDocumentation","src":"61752:101:14","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"14e75680","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"61867:18:14","parameters":{"id":14523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14518,"mutability":"mutable","name":"left","nameLocation":"61893:4:14","nodeType":"VariableDeclaration","scope":14525,"src":"61886:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14517,"name":"int256","nodeType":"ElementaryTypeName","src":"61886:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14520,"mutability":"mutable","name":"right","nameLocation":"61906:5:14","nodeType":"VariableDeclaration","scope":14525,"src":"61899:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14519,"name":"int256","nodeType":"ElementaryTypeName","src":"61899:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14522,"mutability":"mutable","name":"decimals","nameLocation":"61921:8:14","nodeType":"VariableDeclaration","scope":14525,"src":"61913:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14521,"name":"uint256","nodeType":"ElementaryTypeName","src":"61913:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61885:45:14"},"returnParameters":{"id":14524,"nodeType":"ParameterList","parameters":[],"src":"61944:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14537,"nodeType":"FunctionDefinition","src":"62119:110:14","nodes":[],"documentation":{"id":14526,"nodeType":"StructuredDocumentation","src":"61951:163:14","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"33949f0b","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"62128:18:14","parameters":{"id":14535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14528,"mutability":"mutable","name":"left","nameLocation":"62154:4:14","nodeType":"VariableDeclaration","scope":14537,"src":"62147:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14527,"name":"int256","nodeType":"ElementaryTypeName","src":"62147:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14530,"mutability":"mutable","name":"right","nameLocation":"62167:5:14","nodeType":"VariableDeclaration","scope":14537,"src":"62160:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14529,"name":"int256","nodeType":"ElementaryTypeName","src":"62160:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14532,"mutability":"mutable","name":"decimals","nameLocation":"62182:8:14","nodeType":"VariableDeclaration","scope":14537,"src":"62174:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14531,"name":"uint256","nodeType":"ElementaryTypeName","src":"62174:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14534,"mutability":"mutable","name":"error","nameLocation":"62208:5:14","nodeType":"VariableDeclaration","scope":14537,"src":"62192:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14533,"name":"string","nodeType":"ElementaryTypeName","src":"62192:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62146:68:14"},"returnParameters":{"id":14536,"nodeType":"ParameterList","parameters":[],"src":"62228:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14545,"nodeType":"FunctionDefinition","src":"62289:58:14","nodes":[],"documentation":{"id":14538,"nodeType":"StructuredDocumentation","src":"62235:49:14","text":"Asserts that two `bool` values are not equal."},"functionSelector":"236e4d66","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62298:11:14","parameters":{"id":14543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14540,"mutability":"mutable","name":"left","nameLocation":"62315:4:14","nodeType":"VariableDeclaration","scope":14545,"src":"62310:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14539,"name":"bool","nodeType":"ElementaryTypeName","src":"62310:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14542,"mutability":"mutable","name":"right","nameLocation":"62326:5:14","nodeType":"VariableDeclaration","scope":14545,"src":"62321:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14541,"name":"bool","nodeType":"ElementaryTypeName","src":"62321:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"62309:23:14"},"returnParameters":{"id":14544,"nodeType":"ParameterList","parameters":[],"src":"62346:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14555,"nodeType":"FunctionDefinition","src":"62464:81:14","nodes":[],"documentation":{"id":14546,"nodeType":"StructuredDocumentation","src":"62353:106:14","text":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"1091a261","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62473:11:14","parameters":{"id":14553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14548,"mutability":"mutable","name":"left","nameLocation":"62490:4:14","nodeType":"VariableDeclaration","scope":14555,"src":"62485:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14547,"name":"bool","nodeType":"ElementaryTypeName","src":"62485:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14550,"mutability":"mutable","name":"right","nameLocation":"62501:5:14","nodeType":"VariableDeclaration","scope":14555,"src":"62496:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14549,"name":"bool","nodeType":"ElementaryTypeName","src":"62496:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14552,"mutability":"mutable","name":"error","nameLocation":"62524:5:14","nodeType":"VariableDeclaration","scope":14555,"src":"62508:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14551,"name":"string","nodeType":"ElementaryTypeName","src":"62508:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62484:46:14"},"returnParameters":{"id":14554,"nodeType":"ParameterList","parameters":[],"src":"62544:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14563,"nodeType":"FunctionDefinition","src":"62607:80:14","nodes":[],"documentation":{"id":14556,"nodeType":"StructuredDocumentation","src":"62551:51:14","text":"Asserts that two `string` values are not equal."},"functionSelector":"6a8237b3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62616:11:14","parameters":{"id":14561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14558,"mutability":"mutable","name":"left","nameLocation":"62644:4:14","nodeType":"VariableDeclaration","scope":14563,"src":"62628:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14557,"name":"string","nodeType":"ElementaryTypeName","src":"62628:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14560,"mutability":"mutable","name":"right","nameLocation":"62666:5:14","nodeType":"VariableDeclaration","scope":14563,"src":"62650:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14559,"name":"string","nodeType":"ElementaryTypeName","src":"62650:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62627:45:14"},"returnParameters":{"id":14562,"nodeType":"ParameterList","parameters":[],"src":"62686:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14573,"nodeType":"FunctionDefinition","src":"62806:103:14","nodes":[],"documentation":{"id":14564,"nodeType":"StructuredDocumentation","src":"62693:108:14","text":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"78bdcea7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62815:11:14","parameters":{"id":14571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14566,"mutability":"mutable","name":"left","nameLocation":"62843:4:14","nodeType":"VariableDeclaration","scope":14573,"src":"62827:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14565,"name":"string","nodeType":"ElementaryTypeName","src":"62827:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14568,"mutability":"mutable","name":"right","nameLocation":"62865:5:14","nodeType":"VariableDeclaration","scope":14573,"src":"62849:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14567,"name":"string","nodeType":"ElementaryTypeName","src":"62849:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14570,"mutability":"mutable","name":"error","nameLocation":"62888:5:14","nodeType":"VariableDeclaration","scope":14573,"src":"62872:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14569,"name":"string","nodeType":"ElementaryTypeName","src":"62872:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62826:68:14"},"returnParameters":{"id":14572,"nodeType":"ParameterList","parameters":[],"src":"62908:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14581,"nodeType":"FunctionDefinition","src":"62970:78:14","nodes":[],"documentation":{"id":14574,"nodeType":"StructuredDocumentation","src":"62915:50:14","text":"Asserts that two `bytes` values are not equal."},"functionSelector":"3cf78e28","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62979:11:14","parameters":{"id":14579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14576,"mutability":"mutable","name":"left","nameLocation":"63006:4:14","nodeType":"VariableDeclaration","scope":14581,"src":"62991:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14575,"name":"bytes","nodeType":"ElementaryTypeName","src":"62991:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14578,"mutability":"mutable","name":"right","nameLocation":"63027:5:14","nodeType":"VariableDeclaration","scope":14581,"src":"63012:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14577,"name":"bytes","nodeType":"ElementaryTypeName","src":"63012:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"62990:43:14"},"returnParameters":{"id":14580,"nodeType":"ParameterList","parameters":[],"src":"63047:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14591,"nodeType":"FunctionDefinition","src":"63166:101:14","nodes":[],"documentation":{"id":14582,"nodeType":"StructuredDocumentation","src":"63054:107:14","text":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"9507540e","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"63175:11:14","parameters":{"id":14589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14584,"mutability":"mutable","name":"left","nameLocation":"63202:4:14","nodeType":"VariableDeclaration","scope":14591,"src":"63187:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14583,"name":"bytes","nodeType":"ElementaryTypeName","src":"63187:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14586,"mutability":"mutable","name":"right","nameLocation":"63223:5:14","nodeType":"VariableDeclaration","scope":14591,"src":"63208:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14585,"name":"bytes","nodeType":"ElementaryTypeName","src":"63208:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14588,"mutability":"mutable","name":"error","nameLocation":"63246:5:14","nodeType":"VariableDeclaration","scope":14591,"src":"63230:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14587,"name":"string","nodeType":"ElementaryTypeName","src":"63230:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63186:66:14"},"returnParameters":{"id":14590,"nodeType":"ParameterList","parameters":[],"src":"63266:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14601,"nodeType":"FunctionDefinition","src":"63337:80:14","nodes":[],"documentation":{"id":14592,"nodeType":"StructuredDocumentation","src":"63273:59:14","text":"Asserts that two arrays of `bool` values are not equal."},"functionSelector":"286fafea","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"63346:11:14","parameters":{"id":14599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14595,"mutability":"mutable","name":"left","nameLocation":"63374:4:14","nodeType":"VariableDeclaration","scope":14601,"src":"63358:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14593,"name":"bool","nodeType":"ElementaryTypeName","src":"63358:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14594,"nodeType":"ArrayTypeName","src":"63358:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":14598,"mutability":"mutable","name":"right","nameLocation":"63396:5:14","nodeType":"VariableDeclaration","scope":14601,"src":"63380:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14596,"name":"bool","nodeType":"ElementaryTypeName","src":"63380:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14597,"nodeType":"ArrayTypeName","src":"63380:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"63357:45:14"},"returnParameters":{"id":14600,"nodeType":"ParameterList","parameters":[],"src":"63416:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14613,"nodeType":"FunctionDefinition","src":"63544:103:14","nodes":[],"documentation":{"id":14602,"nodeType":"StructuredDocumentation","src":"63423:116:14","text":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"62c6f9fb","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"63553:11:14","parameters":{"id":14611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14605,"mutability":"mutable","name":"left","nameLocation":"63581:4:14","nodeType":"VariableDeclaration","scope":14613,"src":"63565:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14603,"name":"bool","nodeType":"ElementaryTypeName","src":"63565:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14604,"nodeType":"ArrayTypeName","src":"63565:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":14608,"mutability":"mutable","name":"right","nameLocation":"63603:5:14","nodeType":"VariableDeclaration","scope":14613,"src":"63587:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14606,"name":"bool","nodeType":"ElementaryTypeName","src":"63587:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14607,"nodeType":"ArrayTypeName","src":"63587:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":14610,"mutability":"mutable","name":"error","nameLocation":"63626:5:14","nodeType":"VariableDeclaration","scope":14613,"src":"63610:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14609,"name":"string","nodeType":"ElementaryTypeName","src":"63610:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63564:68:14"},"returnParameters":{"id":14612,"nodeType":"ParameterList","parameters":[],"src":"63646:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14623,"nodeType":"FunctionDefinition","src":"63720:86:14","nodes":[],"documentation":{"id":14614,"nodeType":"StructuredDocumentation","src":"63653:62:14","text":"Asserts that two arrays of `uint256` values are not equal."},"functionSelector":"56f29cba","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"63729:11:14","parameters":{"id":14621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14617,"mutability":"mutable","name":"left","nameLocation":"63760:4:14","nodeType":"VariableDeclaration","scope":14623,"src":"63741:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14615,"name":"uint256","nodeType":"ElementaryTypeName","src":"63741:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14616,"nodeType":"ArrayTypeName","src":"63741:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":14620,"mutability":"mutable","name":"right","nameLocation":"63785:5:14","nodeType":"VariableDeclaration","scope":14623,"src":"63766:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14618,"name":"uint256","nodeType":"ElementaryTypeName","src":"63766:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14619,"nodeType":"ArrayTypeName","src":"63766:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"63740:51:14"},"returnParameters":{"id":14622,"nodeType":"ParameterList","parameters":[],"src":"63805:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14635,"nodeType":"FunctionDefinition","src":"63936:109:14","nodes":[],"documentation":{"id":14624,"nodeType":"StructuredDocumentation","src":"63812:119:14","text":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"9a7fbd8f","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"63945:11:14","parameters":{"id":14633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14627,"mutability":"mutable","name":"left","nameLocation":"63976:4:14","nodeType":"VariableDeclaration","scope":14635,"src":"63957:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14625,"name":"uint256","nodeType":"ElementaryTypeName","src":"63957:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14626,"nodeType":"ArrayTypeName","src":"63957:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":14630,"mutability":"mutable","name":"right","nameLocation":"64001:5:14","nodeType":"VariableDeclaration","scope":14635,"src":"63982:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14628,"name":"uint256","nodeType":"ElementaryTypeName","src":"63982:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14629,"nodeType":"ArrayTypeName","src":"63982:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":14632,"mutability":"mutable","name":"error","nameLocation":"64024:5:14","nodeType":"VariableDeclaration","scope":14635,"src":"64008:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14631,"name":"string","nodeType":"ElementaryTypeName","src":"64008:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63956:74:14"},"returnParameters":{"id":14634,"nodeType":"ParameterList","parameters":[],"src":"64044:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14645,"nodeType":"FunctionDefinition","src":"64117:84:14","nodes":[],"documentation":{"id":14636,"nodeType":"StructuredDocumentation","src":"64051:61:14","text":"Asserts that two arrays of `int256` values are not equal."},"functionSelector":"0b72f4ef","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64126:11:14","parameters":{"id":14643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14639,"mutability":"mutable","name":"left","nameLocation":"64156:4:14","nodeType":"VariableDeclaration","scope":14645,"src":"64138:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14637,"name":"int256","nodeType":"ElementaryTypeName","src":"64138:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14638,"nodeType":"ArrayTypeName","src":"64138:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":14642,"mutability":"mutable","name":"right","nameLocation":"64180:5:14","nodeType":"VariableDeclaration","scope":14645,"src":"64162:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14640,"name":"int256","nodeType":"ElementaryTypeName","src":"64162:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14641,"nodeType":"ArrayTypeName","src":"64162:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"64137:49:14"},"returnParameters":{"id":14644,"nodeType":"ParameterList","parameters":[],"src":"64200:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14657,"nodeType":"FunctionDefinition","src":"64330:107:14","nodes":[],"documentation":{"id":14646,"nodeType":"StructuredDocumentation","src":"64207:118:14","text":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"d3977322","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64339:11:14","parameters":{"id":14655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14649,"mutability":"mutable","name":"left","nameLocation":"64369:4:14","nodeType":"VariableDeclaration","scope":14657,"src":"64351:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14647,"name":"int256","nodeType":"ElementaryTypeName","src":"64351:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14648,"nodeType":"ArrayTypeName","src":"64351:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":14652,"mutability":"mutable","name":"right","nameLocation":"64393:5:14","nodeType":"VariableDeclaration","scope":14657,"src":"64375:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14650,"name":"int256","nodeType":"ElementaryTypeName","src":"64375:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14651,"nodeType":"ArrayTypeName","src":"64375:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":14654,"mutability":"mutable","name":"error","nameLocation":"64416:5:14","nodeType":"VariableDeclaration","scope":14657,"src":"64400:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14653,"name":"string","nodeType":"ElementaryTypeName","src":"64400:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64350:72:14"},"returnParameters":{"id":14656,"nodeType":"ParameterList","parameters":[],"src":"64436:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14665,"nodeType":"FunctionDefinition","src":"64500:64:14","nodes":[],"documentation":{"id":14658,"nodeType":"StructuredDocumentation","src":"64443:52:14","text":"Asserts that two `uint256` values are not equal."},"functionSelector":"b7909320","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64509:11:14","parameters":{"id":14663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14660,"mutability":"mutable","name":"left","nameLocation":"64529:4:14","nodeType":"VariableDeclaration","scope":14665,"src":"64521:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14659,"name":"uint256","nodeType":"ElementaryTypeName","src":"64521:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14662,"mutability":"mutable","name":"right","nameLocation":"64543:5:14","nodeType":"VariableDeclaration","scope":14665,"src":"64535:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14661,"name":"uint256","nodeType":"ElementaryTypeName","src":"64535:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64520:29:14"},"returnParameters":{"id":14664,"nodeType":"ParameterList","parameters":[],"src":"64563:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14675,"nodeType":"FunctionDefinition","src":"64637:86:14","nodes":[],"documentation":{"id":14666,"nodeType":"StructuredDocumentation","src":"64570:62:14","text":"Asserts that two arrays of `address` values are not equal."},"functionSelector":"46d0b252","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64646:11:14","parameters":{"id":14673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14669,"mutability":"mutable","name":"left","nameLocation":"64677:4:14","nodeType":"VariableDeclaration","scope":14675,"src":"64658:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14667,"name":"address","nodeType":"ElementaryTypeName","src":"64658:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14668,"nodeType":"ArrayTypeName","src":"64658:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":14672,"mutability":"mutable","name":"right","nameLocation":"64702:5:14","nodeType":"VariableDeclaration","scope":14675,"src":"64683:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14670,"name":"address","nodeType":"ElementaryTypeName","src":"64683:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14671,"nodeType":"ArrayTypeName","src":"64683:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"64657:51:14"},"returnParameters":{"id":14674,"nodeType":"ParameterList","parameters":[],"src":"64722:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14687,"nodeType":"FunctionDefinition","src":"64853:109:14","nodes":[],"documentation":{"id":14676,"nodeType":"StructuredDocumentation","src":"64729:119:14","text":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"72c7e0b5","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64862:11:14","parameters":{"id":14685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14679,"mutability":"mutable","name":"left","nameLocation":"64893:4:14","nodeType":"VariableDeclaration","scope":14687,"src":"64874:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14677,"name":"address","nodeType":"ElementaryTypeName","src":"64874:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14678,"nodeType":"ArrayTypeName","src":"64874:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":14682,"mutability":"mutable","name":"right","nameLocation":"64918:5:14","nodeType":"VariableDeclaration","scope":14687,"src":"64899:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14680,"name":"address","nodeType":"ElementaryTypeName","src":"64899:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14681,"nodeType":"ArrayTypeName","src":"64899:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":14684,"mutability":"mutable","name":"error","nameLocation":"64941:5:14","nodeType":"VariableDeclaration","scope":14687,"src":"64925:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14683,"name":"string","nodeType":"ElementaryTypeName","src":"64925:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64873:74:14"},"returnParameters":{"id":14686,"nodeType":"ParameterList","parameters":[],"src":"64961:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14697,"nodeType":"FunctionDefinition","src":"65035:86:14","nodes":[],"documentation":{"id":14688,"nodeType":"StructuredDocumentation","src":"64968:62:14","text":"Asserts that two arrays of `bytes32` values are not equal."},"functionSelector":"0603ea68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65044:11:14","parameters":{"id":14695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14691,"mutability":"mutable","name":"left","nameLocation":"65075:4:14","nodeType":"VariableDeclaration","scope":14697,"src":"65056:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14689,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65056:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14690,"nodeType":"ArrayTypeName","src":"65056:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14694,"mutability":"mutable","name":"right","nameLocation":"65100:5:14","nodeType":"VariableDeclaration","scope":14697,"src":"65081:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14692,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65081:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14693,"nodeType":"ArrayTypeName","src":"65081:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"65055:51:14"},"returnParameters":{"id":14696,"nodeType":"ParameterList","parameters":[],"src":"65120:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14709,"nodeType":"FunctionDefinition","src":"65251:109:14","nodes":[],"documentation":{"id":14698,"nodeType":"StructuredDocumentation","src":"65127:119:14","text":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b873634c","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65260:11:14","parameters":{"id":14707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14701,"mutability":"mutable","name":"left","nameLocation":"65291:4:14","nodeType":"VariableDeclaration","scope":14709,"src":"65272:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14699,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65272:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14700,"nodeType":"ArrayTypeName","src":"65272:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14704,"mutability":"mutable","name":"right","nameLocation":"65316:5:14","nodeType":"VariableDeclaration","scope":14709,"src":"65297:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14702,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65297:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14703,"nodeType":"ArrayTypeName","src":"65297:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14706,"mutability":"mutable","name":"error","nameLocation":"65339:5:14","nodeType":"VariableDeclaration","scope":14709,"src":"65323:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14705,"name":"string","nodeType":"ElementaryTypeName","src":"65323:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65271:74:14"},"returnParameters":{"id":14708,"nodeType":"ParameterList","parameters":[],"src":"65359:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14719,"nodeType":"FunctionDefinition","src":"65432:84:14","nodes":[],"documentation":{"id":14710,"nodeType":"StructuredDocumentation","src":"65366:61:14","text":"Asserts that two arrays of `string` values are not equal."},"functionSelector":"bdfacbe8","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65441:11:14","parameters":{"id":14717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14713,"mutability":"mutable","name":"left","nameLocation":"65471:4:14","nodeType":"VariableDeclaration","scope":14719,"src":"65453:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14711,"name":"string","nodeType":"ElementaryTypeName","src":"65453:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14712,"nodeType":"ArrayTypeName","src":"65453:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":14716,"mutability":"mutable","name":"right","nameLocation":"65495:5:14","nodeType":"VariableDeclaration","scope":14719,"src":"65477:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14714,"name":"string","nodeType":"ElementaryTypeName","src":"65477:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14715,"nodeType":"ArrayTypeName","src":"65477:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"65452:49:14"},"returnParameters":{"id":14718,"nodeType":"ParameterList","parameters":[],"src":"65515:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14731,"nodeType":"FunctionDefinition","src":"65645:107:14","nodes":[],"documentation":{"id":14720,"nodeType":"StructuredDocumentation","src":"65522:118:14","text":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"b67187f3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65654:11:14","parameters":{"id":14729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14723,"mutability":"mutable","name":"left","nameLocation":"65684:4:14","nodeType":"VariableDeclaration","scope":14731,"src":"65666:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14721,"name":"string","nodeType":"ElementaryTypeName","src":"65666:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14722,"nodeType":"ArrayTypeName","src":"65666:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":14726,"mutability":"mutable","name":"right","nameLocation":"65708:5:14","nodeType":"VariableDeclaration","scope":14731,"src":"65690:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14724,"name":"string","nodeType":"ElementaryTypeName","src":"65690:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14725,"nodeType":"ArrayTypeName","src":"65690:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":14728,"mutability":"mutable","name":"error","nameLocation":"65731:5:14","nodeType":"VariableDeclaration","scope":14731,"src":"65715:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14727,"name":"string","nodeType":"ElementaryTypeName","src":"65715:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65665:72:14"},"returnParameters":{"id":14730,"nodeType":"ParameterList","parameters":[],"src":"65751:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14741,"nodeType":"FunctionDefinition","src":"65823:82:14","nodes":[],"documentation":{"id":14732,"nodeType":"StructuredDocumentation","src":"65758:60:14","text":"Asserts that two arrays of `bytes` values are not equal."},"functionSelector":"edecd035","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65832:11:14","parameters":{"id":14739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14735,"mutability":"mutable","name":"left","nameLocation":"65861:4:14","nodeType":"VariableDeclaration","scope":14741,"src":"65844:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14733,"name":"bytes","nodeType":"ElementaryTypeName","src":"65844:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14734,"nodeType":"ArrayTypeName","src":"65844:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":14738,"mutability":"mutable","name":"right","nameLocation":"65884:5:14","nodeType":"VariableDeclaration","scope":14741,"src":"65867:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14736,"name":"bytes","nodeType":"ElementaryTypeName","src":"65867:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14737,"nodeType":"ArrayTypeName","src":"65867:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"65843:47:14"},"returnParameters":{"id":14740,"nodeType":"ParameterList","parameters":[],"src":"65904:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14753,"nodeType":"FunctionDefinition","src":"66033:105:14","nodes":[],"documentation":{"id":14742,"nodeType":"StructuredDocumentation","src":"65911:117:14","text":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"1dcd1f68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66042:11:14","parameters":{"id":14751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14745,"mutability":"mutable","name":"left","nameLocation":"66071:4:14","nodeType":"VariableDeclaration","scope":14753,"src":"66054:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14743,"name":"bytes","nodeType":"ElementaryTypeName","src":"66054:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14744,"nodeType":"ArrayTypeName","src":"66054:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":14748,"mutability":"mutable","name":"right","nameLocation":"66094:5:14","nodeType":"VariableDeclaration","scope":14753,"src":"66077:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14746,"name":"bytes","nodeType":"ElementaryTypeName","src":"66077:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14747,"nodeType":"ArrayTypeName","src":"66077:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":14750,"mutability":"mutable","name":"error","nameLocation":"66117:5:14","nodeType":"VariableDeclaration","scope":14753,"src":"66101:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14749,"name":"string","nodeType":"ElementaryTypeName","src":"66101:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66053:70:14"},"returnParameters":{"id":14752,"nodeType":"ParameterList","parameters":[],"src":"66137:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14763,"nodeType":"FunctionDefinition","src":"66258:87:14","nodes":[],"documentation":{"id":14754,"nodeType":"StructuredDocumentation","src":"66144:109:14","text":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"98f9bdbd","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66267:11:14","parameters":{"id":14761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14756,"mutability":"mutable","name":"left","nameLocation":"66287:4:14","nodeType":"VariableDeclaration","scope":14763,"src":"66279:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14755,"name":"uint256","nodeType":"ElementaryTypeName","src":"66279:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14758,"mutability":"mutable","name":"right","nameLocation":"66301:5:14","nodeType":"VariableDeclaration","scope":14763,"src":"66293:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14757,"name":"uint256","nodeType":"ElementaryTypeName","src":"66293:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14760,"mutability":"mutable","name":"error","nameLocation":"66324:5:14","nodeType":"VariableDeclaration","scope":14763,"src":"66308:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14759,"name":"string","nodeType":"ElementaryTypeName","src":"66308:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66278:52:14"},"returnParameters":{"id":14762,"nodeType":"ParameterList","parameters":[],"src":"66344:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14771,"nodeType":"FunctionDefinition","src":"66407:62:14","nodes":[],"documentation":{"id":14764,"nodeType":"StructuredDocumentation","src":"66351:51:14","text":"Asserts that two `int256` values are not equal."},"functionSelector":"f4c004e3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66416:11:14","parameters":{"id":14769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14766,"mutability":"mutable","name":"left","nameLocation":"66435:4:14","nodeType":"VariableDeclaration","scope":14771,"src":"66428:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14765,"name":"int256","nodeType":"ElementaryTypeName","src":"66428:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14768,"mutability":"mutable","name":"right","nameLocation":"66448:5:14","nodeType":"VariableDeclaration","scope":14771,"src":"66441:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14767,"name":"int256","nodeType":"ElementaryTypeName","src":"66441:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"66427:27:14"},"returnParameters":{"id":14770,"nodeType":"ParameterList","parameters":[],"src":"66468:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14781,"nodeType":"FunctionDefinition","src":"66588:85:14","nodes":[],"documentation":{"id":14772,"nodeType":"StructuredDocumentation","src":"66475:108:14","text":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"4724c5b9","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66597:11:14","parameters":{"id":14779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14774,"mutability":"mutable","name":"left","nameLocation":"66616:4:14","nodeType":"VariableDeclaration","scope":14781,"src":"66609:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14773,"name":"int256","nodeType":"ElementaryTypeName","src":"66609:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14776,"mutability":"mutable","name":"right","nameLocation":"66629:5:14","nodeType":"VariableDeclaration","scope":14781,"src":"66622:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14775,"name":"int256","nodeType":"ElementaryTypeName","src":"66622:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14778,"mutability":"mutable","name":"error","nameLocation":"66652:5:14","nodeType":"VariableDeclaration","scope":14781,"src":"66636:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14777,"name":"string","nodeType":"ElementaryTypeName","src":"66636:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66608:50:14"},"returnParameters":{"id":14780,"nodeType":"ParameterList","parameters":[],"src":"66672:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14789,"nodeType":"FunctionDefinition","src":"66736:64:14","nodes":[],"documentation":{"id":14782,"nodeType":"StructuredDocumentation","src":"66679:52:14","text":"Asserts that two `address` values are not equal."},"functionSelector":"b12e1694","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66745:11:14","parameters":{"id":14787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14784,"mutability":"mutable","name":"left","nameLocation":"66765:4:14","nodeType":"VariableDeclaration","scope":14789,"src":"66757:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14783,"name":"address","nodeType":"ElementaryTypeName","src":"66757:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14786,"mutability":"mutable","name":"right","nameLocation":"66779:5:14","nodeType":"VariableDeclaration","scope":14789,"src":"66771:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14785,"name":"address","nodeType":"ElementaryTypeName","src":"66771:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"66756:29:14"},"returnParameters":{"id":14788,"nodeType":"ParameterList","parameters":[],"src":"66799:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14799,"nodeType":"FunctionDefinition","src":"66920:87:14","nodes":[],"documentation":{"id":14790,"nodeType":"StructuredDocumentation","src":"66806:109:14","text":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"8775a591","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66929:11:14","parameters":{"id":14797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14792,"mutability":"mutable","name":"left","nameLocation":"66949:4:14","nodeType":"VariableDeclaration","scope":14799,"src":"66941:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14791,"name":"address","nodeType":"ElementaryTypeName","src":"66941:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14794,"mutability":"mutable","name":"right","nameLocation":"66963:5:14","nodeType":"VariableDeclaration","scope":14799,"src":"66955:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14793,"name":"address","nodeType":"ElementaryTypeName","src":"66955:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14796,"mutability":"mutable","name":"error","nameLocation":"66986:5:14","nodeType":"VariableDeclaration","scope":14799,"src":"66970:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14795,"name":"string","nodeType":"ElementaryTypeName","src":"66970:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66940:52:14"},"returnParameters":{"id":14798,"nodeType":"ParameterList","parameters":[],"src":"67006:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14807,"nodeType":"FunctionDefinition","src":"67070:64:14","nodes":[],"documentation":{"id":14800,"nodeType":"StructuredDocumentation","src":"67013:52:14","text":"Asserts that two `bytes32` values are not equal."},"functionSelector":"898e83fc","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"67079:11:14","parameters":{"id":14805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14802,"mutability":"mutable","name":"left","nameLocation":"67099:4:14","nodeType":"VariableDeclaration","scope":14807,"src":"67091:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14801,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67091:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14804,"mutability":"mutable","name":"right","nameLocation":"67113:5:14","nodeType":"VariableDeclaration","scope":14807,"src":"67105:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14803,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67105:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"67090:29:14"},"returnParameters":{"id":14806,"nodeType":"ParameterList","parameters":[],"src":"67133:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14817,"nodeType":"FunctionDefinition","src":"67254:87:14","nodes":[],"documentation":{"id":14808,"nodeType":"StructuredDocumentation","src":"67140:109:14","text":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b2332f51","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"67263:11:14","parameters":{"id":14815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14810,"mutability":"mutable","name":"left","nameLocation":"67283:4:14","nodeType":"VariableDeclaration","scope":14817,"src":"67275:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14809,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67275:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14812,"mutability":"mutable","name":"right","nameLocation":"67297:5:14","nodeType":"VariableDeclaration","scope":14817,"src":"67289:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14811,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67289:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14814,"mutability":"mutable","name":"error","nameLocation":"67320:5:14","nodeType":"VariableDeclaration","scope":14817,"src":"67304:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14813,"name":"string","nodeType":"ElementaryTypeName","src":"67304:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67274:52:14"},"returnParameters":{"id":14816,"nodeType":"ParameterList","parameters":[],"src":"67340:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14823,"nodeType":"FunctionDefinition","src":"67397:50:14","nodes":[],"documentation":{"id":14818,"nodeType":"StructuredDocumentation","src":"67347:45:14","text":"Asserts that the given condition is true."},"functionSelector":"0c9fd581","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"67406:10:14","parameters":{"id":14821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14820,"mutability":"mutable","name":"condition","nameLocation":"67422:9:14","nodeType":"VariableDeclaration","scope":14823,"src":"67417:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14819,"name":"bool","nodeType":"ElementaryTypeName","src":"67417:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"67416:16:14"},"returnParameters":{"id":14822,"nodeType":"ParameterList","parameters":[],"src":"67446:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14831,"nodeType":"FunctionDefinition","src":"67560:73:14","nodes":[],"documentation":{"id":14824,"nodeType":"StructuredDocumentation","src":"67453:102:14","text":"Asserts that the given condition is true and includes error message into revert string on failure."},"functionSelector":"a34edc03","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"67569:10:14","parameters":{"id":14829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14826,"mutability":"mutable","name":"condition","nameLocation":"67585:9:14","nodeType":"VariableDeclaration","scope":14831,"src":"67580:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14825,"name":"bool","nodeType":"ElementaryTypeName","src":"67580:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14828,"mutability":"mutable","name":"error","nameLocation":"67612:5:14","nodeType":"VariableDeclaration","scope":14831,"src":"67596:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14827,"name":"string","nodeType":"ElementaryTypeName","src":"67596:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67579:39:14"},"returnParameters":{"id":14830,"nodeType":"ParameterList","parameters":[],"src":"67632:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14837,"nodeType":"FunctionDefinition","src":"67728:46:14","nodes":[],"documentation":{"id":14832,"nodeType":"StructuredDocumentation","src":"67639:84:14","text":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"functionSelector":"4c63e562","implemented":false,"kind":"function","modifiers":[],"name":"assume","nameLocation":"67737:6:14","parameters":{"id":14835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14834,"mutability":"mutable","name":"condition","nameLocation":"67749:9:14","nodeType":"VariableDeclaration","scope":14837,"src":"67744:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14833,"name":"bool","nodeType":"ElementaryTypeName","src":"67744:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"67743:16:14"},"returnParameters":{"id":14836,"nodeType":"ParameterList","parameters":[],"src":"67773:0:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14843,"nodeType":"FunctionDefinition","src":"67836:51:14","nodes":[],"documentation":{"id":14838,"nodeType":"StructuredDocumentation","src":"67780:51:14","text":"Writes a breakpoint to jump to in the debugger."},"functionSelector":"f0259e92","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"67845:10:14","parameters":{"id":14841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14840,"mutability":"mutable","name":"char","nameLocation":"67872:4:14","nodeType":"VariableDeclaration","scope":14843,"src":"67856:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14839,"name":"string","nodeType":"ElementaryTypeName","src":"67856:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67855:22:14"},"returnParameters":{"id":14842,"nodeType":"ParameterList","parameters":[],"src":"67886:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14851,"nodeType":"FunctionDefinition","src":"67961:63:14","nodes":[],"documentation":{"id":14844,"nodeType":"StructuredDocumentation","src":"67893:63:14","text":"Writes a conditional breakpoint to jump to in the debugger."},"functionSelector":"f7d39a8d","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"67970:10:14","parameters":{"id":14849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14846,"mutability":"mutable","name":"char","nameLocation":"67997:4:14","nodeType":"VariableDeclaration","scope":14851,"src":"67981:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14845,"name":"string","nodeType":"ElementaryTypeName","src":"67981:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14848,"mutability":"mutable","name":"value","nameLocation":"68008:5:14","nodeType":"VariableDeclaration","scope":14851,"src":"68003:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14847,"name":"bool","nodeType":"ElementaryTypeName","src":"68003:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"67980:34:14"},"returnParameters":{"id":14850,"nodeType":"ParameterList","parameters":[],"src":"68023:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14859,"nodeType":"FunctionDefinition","src":"68079:85:14","nodes":[],"documentation":{"id":14852,"nodeType":"StructuredDocumentation","src":"68030:44:14","text":"Returns the RPC url for the given alias."},"functionSelector":"975a6ce9","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrl","nameLocation":"68088:6:14","parameters":{"id":14855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14854,"mutability":"mutable","name":"rpcAlias","nameLocation":"68111:8:14","nodeType":"VariableDeclaration","scope":14859,"src":"68095:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14853,"name":"string","nodeType":"ElementaryTypeName","src":"68095:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68094:26:14"},"returnParameters":{"id":14858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14857,"mutability":"mutable","name":"json","nameLocation":"68158:4:14","nodeType":"VariableDeclaration","scope":14859,"src":"68144:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14856,"name":"string","nodeType":"ElementaryTypeName","src":"68144:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68143:20:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14867,"nodeType":"FunctionDefinition","src":"68229:67:14","nodes":[],"documentation":{"id":14860,"nodeType":"StructuredDocumentation","src":"68170:54:14","text":"Returns all rpc urls and their aliases as structs."},"functionSelector":"9d2ad72a","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrlStructs","nameLocation":"68238:13:14","parameters":{"id":14861,"nodeType":"ParameterList","parameters":[],"src":"68251:2:14"},"returnParameters":{"id":14866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14865,"mutability":"mutable","name":"urls","nameLocation":"68290:4:14","nodeType":"VariableDeclaration","scope":14867,"src":"68277:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$12122_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Rpc[]"},"typeName":{"baseType":{"id":14863,"nodeType":"UserDefinedTypeName","pathNode":{"id":14862,"name":"Rpc","nameLocations":["68277:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":12122,"src":"68277:3:14"},"referencedDeclaration":12122,"src":"68277:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Rpc_$12122_storage_ptr","typeString":"struct VmSafe.Rpc"}},"id":14864,"nodeType":"ArrayTypeName","src":"68277:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$12122_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Rpc[]"}},"visibility":"internal"}],"src":"68276:19:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14876,"nodeType":"FunctionDefinition","src":"68367:67:14","nodes":[],"documentation":{"id":14868,"nodeType":"StructuredDocumentation","src":"68302:60:14","text":"Returns all rpc urls and their aliases `[alias, url][]`."},"functionSelector":"a85a8418","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrls","nameLocation":"68376:7:14","parameters":{"id":14869,"nodeType":"ParameterList","parameters":[],"src":"68383:2:14"},"returnParameters":{"id":14875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14874,"mutability":"mutable","name":"urls","nameLocation":"68428:4:14","nodeType":"VariableDeclaration","scope":14876,"src":"68409:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_memory_ptr_$2_memory_ptr_$dyn_memory_ptr","typeString":"string[2][]"},"typeName":{"baseType":{"baseType":{"id":14870,"name":"string","nodeType":"ElementaryTypeName","src":"68409:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14872,"length":{"hexValue":"32","id":14871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"68416:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"68409:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage_ptr","typeString":"string[2]"}},"id":14873,"nodeType":"ArrayTypeName","src":"68409:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$2_storage_$dyn_storage_ptr","typeString":"string[2][]"}},"visibility":"internal"}],"src":"68408:25:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14882,"nodeType":"FunctionDefinition","src":"68515:42:14","nodes":[],"documentation":{"id":14877,"nodeType":"StructuredDocumentation","src":"68440:70:14","text":"Suspends execution of the main thread for `duration` milliseconds."},"functionSelector":"fa9d8713","implemented":false,"kind":"function","modifiers":[],"name":"sleep","nameLocation":"68524:5:14","parameters":{"id":14880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14879,"mutability":"mutable","name":"duration","nameLocation":"68538:8:14","nodeType":"VariableDeclaration","scope":14882,"src":"68530:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14878,"name":"uint256","nodeType":"ElementaryTypeName","src":"68530:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"68529:18:14"},"returnParameters":{"id":14881,"nodeType":"ParameterList","parameters":[],"src":"68556:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14892,"nodeType":"FunctionDefinition","src":"68642:95:14","nodes":[],"documentation":{"id":14883,"nodeType":"StructuredDocumentation","src":"68594:43:14","text":"Checks if `key` exists in a TOML table."},"functionSelector":"600903ad","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsToml","nameLocation":"68651:13:14","parameters":{"id":14888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14885,"mutability":"mutable","name":"toml","nameLocation":"68681:4:14","nodeType":"VariableDeclaration","scope":14892,"src":"68665:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14884,"name":"string","nodeType":"ElementaryTypeName","src":"68665:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14887,"mutability":"mutable","name":"key","nameLocation":"68703:3:14","nodeType":"VariableDeclaration","scope":14892,"src":"68687:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14886,"name":"string","nodeType":"ElementaryTypeName","src":"68687:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68664:43:14"},"returnParameters":{"id":14891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14892,"src":"68731:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14889,"name":"bool","nodeType":"ElementaryTypeName","src":"68731:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"68730:6:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14902,"nodeType":"FunctionDefinition","src":"68818:101:14","nodes":[],"documentation":{"id":14893,"nodeType":"StructuredDocumentation","src":"68743:70:14","text":"Parses a string of TOML data at `key` and coerces it to `address`."},"functionSelector":"65e7c844","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddress","nameLocation":"68827:16:14","parameters":{"id":14898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14895,"mutability":"mutable","name":"toml","nameLocation":"68860:4:14","nodeType":"VariableDeclaration","scope":14902,"src":"68844:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14894,"name":"string","nodeType":"ElementaryTypeName","src":"68844:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14897,"mutability":"mutable","name":"key","nameLocation":"68882:3:14","nodeType":"VariableDeclaration","scope":14902,"src":"68866:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14896,"name":"string","nodeType":"ElementaryTypeName","src":"68866:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68843:43:14"},"returnParameters":{"id":14901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14902,"src":"68910:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14899,"name":"address","nodeType":"ElementaryTypeName","src":"68910:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"68909:9:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14913,"nodeType":"FunctionDefinition","src":"69002:139:14","nodes":[],"documentation":{"id":14903,"nodeType":"StructuredDocumentation","src":"68925:72:14","text":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"functionSelector":"65c428e7","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddressArray","nameLocation":"69011:21:14","parameters":{"id":14908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14905,"mutability":"mutable","name":"toml","nameLocation":"69049:4:14","nodeType":"VariableDeclaration","scope":14913,"src":"69033:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14904,"name":"string","nodeType":"ElementaryTypeName","src":"69033:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14907,"mutability":"mutable","name":"key","nameLocation":"69071:3:14","nodeType":"VariableDeclaration","scope":14913,"src":"69055:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14906,"name":"string","nodeType":"ElementaryTypeName","src":"69055:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69032:43:14"},"returnParameters":{"id":14912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14913,"src":"69123:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14909,"name":"address","nodeType":"ElementaryTypeName","src":"69123:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14910,"nodeType":"ArrayTypeName","src":"69123:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"69122:18:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14923,"nodeType":"FunctionDefinition","src":"69219:95:14","nodes":[],"documentation":{"id":14914,"nodeType":"StructuredDocumentation","src":"69147:67:14","text":"Parses a string of TOML data at `key` and coerces it to `bool`."},"functionSelector":"d30dced6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBool","nameLocation":"69228:13:14","parameters":{"id":14919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14916,"mutability":"mutable","name":"toml","nameLocation":"69258:4:14","nodeType":"VariableDeclaration","scope":14923,"src":"69242:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14915,"name":"string","nodeType":"ElementaryTypeName","src":"69242:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14918,"mutability":"mutable","name":"key","nameLocation":"69280:3:14","nodeType":"VariableDeclaration","scope":14923,"src":"69264:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14917,"name":"string","nodeType":"ElementaryTypeName","src":"69264:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69241:43:14"},"returnParameters":{"id":14922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14923,"src":"69308:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14920,"name":"bool","nodeType":"ElementaryTypeName","src":"69308:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"69307:6:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14934,"nodeType":"FunctionDefinition","src":"69394:109:14","nodes":[],"documentation":{"id":14924,"nodeType":"StructuredDocumentation","src":"69320:69:14","text":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"functionSelector":"127cfe9a","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBoolArray","nameLocation":"69403:18:14","parameters":{"id":14929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14926,"mutability":"mutable","name":"toml","nameLocation":"69438:4:14","nodeType":"VariableDeclaration","scope":14934,"src":"69422:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14925,"name":"string","nodeType":"ElementaryTypeName","src":"69422:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14928,"mutability":"mutable","name":"key","nameLocation":"69460:3:14","nodeType":"VariableDeclaration","scope":14934,"src":"69444:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14927,"name":"string","nodeType":"ElementaryTypeName","src":"69444:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69421:43:14"},"returnParameters":{"id":14933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14934,"src":"69488:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14930,"name":"bool","nodeType":"ElementaryTypeName","src":"69488:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14931,"nodeType":"ArrayTypeName","src":"69488:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"69487:15:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14944,"nodeType":"FunctionDefinition","src":"69582:104:14","nodes":[],"documentation":{"id":14935,"nodeType":"StructuredDocumentation","src":"69509:68:14","text":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"functionSelector":"d77bfdb9","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes","nameLocation":"69591:14:14","parameters":{"id":14940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14937,"mutability":"mutable","name":"toml","nameLocation":"69622:4:14","nodeType":"VariableDeclaration","scope":14944,"src":"69606:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14936,"name":"string","nodeType":"ElementaryTypeName","src":"69606:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14939,"mutability":"mutable","name":"key","nameLocation":"69644:3:14","nodeType":"VariableDeclaration","scope":14944,"src":"69628:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14938,"name":"string","nodeType":"ElementaryTypeName","src":"69628:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69605:43:14"},"returnParameters":{"id":14943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14944,"src":"69672:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14941,"name":"bytes","nodeType":"ElementaryTypeName","src":"69672:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"69671:14:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14954,"nodeType":"FunctionDefinition","src":"69767:101:14","nodes":[],"documentation":{"id":14945,"nodeType":"StructuredDocumentation","src":"69692:70:14","text":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"functionSelector":"8e214810","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32","nameLocation":"69776:16:14","parameters":{"id":14950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14947,"mutability":"mutable","name":"toml","nameLocation":"69809:4:14","nodeType":"VariableDeclaration","scope":14954,"src":"69793:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14946,"name":"string","nodeType":"ElementaryTypeName","src":"69793:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14949,"mutability":"mutable","name":"key","nameLocation":"69831:3:14","nodeType":"VariableDeclaration","scope":14954,"src":"69815:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14948,"name":"string","nodeType":"ElementaryTypeName","src":"69815:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69792:43:14"},"returnParameters":{"id":14953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14954,"src":"69859:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14951,"name":"bytes32","nodeType":"ElementaryTypeName","src":"69859:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"69858:9:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14965,"nodeType":"FunctionDefinition","src":"69951:139:14","nodes":[],"documentation":{"id":14955,"nodeType":"StructuredDocumentation","src":"69874:72:14","text":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"functionSelector":"3e716f81","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32Array","nameLocation":"69960:21:14","parameters":{"id":14960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14957,"mutability":"mutable","name":"toml","nameLocation":"69998:4:14","nodeType":"VariableDeclaration","scope":14965,"src":"69982:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14956,"name":"string","nodeType":"ElementaryTypeName","src":"69982:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14959,"mutability":"mutable","name":"key","nameLocation":"70020:3:14","nodeType":"VariableDeclaration","scope":14965,"src":"70004:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14958,"name":"string","nodeType":"ElementaryTypeName","src":"70004:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69981:43:14"},"returnParameters":{"id":14964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14965,"src":"70072:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14961,"name":"bytes32","nodeType":"ElementaryTypeName","src":"70072:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14962,"nodeType":"ArrayTypeName","src":"70072:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"70071:18:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14976,"nodeType":"FunctionDefinition","src":"70171:111:14","nodes":[],"documentation":{"id":14966,"nodeType":"StructuredDocumentation","src":"70096:70:14","text":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"functionSelector":"b197c247","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytesArray","nameLocation":"70180:19:14","parameters":{"id":14971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14968,"mutability":"mutable","name":"toml","nameLocation":"70216:4:14","nodeType":"VariableDeclaration","scope":14976,"src":"70200:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14967,"name":"string","nodeType":"ElementaryTypeName","src":"70200:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14970,"mutability":"mutable","name":"key","nameLocation":"70238:3:14","nodeType":"VariableDeclaration","scope":14976,"src":"70222:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14969,"name":"string","nodeType":"ElementaryTypeName","src":"70222:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70199:43:14"},"returnParameters":{"id":14975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14976,"src":"70266:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14972,"name":"bytes","nodeType":"ElementaryTypeName","src":"70266:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14973,"nodeType":"ArrayTypeName","src":"70266:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"70265:16:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14986,"nodeType":"FunctionDefinition","src":"70362:96:14","nodes":[],"documentation":{"id":14977,"nodeType":"StructuredDocumentation","src":"70288:69:14","text":"Parses a string of TOML data at `key` and coerces it to `int256`."},"functionSelector":"c1350739","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlInt","nameLocation":"70371:12:14","parameters":{"id":14982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14979,"mutability":"mutable","name":"toml","nameLocation":"70400:4:14","nodeType":"VariableDeclaration","scope":14986,"src":"70384:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14978,"name":"string","nodeType":"ElementaryTypeName","src":"70384:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14981,"mutability":"mutable","name":"key","nameLocation":"70422:3:14","nodeType":"VariableDeclaration","scope":14986,"src":"70406:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14980,"name":"string","nodeType":"ElementaryTypeName","src":"70406:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70383:43:14"},"returnParameters":{"id":14985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14986,"src":"70450:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14983,"name":"int256","nodeType":"ElementaryTypeName","src":"70450:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"70449:8:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14997,"nodeType":"FunctionDefinition","src":"70540:110:14","nodes":[],"documentation":{"id":14987,"nodeType":"StructuredDocumentation","src":"70464:71:14","text":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"functionSelector":"d3522ae6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlIntArray","nameLocation":"70549:17:14","parameters":{"id":14992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14989,"mutability":"mutable","name":"toml","nameLocation":"70583:4:14","nodeType":"VariableDeclaration","scope":14997,"src":"70567:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14988,"name":"string","nodeType":"ElementaryTypeName","src":"70567:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14991,"mutability":"mutable","name":"key","nameLocation":"70605:3:14","nodeType":"VariableDeclaration","scope":14997,"src":"70589:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14990,"name":"string","nodeType":"ElementaryTypeName","src":"70589:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70566:43:14"},"returnParameters":{"id":14996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14997,"src":"70633:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14993,"name":"int256","nodeType":"ElementaryTypeName","src":"70633:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14994,"nodeType":"ArrayTypeName","src":"70633:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"70632:17:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15008,"nodeType":"FunctionDefinition","src":"70714:111:14","nodes":[],"documentation":{"id":14998,"nodeType":"StructuredDocumentation","src":"70656:53:14","text":"Returns an array of all the keys in a TOML table."},"functionSelector":"812a44b2","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlKeys","nameLocation":"70723:13:14","parameters":{"id":15003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15000,"mutability":"mutable","name":"toml","nameLocation":"70753:4:14","nodeType":"VariableDeclaration","scope":15008,"src":"70737:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14999,"name":"string","nodeType":"ElementaryTypeName","src":"70737:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15002,"mutability":"mutable","name":"key","nameLocation":"70775:3:14","nodeType":"VariableDeclaration","scope":15008,"src":"70759:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15001,"name":"string","nodeType":"ElementaryTypeName","src":"70759:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70736:43:14"},"returnParameters":{"id":15007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15006,"mutability":"mutable","name":"keys","nameLocation":"70819:4:14","nodeType":"VariableDeclaration","scope":15008,"src":"70803:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15004,"name":"string","nodeType":"ElementaryTypeName","src":"70803:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15005,"nodeType":"ArrayTypeName","src":"70803:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"70802:22:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15018,"nodeType":"FunctionDefinition","src":"70905:106:14","nodes":[],"documentation":{"id":15009,"nodeType":"StructuredDocumentation","src":"70831:69:14","text":"Parses a string of TOML data at `key` and coerces it to `string`."},"functionSelector":"8bb8dd43","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlString","nameLocation":"70914:15:14","parameters":{"id":15014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15011,"mutability":"mutable","name":"toml","nameLocation":"70946:4:14","nodeType":"VariableDeclaration","scope":15018,"src":"70930:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15010,"name":"string","nodeType":"ElementaryTypeName","src":"70930:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15013,"mutability":"mutable","name":"key","nameLocation":"70968:3:14","nodeType":"VariableDeclaration","scope":15018,"src":"70952:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15012,"name":"string","nodeType":"ElementaryTypeName","src":"70952:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70929:43:14"},"returnParameters":{"id":15017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15018,"src":"70996:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15015,"name":"string","nodeType":"ElementaryTypeName","src":"70996:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70995:15:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15029,"nodeType":"FunctionDefinition","src":"71093:113:14","nodes":[],"documentation":{"id":15019,"nodeType":"StructuredDocumentation","src":"71017:71:14","text":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"functionSelector":"9f629281","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlStringArray","nameLocation":"71102:20:14","parameters":{"id":15024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15021,"mutability":"mutable","name":"toml","nameLocation":"71139:4:14","nodeType":"VariableDeclaration","scope":15029,"src":"71123:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15020,"name":"string","nodeType":"ElementaryTypeName","src":"71123:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15023,"mutability":"mutable","name":"key","nameLocation":"71161:3:14","nodeType":"VariableDeclaration","scope":15029,"src":"71145:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15022,"name":"string","nodeType":"ElementaryTypeName","src":"71145:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71122:43:14"},"returnParameters":{"id":15028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15029,"src":"71189:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15025,"name":"string","nodeType":"ElementaryTypeName","src":"71189:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15026,"nodeType":"ArrayTypeName","src":"71189:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"71188:17:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15039,"nodeType":"FunctionDefinition","src":"71287:98:14","nodes":[],"documentation":{"id":15030,"nodeType":"StructuredDocumentation","src":"71212:70:14","text":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"functionSelector":"cc7b0487","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUint","nameLocation":"71296:13:14","parameters":{"id":15035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15032,"mutability":"mutable","name":"toml","nameLocation":"71326:4:14","nodeType":"VariableDeclaration","scope":15039,"src":"71310:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15031,"name":"string","nodeType":"ElementaryTypeName","src":"71310:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15034,"mutability":"mutable","name":"key","nameLocation":"71348:3:14","nodeType":"VariableDeclaration","scope":15039,"src":"71332:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15033,"name":"string","nodeType":"ElementaryTypeName","src":"71332:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71309:43:14"},"returnParameters":{"id":15038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15039,"src":"71376:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15036,"name":"uint256","nodeType":"ElementaryTypeName","src":"71376:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71375:9:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15050,"nodeType":"FunctionDefinition","src":"71468:112:14","nodes":[],"documentation":{"id":15040,"nodeType":"StructuredDocumentation","src":"71391:72:14","text":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"functionSelector":"b5df27c8","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUintArray","nameLocation":"71477:18:14","parameters":{"id":15045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15042,"mutability":"mutable","name":"toml","nameLocation":"71512:4:14","nodeType":"VariableDeclaration","scope":15050,"src":"71496:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15041,"name":"string","nodeType":"ElementaryTypeName","src":"71496:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15044,"mutability":"mutable","name":"key","nameLocation":"71534:3:14","nodeType":"VariableDeclaration","scope":15050,"src":"71518:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15043,"name":"string","nodeType":"ElementaryTypeName","src":"71518:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71495:43:14"},"returnParameters":{"id":15049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15050,"src":"71562:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15046,"name":"uint256","nodeType":"ElementaryTypeName","src":"71562:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15047,"nodeType":"ArrayTypeName","src":"71562:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"71561:18:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15058,"nodeType":"FunctionDefinition","src":"71620:93:14","nodes":[],"documentation":{"id":15051,"nodeType":"StructuredDocumentation","src":"71586:29:14","text":"ABI-encodes a TOML table."},"functionSelector":"592151f0","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"71629:9:14","parameters":{"id":15054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15053,"mutability":"mutable","name":"toml","nameLocation":"71655:4:14","nodeType":"VariableDeclaration","scope":15058,"src":"71639:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15052,"name":"string","nodeType":"ElementaryTypeName","src":"71639:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71638:22:14"},"returnParameters":{"id":15057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15056,"mutability":"mutable","name":"abiEncodedData","nameLocation":"71697:14:14","nodeType":"VariableDeclaration","scope":15058,"src":"71684:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":15055,"name":"bytes","nodeType":"ElementaryTypeName","src":"71684:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"71683:29:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15068,"nodeType":"FunctionDefinition","src":"71762:114:14","nodes":[],"documentation":{"id":15059,"nodeType":"StructuredDocumentation","src":"71719:38:14","text":"ABI-encodes a TOML table at `key`."},"functionSelector":"37736e08","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"71771:9:14","parameters":{"id":15064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15061,"mutability":"mutable","name":"toml","nameLocation":"71797:4:14","nodeType":"VariableDeclaration","scope":15068,"src":"71781:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15060,"name":"string","nodeType":"ElementaryTypeName","src":"71781:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15063,"mutability":"mutable","name":"key","nameLocation":"71819:3:14","nodeType":"VariableDeclaration","scope":15068,"src":"71803:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15062,"name":"string","nodeType":"ElementaryTypeName","src":"71803:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71780:43:14"},"returnParameters":{"id":15067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15066,"mutability":"mutable","name":"abiEncodedData","nameLocation":"71860:14:14","nodeType":"VariableDeclaration","scope":15068,"src":"71847:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":15065,"name":"bytes","nodeType":"ElementaryTypeName","src":"71847:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"71846:29:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15076,"nodeType":"FunctionDefinition","src":"71969:72:14","nodes":[],"documentation":{"id":15069,"nodeType":"StructuredDocumentation","src":"71882:82:14","text":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"functionSelector":"c0865ba7","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"71978:9:14","parameters":{"id":15074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15071,"mutability":"mutable","name":"json","nameLocation":"72004:4:14","nodeType":"VariableDeclaration","scope":15076,"src":"71988:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15070,"name":"string","nodeType":"ElementaryTypeName","src":"71988:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15073,"mutability":"mutable","name":"path","nameLocation":"72026:4:14","nodeType":"VariableDeclaration","scope":15076,"src":"72010:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15072,"name":"string","nodeType":"ElementaryTypeName","src":"72010:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71987:44:14"},"returnParameters":{"id":15075,"nodeType":"ParameterList","parameters":[],"src":"72040:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15086,"nodeType":"FunctionDefinition","src":"72310:98:14","nodes":[],"documentation":{"id":15077,"nodeType":"StructuredDocumentation","src":"72047:258:14","text":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a TOML file, without having to parse the entire thing."},"functionSelector":"51ac6a33","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"72319:9:14","parameters":{"id":15084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15079,"mutability":"mutable","name":"json","nameLocation":"72345:4:14","nodeType":"VariableDeclaration","scope":15086,"src":"72329:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15078,"name":"string","nodeType":"ElementaryTypeName","src":"72329:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15081,"mutability":"mutable","name":"path","nameLocation":"72367:4:14","nodeType":"VariableDeclaration","scope":15086,"src":"72351:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15080,"name":"string","nodeType":"ElementaryTypeName","src":"72351:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15083,"mutability":"mutable","name":"valueKey","nameLocation":"72389:8:14","nodeType":"VariableDeclaration","scope":15086,"src":"72373:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15082,"name":"string","nodeType":"ElementaryTypeName","src":"72373:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72328:70:14"},"returnParameters":{"id":15085,"nodeType":"ParameterList","parameters":[],"src":"72407:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15098,"nodeType":"FunctionDefinition","src":"72547:141:14","nodes":[],"documentation":{"id":15087,"nodeType":"StructuredDocumentation","src":"72450:92:14","text":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"functionSelector":"d323826a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"72556:21:14","parameters":{"id":15094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15089,"mutability":"mutable","name":"salt","nameLocation":"72586:4:14","nodeType":"VariableDeclaration","scope":15098,"src":"72578:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15088,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72578:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15091,"mutability":"mutable","name":"initCodeHash","nameLocation":"72600:12:14","nodeType":"VariableDeclaration","scope":15098,"src":"72592:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15090,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72592:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15093,"mutability":"mutable","name":"deployer","nameLocation":"72622:8:14","nodeType":"VariableDeclaration","scope":15098,"src":"72614:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15092,"name":"address","nodeType":"ElementaryTypeName","src":"72614:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"72577:54:14"},"returnParameters":{"id":15097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15098,"src":"72679:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15095,"name":"address","nodeType":"ElementaryTypeName","src":"72679:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"72678:9:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15108,"nodeType":"FunctionDefinition","src":"72793:99:14","nodes":[],"documentation":{"id":15099,"nodeType":"StructuredDocumentation","src":"72694:94:14","text":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"functionSelector":"890c283b","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"72802:21:14","parameters":{"id":15104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15101,"mutability":"mutable","name":"salt","nameLocation":"72832:4:14","nodeType":"VariableDeclaration","scope":15108,"src":"72824:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15100,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72824:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15103,"mutability":"mutable","name":"initCodeHash","nameLocation":"72846:12:14","nodeType":"VariableDeclaration","scope":15108,"src":"72838:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15102,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72838:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"72823:36:14"},"returnParameters":{"id":15107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15108,"src":"72883:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15105,"name":"address","nodeType":"ElementaryTypeName","src":"72883:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"72882:9:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15118,"nodeType":"FunctionDefinition","src":"72997:95:14","nodes":[],"documentation":{"id":15109,"nodeType":"StructuredDocumentation","src":"72898:94:14","text":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"functionSelector":"74637a7a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreateAddress","nameLocation":"73006:20:14","parameters":{"id":15114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15111,"mutability":"mutable","name":"deployer","nameLocation":"73035:8:14","nodeType":"VariableDeclaration","scope":15118,"src":"73027:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15110,"name":"address","nodeType":"ElementaryTypeName","src":"73027:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15113,"mutability":"mutable","name":"nonce","nameLocation":"73053:5:14","nodeType":"VariableDeclaration","scope":15118,"src":"73045:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15112,"name":"uint256","nodeType":"ElementaryTypeName","src":"73045:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73026:33:14"},"returnParameters":{"id":15117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15118,"src":"73083:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15115,"name":"address","nodeType":"ElementaryTypeName","src":"73083:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"73082:9:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15127,"nodeType":"FunctionDefinition","src":"73202:91:14","nodes":[],"documentation":{"id":15119,"nodeType":"StructuredDocumentation","src":"73098:99:14","text":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"functionSelector":"7404f1d2","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"73211:12:14","parameters":{"id":15122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15121,"mutability":"mutable","name":"walletLabel","nameLocation":"73240:11:14","nodeType":"VariableDeclaration","scope":15127,"src":"73224:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15120,"name":"string","nodeType":"ElementaryTypeName","src":"73224:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73223:29:14"},"returnParameters":{"id":15126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15125,"mutability":"mutable","name":"wallet","nameLocation":"73285:6:14","nodeType":"VariableDeclaration","scope":15127,"src":"73271:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12181_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15124,"nodeType":"UserDefinedTypeName","pathNode":{"id":15123,"name":"Wallet","nameLocations":["73271:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":12181,"src":"73271:6:14"},"referencedDeclaration":12181,"src":"73271:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12181_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"73270:22:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15136,"nodeType":"FunctionDefinition","src":"73371:82:14","nodes":[],"documentation":{"id":15128,"nodeType":"StructuredDocumentation","src":"73299:67:14","text":"Generates a wallet from the private key and returns the wallet."},"functionSelector":"7a675bb6","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"73380:12:14","parameters":{"id":15131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15130,"mutability":"mutable","name":"privateKey","nameLocation":"73401:10:14","nodeType":"VariableDeclaration","scope":15136,"src":"73393:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15129,"name":"uint256","nodeType":"ElementaryTypeName","src":"73393:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73392:20:14"},"returnParameters":{"id":15135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15134,"mutability":"mutable","name":"wallet","nameLocation":"73445:6:14","nodeType":"VariableDeclaration","scope":15136,"src":"73431:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12181_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15133,"nodeType":"UserDefinedTypeName","pathNode":{"id":15132,"name":"Wallet","nameLocations":["73431:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":12181,"src":"73431:6:14"},"referencedDeclaration":12181,"src":"73431:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12181_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"73430:22:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15147,"nodeType":"FunctionDefinition","src":"73567:111:14","nodes":[],"documentation":{"id":15137,"nodeType":"StructuredDocumentation","src":"73459:103:14","text":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"functionSelector":"ed7c5462","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"73576:12:14","parameters":{"id":15142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15139,"mutability":"mutable","name":"privateKey","nameLocation":"73597:10:14","nodeType":"VariableDeclaration","scope":15147,"src":"73589:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15138,"name":"uint256","nodeType":"ElementaryTypeName","src":"73589:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15141,"mutability":"mutable","name":"walletLabel","nameLocation":"73625:11:14","nodeType":"VariableDeclaration","scope":15147,"src":"73609:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15140,"name":"string","nodeType":"ElementaryTypeName","src":"73609:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73588:49:14"},"returnParameters":{"id":15146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15145,"mutability":"mutable","name":"wallet","nameLocation":"73670:6:14","nodeType":"VariableDeclaration","scope":15147,"src":"73656:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12181_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15144,"nodeType":"UserDefinedTypeName","pathNode":{"id":15143,"name":"Wallet","nameLocations":["73656:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":12181,"src":"73656:6:14"},"referencedDeclaration":12181,"src":"73656:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12181_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"73655:22:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15157,"nodeType":"FunctionDefinition","src":"73826:102:14","nodes":[],"documentation":{"id":15148,"nodeType":"StructuredDocumentation","src":"73684:137:14","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"6229498b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"73835:9:14","parameters":{"id":15153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15150,"mutability":"mutable","name":"mnemonic","nameLocation":"73861:8:14","nodeType":"VariableDeclaration","scope":15157,"src":"73845:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15149,"name":"string","nodeType":"ElementaryTypeName","src":"73845:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15152,"mutability":"mutable","name":"index","nameLocation":"73878:5:14","nodeType":"VariableDeclaration","scope":15157,"src":"73871:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15151,"name":"uint32","nodeType":"ElementaryTypeName","src":"73871:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"73844:40:14"},"returnParameters":{"id":15156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15155,"mutability":"mutable","name":"privateKey","nameLocation":"73916:10:14","nodeType":"VariableDeclaration","scope":15157,"src":"73908:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15154,"name":"uint256","nodeType":"ElementaryTypeName","src":"73908:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73907:20:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15169,"nodeType":"FunctionDefinition","src":"74057:158:14","nodes":[],"documentation":{"id":15158,"nodeType":"StructuredDocumentation","src":"73934:118:14","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at `{derivationPath}{index}`."},"functionSelector":"6bcb2c1b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"74066:9:14","parameters":{"id":15165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15160,"mutability":"mutable","name":"mnemonic","nameLocation":"74092:8:14","nodeType":"VariableDeclaration","scope":15169,"src":"74076:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15159,"name":"string","nodeType":"ElementaryTypeName","src":"74076:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15162,"mutability":"mutable","name":"derivationPath","nameLocation":"74118:14:14","nodeType":"VariableDeclaration","scope":15169,"src":"74102:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15161,"name":"string","nodeType":"ElementaryTypeName","src":"74102:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15164,"mutability":"mutable","name":"index","nameLocation":"74141:5:14","nodeType":"VariableDeclaration","scope":15169,"src":"74134:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15163,"name":"uint32","nodeType":"ElementaryTypeName","src":"74134:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"74075:72:14"},"returnParameters":{"id":15168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15167,"mutability":"mutable","name":"privateKey","nameLocation":"74203:10:14","nodeType":"VariableDeclaration","scope":15169,"src":"74195:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15166,"name":"uint256","nodeType":"ElementaryTypeName","src":"74195:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74194:20:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15181,"nodeType":"FunctionDefinition","src":"74389:152:14","nodes":[],"documentation":{"id":15170,"nodeType":"StructuredDocumentation","src":"74221:163:14","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"32c8176d","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"74398:9:14","parameters":{"id":15177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15172,"mutability":"mutable","name":"mnemonic","nameLocation":"74424:8:14","nodeType":"VariableDeclaration","scope":15181,"src":"74408:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15171,"name":"string","nodeType":"ElementaryTypeName","src":"74408:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15174,"mutability":"mutable","name":"index","nameLocation":"74441:5:14","nodeType":"VariableDeclaration","scope":15181,"src":"74434:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15173,"name":"uint32","nodeType":"ElementaryTypeName","src":"74434:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":15176,"mutability":"mutable","name":"language","nameLocation":"74464:8:14","nodeType":"VariableDeclaration","scope":15181,"src":"74448:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15175,"name":"string","nodeType":"ElementaryTypeName","src":"74448:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74407:66:14"},"returnParameters":{"id":15180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15179,"mutability":"mutable","name":"privateKey","nameLocation":"74529:10:14","nodeType":"VariableDeclaration","scope":15181,"src":"74521:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15178,"name":"uint256","nodeType":"ElementaryTypeName","src":"74521:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74520:20:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15195,"nodeType":"FunctionDefinition","src":"74696:184:14","nodes":[],"documentation":{"id":15182,"nodeType":"StructuredDocumentation","src":"74547:144:14","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at `{derivationPath}{index}`."},"functionSelector":"29233b1f","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"74705:9:14","parameters":{"id":15191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15184,"mutability":"mutable","name":"mnemonic","nameLocation":"74731:8:14","nodeType":"VariableDeclaration","scope":15195,"src":"74715:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15183,"name":"string","nodeType":"ElementaryTypeName","src":"74715:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15186,"mutability":"mutable","name":"derivationPath","nameLocation":"74757:14:14","nodeType":"VariableDeclaration","scope":15195,"src":"74741:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15185,"name":"string","nodeType":"ElementaryTypeName","src":"74741:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15188,"mutability":"mutable","name":"index","nameLocation":"74780:5:14","nodeType":"VariableDeclaration","scope":15195,"src":"74773:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15187,"name":"uint32","nodeType":"ElementaryTypeName","src":"74773:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":15190,"mutability":"mutable","name":"language","nameLocation":"74803:8:14","nodeType":"VariableDeclaration","scope":15195,"src":"74787:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15189,"name":"string","nodeType":"ElementaryTypeName","src":"74787:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74714:98:14"},"returnParameters":{"id":15194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15193,"mutability":"mutable","name":"privateKey","nameLocation":"74868:10:14","nodeType":"VariableDeclaration","scope":15195,"src":"74860:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15192,"name":"uint256","nodeType":"ElementaryTypeName","src":"74860:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74859:20:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15203,"nodeType":"FunctionDefinition","src":"74936:75:14","nodes":[],"documentation":{"id":15196,"nodeType":"StructuredDocumentation","src":"74886:45:14","text":"Returns ENS namehash for provided string."},"functionSelector":"8c374c65","implemented":false,"kind":"function","modifiers":[],"name":"ensNamehash","nameLocation":"74945:11:14","parameters":{"id":15199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15198,"mutability":"mutable","name":"name","nameLocation":"74973:4:14","nodeType":"VariableDeclaration","scope":15203,"src":"74957:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15197,"name":"string","nodeType":"ElementaryTypeName","src":"74957:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74956:22:14"},"returnParameters":{"id":15202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15203,"src":"75002:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75002:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"75001:9:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15211,"nodeType":"FunctionDefinition","src":"75067:86:14","nodes":[],"documentation":{"id":15204,"nodeType":"StructuredDocumentation","src":"75017:45:14","text":"Gets the label for the specified address."},"functionSelector":"28a249b0","implemented":false,"kind":"function","modifiers":[],"name":"getLabel","nameLocation":"75076:8:14","parameters":{"id":15207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15206,"mutability":"mutable","name":"account","nameLocation":"75093:7:14","nodeType":"VariableDeclaration","scope":15211,"src":"75085:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15205,"name":"address","nodeType":"ElementaryTypeName","src":"75085:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75084:17:14"},"returnParameters":{"id":15210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15209,"mutability":"mutable","name":"currentLabel","nameLocation":"75139:12:14","nodeType":"VariableDeclaration","scope":15211,"src":"75125:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15208,"name":"string","nodeType":"ElementaryTypeName","src":"75125:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75124:28:14"},"scope":15284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15220,"nodeType":"FunctionDefinition","src":"75191:74:14","nodes":[],"documentation":{"id":15212,"nodeType":"StructuredDocumentation","src":"75159:27:14","text":"Get a `Wallet`'s nonce."},"functionSelector":"a5748aad","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"75200:8:14","parameters":{"id":15216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15215,"mutability":"mutable","name":"wallet","nameLocation":"75225:6:14","nodeType":"VariableDeclaration","scope":15220,"src":"75209:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12181_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15214,"nodeType":"UserDefinedTypeName","pathNode":{"id":15213,"name":"Wallet","nameLocations":["75209:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":12181,"src":"75209:6:14"},"referencedDeclaration":12181,"src":"75209:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12181_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"75208:24:14"},"returnParameters":{"id":15219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15218,"mutability":"mutable","name":"nonce","nameLocation":"75258:5:14","nodeType":"VariableDeclaration","scope":15220,"src":"75251:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15217,"name":"uint64","nodeType":"ElementaryTypeName","src":"75251:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"75250:14:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15228,"nodeType":"FunctionDefinition","src":"75313:67:14","nodes":[],"documentation":{"id":15221,"nodeType":"StructuredDocumentation","src":"75271:37:14","text":"Labels an address in call traces."},"functionSelector":"c657c718","implemented":false,"kind":"function","modifiers":[],"name":"label","nameLocation":"75322:5:14","parameters":{"id":15226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15223,"mutability":"mutable","name":"account","nameLocation":"75336:7:14","nodeType":"VariableDeclaration","scope":15228,"src":"75328:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15222,"name":"address","nodeType":"ElementaryTypeName","src":"75328:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15225,"mutability":"mutable","name":"newLabel","nameLocation":"75361:8:14","nodeType":"VariableDeclaration","scope":15228,"src":"75345:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15224,"name":"string","nodeType":"ElementaryTypeName","src":"75345:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75327:43:14"},"returnParameters":{"id":15227,"nodeType":"ParameterList","parameters":[],"src":"75379:0:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15236,"nodeType":"FunctionDefinition","src":"75464:76:14","nodes":[],"documentation":{"id":15229,"nodeType":"StructuredDocumentation","src":"75386:73:14","text":"Adds a private key to the local forge wallet and returns the address."},"functionSelector":"22100064","implemented":false,"kind":"function","modifiers":[],"name":"rememberKey","nameLocation":"75473:11:14","parameters":{"id":15232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15231,"mutability":"mutable","name":"privateKey","nameLocation":"75493:10:14","nodeType":"VariableDeclaration","scope":15236,"src":"75485:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15230,"name":"uint256","nodeType":"ElementaryTypeName","src":"75485:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"75484:20:14"},"returnParameters":{"id":15235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15234,"mutability":"mutable","name":"keyAddr","nameLocation":"75531:7:14","nodeType":"VariableDeclaration","scope":15236,"src":"75523:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15233,"name":"address","nodeType":"ElementaryTypeName","src":"75523:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75522:17:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15251,"nodeType":"FunctionDefinition","src":"75582:103:14","nodes":[],"documentation":{"id":15237,"nodeType":"StructuredDocumentation","src":"75546:31:14","text":"Signs data with a `Wallet`."},"functionSelector":"b25c5a25","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"75591:4:14","parameters":{"id":15243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15240,"mutability":"mutable","name":"wallet","nameLocation":"75612:6:14","nodeType":"VariableDeclaration","scope":15251,"src":"75596:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12181_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15239,"nodeType":"UserDefinedTypeName","pathNode":{"id":15238,"name":"Wallet","nameLocations":["75596:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":12181,"src":"75596:6:14"},"referencedDeclaration":12181,"src":"75596:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12181_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":15242,"mutability":"mutable","name":"digest","nameLocation":"75628:6:14","nodeType":"VariableDeclaration","scope":15251,"src":"75620:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15241,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75620:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"75595:40:14"},"returnParameters":{"id":15250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15245,"mutability":"mutable","name":"v","nameLocation":"75660:1:14","nodeType":"VariableDeclaration","scope":15251,"src":"75654:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":15244,"name":"uint8","nodeType":"ElementaryTypeName","src":"75654:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":15247,"mutability":"mutable","name":"r","nameLocation":"75671:1:14","nodeType":"VariableDeclaration","scope":15251,"src":"75663:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75663:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15249,"mutability":"mutable","name":"s","nameLocation":"75682:1:14","nodeType":"VariableDeclaration","scope":15251,"src":"75674:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75674:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"75653:31:14"},"scope":15284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15259,"nodeType":"FunctionDefinition","src":"75746:80:14","nodes":[],"documentation":{"id":15252,"nodeType":"StructuredDocumentation","src":"75691:50:14","text":"Encodes a `bytes` value to a base64url string."},"functionSelector":"c8bd0e4a","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"75755:11:14","parameters":{"id":15255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15254,"mutability":"mutable","name":"data","nameLocation":"75782:4:14","nodeType":"VariableDeclaration","scope":15259,"src":"75767:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15253,"name":"bytes","nodeType":"ElementaryTypeName","src":"75767:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"75766:21:14"},"returnParameters":{"id":15258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15259,"src":"75811:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15256,"name":"string","nodeType":"ElementaryTypeName","src":"75811:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75810:15:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15267,"nodeType":"FunctionDefinition","src":"75888:81:14","nodes":[],"documentation":{"id":15260,"nodeType":"StructuredDocumentation","src":"75832:51:14","text":"Encodes a `string` value to a base64url string."},"functionSelector":"ae3165b3","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"75897:11:14","parameters":{"id":15263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15262,"mutability":"mutable","name":"data","nameLocation":"75925:4:14","nodeType":"VariableDeclaration","scope":15267,"src":"75909:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15261,"name":"string","nodeType":"ElementaryTypeName","src":"75909:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75908:22:14"},"returnParameters":{"id":15266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15267,"src":"75954:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15264,"name":"string","nodeType":"ElementaryTypeName","src":"75954:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75953:15:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15275,"nodeType":"FunctionDefinition","src":"76027:77:14","nodes":[],"documentation":{"id":15268,"nodeType":"StructuredDocumentation","src":"75975:47:14","text":"Encodes a `bytes` value to a base64 string."},"functionSelector":"a5cbfe65","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"76036:8:14","parameters":{"id":15271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15270,"mutability":"mutable","name":"data","nameLocation":"76060:4:14","nodeType":"VariableDeclaration","scope":15275,"src":"76045:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15269,"name":"bytes","nodeType":"ElementaryTypeName","src":"76045:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"76044:21:14"},"returnParameters":{"id":15274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15275,"src":"76089:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15272,"name":"string","nodeType":"ElementaryTypeName","src":"76089:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76088:15:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15283,"nodeType":"FunctionDefinition","src":"76163:78:14","nodes":[],"documentation":{"id":15276,"nodeType":"StructuredDocumentation","src":"76110:48:14","text":"Encodes a `string` value to a base64 string."},"functionSelector":"3f8be2c8","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"76172:8:14","parameters":{"id":15279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15278,"mutability":"mutable","name":"data","nameLocation":"76197:4:14","nodeType":"VariableDeclaration","scope":15283,"src":"76181:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15277,"name":"string","nodeType":"ElementaryTypeName","src":"76181:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76180:22:14"},"returnParameters":{"id":15282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15283,"src":"76226:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15280,"name":"string","nodeType":"ElementaryTypeName","src":"76226:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76225:15:14"},"scope":15284,"stateMutability":"pure","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"VmSafe","contractDependencies":[],"contractKind":"interface","documentation":{"id":12076,"nodeType":"StructuredDocumentation","src":"184:225:14","text":"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may\n result in Script simulations differing from on-chain execution. It is recommended to only use\n these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[15284],"name":"VmSafe","nameLocation":"419:6:14","scope":15886,"usedErrors":[],"usedEvents":[]},{"id":15885,"nodeType":"ContractDefinition","src":"76416:14386:14","nodes":[{"id":15293,"nodeType":"FunctionDefinition","src":"76576:61:14","nodes":[],"documentation":{"id":15288,"nodeType":"StructuredDocumentation","src":"76475:96:14","text":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"functionSelector":"2f103f22","implemented":false,"kind":"function","modifiers":[],"name":"activeFork","nameLocation":"76585:10:14","parameters":{"id":15289,"nodeType":"ParameterList","parameters":[],"src":"76595:2:14"},"returnParameters":{"id":15292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15291,"mutability":"mutable","name":"forkId","nameLocation":"76629:6:14","nodeType":"VariableDeclaration","scope":15293,"src":"76621:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15290,"name":"uint256","nodeType":"ElementaryTypeName","src":"76621:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76620:16:14"},"scope":15885,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15299,"nodeType":"FunctionDefinition","src":"76721:51:14","nodes":[],"documentation":{"id":15294,"nodeType":"StructuredDocumentation","src":"76643:73:14","text":"In forking mode, explicitly grant the given address cheatcode access."},"functionSelector":"ea060291","implemented":false,"kind":"function","modifiers":[],"name":"allowCheatcodes","nameLocation":"76730:15:14","parameters":{"id":15297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15296,"mutability":"mutable","name":"account","nameLocation":"76754:7:14","nodeType":"VariableDeclaration","scope":15299,"src":"76746:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15295,"name":"address","nodeType":"ElementaryTypeName","src":"76746:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"76745:17:14"},"returnParameters":{"id":15298,"nodeType":"ParameterList","parameters":[],"src":"76771:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15305,"nodeType":"FunctionDefinition","src":"76811:54:14","nodes":[],"documentation":{"id":15300,"nodeType":"StructuredDocumentation","src":"76778:28:14","text":"Sets `block.blobbasefee`"},"functionSelector":"6d315d7e","implemented":false,"kind":"function","modifiers":[],"name":"blobBaseFee","nameLocation":"76820:11:14","parameters":{"id":15303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15302,"mutability":"mutable","name":"newBlobBaseFee","nameLocation":"76840:14:14","nodeType":"VariableDeclaration","scope":15305,"src":"76832:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15301,"name":"uint256","nodeType":"ElementaryTypeName","src":"76832:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76831:24:14"},"returnParameters":{"id":15304,"nodeType":"ParameterList","parameters":[],"src":"76864:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15312,"nodeType":"FunctionDefinition","src":"77032:56:14","nodes":[],"documentation":{"id":15306,"nodeType":"StructuredDocumentation","src":"76871:156:14","text":"Sets the blobhashes in the transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"129de7eb","implemented":false,"kind":"function","modifiers":[],"name":"blobhashes","nameLocation":"77041:10:14","parameters":{"id":15310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15309,"mutability":"mutable","name":"hashes","nameLocation":"77071:6:14","nodeType":"VariableDeclaration","scope":15312,"src":"77052:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15307,"name":"bytes32","nodeType":"ElementaryTypeName","src":"77052:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15308,"nodeType":"ArrayTypeName","src":"77052:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"77051:27:14"},"returnParameters":{"id":15311,"nodeType":"ParameterList","parameters":[],"src":"77087:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15318,"nodeType":"FunctionDefinition","src":"77124:46:14","nodes":[],"documentation":{"id":15313,"nodeType":"StructuredDocumentation","src":"77094:25:14","text":"Sets `block.chainid`."},"functionSelector":"4049ddd2","implemented":false,"kind":"function","modifiers":[],"name":"chainId","nameLocation":"77133:7:14","parameters":{"id":15316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15315,"mutability":"mutable","name":"newChainId","nameLocation":"77149:10:14","nodeType":"VariableDeclaration","scope":15318,"src":"77141:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15314,"name":"uint256","nodeType":"ElementaryTypeName","src":"77141:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77140:20:14"},"returnParameters":{"id":15317,"nodeType":"ParameterList","parameters":[],"src":"77169:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15322,"nodeType":"FunctionDefinition","src":"77209:37:14","nodes":[],"documentation":{"id":15319,"nodeType":"StructuredDocumentation","src":"77176:28:14","text":"Clears all mocked calls."},"functionSelector":"3fdf4e15","implemented":false,"kind":"function","modifiers":[],"name":"clearMockedCalls","nameLocation":"77218:16:14","parameters":{"id":15320,"nodeType":"ParameterList","parameters":[],"src":"77234:2:14"},"returnParameters":{"id":15321,"nodeType":"ParameterList","parameters":[],"src":"77245:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15328,"nodeType":"FunctionDefinition","src":"77283:48:14","nodes":[],"documentation":{"id":15323,"nodeType":"StructuredDocumentation","src":"77252:26:14","text":"Sets `block.coinbase`."},"functionSelector":"ff483c54","implemented":false,"kind":"function","modifiers":[],"name":"coinbase","nameLocation":"77292:8:14","parameters":{"id":15326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15325,"mutability":"mutable","name":"newCoinbase","nameLocation":"77309:11:14","nodeType":"VariableDeclaration","scope":15328,"src":"77301:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15324,"name":"address","nodeType":"ElementaryTypeName","src":"77301:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"77300:21:14"},"returnParameters":{"id":15327,"nodeType":"ParameterList","parameters":[],"src":"77330:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15336,"nodeType":"FunctionDefinition","src":"77451:82:14","nodes":[],"documentation":{"id":15329,"nodeType":"StructuredDocumentation","src":"77337:109:14","text":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"functionSelector":"31ba3498","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"77460:10:14","parameters":{"id":15332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15331,"mutability":"mutable","name":"urlOrAlias","nameLocation":"77487:10:14","nodeType":"VariableDeclaration","scope":15336,"src":"77471:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15330,"name":"string","nodeType":"ElementaryTypeName","src":"77471:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77470:28:14"},"returnParameters":{"id":15335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15334,"mutability":"mutable","name":"forkId","nameLocation":"77525:6:14","nodeType":"VariableDeclaration","scope":15336,"src":"77517:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15333,"name":"uint256","nodeType":"ElementaryTypeName","src":"77517:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77516:16:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15346,"nodeType":"FunctionDefinition","src":"77640:103:14","nodes":[],"documentation":{"id":15337,"nodeType":"StructuredDocumentation","src":"77539:96:14","text":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"6ba3ba2b","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"77649:10:14","parameters":{"id":15342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15339,"mutability":"mutable","name":"urlOrAlias","nameLocation":"77676:10:14","nodeType":"VariableDeclaration","scope":15346,"src":"77660:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15338,"name":"string","nodeType":"ElementaryTypeName","src":"77660:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15341,"mutability":"mutable","name":"blockNumber","nameLocation":"77696:11:14","nodeType":"VariableDeclaration","scope":15346,"src":"77688:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15340,"name":"uint256","nodeType":"ElementaryTypeName","src":"77688:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77659:49:14"},"returnParameters":{"id":15345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15344,"mutability":"mutable","name":"forkId","nameLocation":"77735:6:14","nodeType":"VariableDeclaration","scope":15346,"src":"77727:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15343,"name":"uint256","nodeType":"ElementaryTypeName","src":"77727:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77726:16:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15356,"nodeType":"FunctionDefinition","src":"77968:98:14","nodes":[],"documentation":{"id":15347,"nodeType":"StructuredDocumentation","src":"77749:214:14","text":"Creates a new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"functionSelector":"7ca29682","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"77977:10:14","parameters":{"id":15352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15349,"mutability":"mutable","name":"urlOrAlias","nameLocation":"78004:10:14","nodeType":"VariableDeclaration","scope":15356,"src":"77988:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15348,"name":"string","nodeType":"ElementaryTypeName","src":"77988:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15351,"mutability":"mutable","name":"txHash","nameLocation":"78024:6:14","nodeType":"VariableDeclaration","scope":15356,"src":"78016:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"78016:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"77987:44:14"},"returnParameters":{"id":15355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15354,"mutability":"mutable","name":"forkId","nameLocation":"78058:6:14","nodeType":"VariableDeclaration","scope":15356,"src":"78050:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15353,"name":"uint256","nodeType":"ElementaryTypeName","src":"78050:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78049:16:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15364,"nodeType":"FunctionDefinition","src":"78201:88:14","nodes":[],"documentation":{"id":15357,"nodeType":"StructuredDocumentation","src":"78072:124:14","text":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"functionSelector":"98680034","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"78210:16:14","parameters":{"id":15360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15359,"mutability":"mutable","name":"urlOrAlias","nameLocation":"78243:10:14","nodeType":"VariableDeclaration","scope":15364,"src":"78227:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15358,"name":"string","nodeType":"ElementaryTypeName","src":"78227:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78226:28:14"},"returnParameters":{"id":15363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15362,"mutability":"mutable","name":"forkId","nameLocation":"78281:6:14","nodeType":"VariableDeclaration","scope":15364,"src":"78273:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15361,"name":"uint256","nodeType":"ElementaryTypeName","src":"78273:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78272:16:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15374,"nodeType":"FunctionDefinition","src":"78413:109:14","nodes":[],"documentation":{"id":15365,"nodeType":"StructuredDocumentation","src":"78295:113:14","text":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"71ee464d","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"78422:16:14","parameters":{"id":15370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15367,"mutability":"mutable","name":"urlOrAlias","nameLocation":"78455:10:14","nodeType":"VariableDeclaration","scope":15374,"src":"78439:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15366,"name":"string","nodeType":"ElementaryTypeName","src":"78439:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15369,"mutability":"mutable","name":"blockNumber","nameLocation":"78475:11:14","nodeType":"VariableDeclaration","scope":15374,"src":"78467:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15368,"name":"uint256","nodeType":"ElementaryTypeName","src":"78467:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78438:49:14"},"returnParameters":{"id":15373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15372,"mutability":"mutable","name":"forkId","nameLocation":"78514:6:14","nodeType":"VariableDeclaration","scope":15374,"src":"78506:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15371,"name":"uint256","nodeType":"ElementaryTypeName","src":"78506:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78505:16:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15384,"nodeType":"FunctionDefinition","src":"78758:104:14","nodes":[],"documentation":{"id":15375,"nodeType":"StructuredDocumentation","src":"78528:225:14","text":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"functionSelector":"84d52b7a","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"78767:16:14","parameters":{"id":15380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15377,"mutability":"mutable","name":"urlOrAlias","nameLocation":"78800:10:14","nodeType":"VariableDeclaration","scope":15384,"src":"78784:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15376,"name":"string","nodeType":"ElementaryTypeName","src":"78784:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15379,"mutability":"mutable","name":"txHash","nameLocation":"78820:6:14","nodeType":"VariableDeclaration","scope":15384,"src":"78812:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"78812:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"78783:44:14"},"returnParameters":{"id":15383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15382,"mutability":"mutable","name":"forkId","nameLocation":"78854:6:14","nodeType":"VariableDeclaration","scope":15384,"src":"78846:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15381,"name":"uint256","nodeType":"ElementaryTypeName","src":"78846:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78845:16:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15392,"nodeType":"FunctionDefinition","src":"78902:60:14","nodes":[],"documentation":{"id":15385,"nodeType":"StructuredDocumentation","src":"78868:29:14","text":"Sets an address' balance."},"functionSelector":"c88a5e6d","implemented":false,"kind":"function","modifiers":[],"name":"deal","nameLocation":"78911:4:14","parameters":{"id":15390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15387,"mutability":"mutable","name":"account","nameLocation":"78924:7:14","nodeType":"VariableDeclaration","scope":15392,"src":"78916:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15386,"name":"address","nodeType":"ElementaryTypeName","src":"78916:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15389,"mutability":"mutable","name":"newBalance","nameLocation":"78941:10:14","nodeType":"VariableDeclaration","scope":15392,"src":"78933:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15388,"name":"uint256","nodeType":"ElementaryTypeName","src":"78933:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78915:37:14"},"returnParameters":{"id":15391,"nodeType":"ParameterList","parameters":[],"src":"78961:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15400,"nodeType":"FunctionDefinition","src":"79200:76:14","nodes":[],"documentation":{"id":15393,"nodeType":"StructuredDocumentation","src":"78968:227:14","text":"Removes the snapshot with the given ID created by `snapshot`.\n Takes the snapshot ID to delete.\n Returns `true` if the snapshot was successfully deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"a6368557","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshot","nameLocation":"79209:14:14","parameters":{"id":15396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15395,"mutability":"mutable","name":"snapshotId","nameLocation":"79232:10:14","nodeType":"VariableDeclaration","scope":15400,"src":"79224:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15394,"name":"uint256","nodeType":"ElementaryTypeName","src":"79224:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79223:20:14"},"returnParameters":{"id":15399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15398,"mutability":"mutable","name":"success","nameLocation":"79267:7:14","nodeType":"VariableDeclaration","scope":15400,"src":"79262:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15397,"name":"bool","nodeType":"ElementaryTypeName","src":"79262:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"79261:14:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15404,"nodeType":"FunctionDefinition","src":"79348:36:14","nodes":[],"documentation":{"id":15401,"nodeType":"StructuredDocumentation","src":"79282:61:14","text":"Removes _all_ snapshots previously created by `snapshot`."},"functionSelector":"421ae469","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshots","nameLocation":"79357:15:14","parameters":{"id":15402,"nodeType":"ParameterList","parameters":[],"src":"79372:2:14"},"returnParameters":{"id":15403,"nodeType":"ParameterList","parameters":[],"src":"79383:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15410,"nodeType":"FunctionDefinition","src":"79560:52:14","nodes":[],"documentation":{"id":15405,"nodeType":"StructuredDocumentation","src":"79390:165:14","text":"Sets `block.difficulty`.\n Not available on EVM versions from Paris onwards. Use `prevrandao` instead.\n Reverts if used on unsupported EVM versions."},"functionSelector":"46cc92d9","implemented":false,"kind":"function","modifiers":[],"name":"difficulty","nameLocation":"79569:10:14","parameters":{"id":15408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15407,"mutability":"mutable","name":"newDifficulty","nameLocation":"79588:13:14","nodeType":"VariableDeclaration","scope":15410,"src":"79580:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15406,"name":"uint256","nodeType":"ElementaryTypeName","src":"79580:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79579:23:14"},"returnParameters":{"id":15409,"nodeType":"ParameterList","parameters":[],"src":"79611:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15416,"nodeType":"FunctionDefinition","src":"79671:61:14","nodes":[],"documentation":{"id":15411,"nodeType":"StructuredDocumentation","src":"79618:48:14","text":"Dump a genesis JSON file's `allocs` to disk."},"functionSelector":"709ecd3f","implemented":false,"kind":"function","modifiers":[],"name":"dumpState","nameLocation":"79680:9:14","parameters":{"id":15414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15413,"mutability":"mutable","name":"pathToStateJson","nameLocation":"79706:15:14","nodeType":"VariableDeclaration","scope":15416,"src":"79690:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15412,"name":"string","nodeType":"ElementaryTypeName","src":"79690:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79689:33:14"},"returnParameters":{"id":15415,"nodeType":"ParameterList","parameters":[],"src":"79731:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15424,"nodeType":"FunctionDefinition","src":"79769:74:14","nodes":[],"documentation":{"id":15417,"nodeType":"StructuredDocumentation","src":"79738:26:14","text":"Sets an address' code."},"functionSelector":"b4d6c782","implemented":false,"kind":"function","modifiers":[],"name":"etch","nameLocation":"79778:4:14","parameters":{"id":15422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15419,"mutability":"mutable","name":"target","nameLocation":"79791:6:14","nodeType":"VariableDeclaration","scope":15424,"src":"79783:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15418,"name":"address","nodeType":"ElementaryTypeName","src":"79783:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15421,"mutability":"mutable","name":"newRuntimeBytecode","nameLocation":"79814:18:14","nodeType":"VariableDeclaration","scope":15424,"src":"79799:33:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15420,"name":"bytes","nodeType":"ElementaryTypeName","src":"79799:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"79782:51:14"},"returnParameters":{"id":15423,"nodeType":"ParameterList","parameters":[],"src":"79842:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15430,"nodeType":"FunctionDefinition","src":"79879:42:14","nodes":[],"documentation":{"id":15425,"nodeType":"StructuredDocumentation","src":"79849:25:14","text":"Sets `block.basefee`."},"functionSelector":"39b37ab0","implemented":false,"kind":"function","modifiers":[],"name":"fee","nameLocation":"79888:3:14","parameters":{"id":15428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15427,"mutability":"mutable","name":"newBasefee","nameLocation":"79900:10:14","nodeType":"VariableDeclaration","scope":15430,"src":"79892:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15426,"name":"uint256","nodeType":"ElementaryTypeName","src":"79892:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79891:20:14"},"returnParameters":{"id":15429,"nodeType":"ParameterList","parameters":[],"src":"79920:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15437,"nodeType":"FunctionDefinition","src":"80099:73:14","nodes":[],"documentation":{"id":15431,"nodeType":"StructuredDocumentation","src":"79927:167:14","text":"Gets the blockhashes from the current transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"f56ff18b","implemented":false,"kind":"function","modifiers":[],"name":"getBlobhashes","nameLocation":"80108:13:14","parameters":{"id":15432,"nodeType":"ParameterList","parameters":[],"src":"80121:2:14"},"returnParameters":{"id":15436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15435,"mutability":"mutable","name":"hashes","nameLocation":"80164:6:14","nodeType":"VariableDeclaration","scope":15437,"src":"80147:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15433,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80147:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15434,"nodeType":"ArrayTypeName","src":"80147:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"80146:25:14"},"scope":15885,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15445,"nodeType":"FunctionDefinition","src":"80239:79:14","nodes":[],"documentation":{"id":15438,"nodeType":"StructuredDocumentation","src":"80178:56:14","text":"Returns true if the account is marked as persistent."},"functionSelector":"d92d8efd","implemented":false,"kind":"function","modifiers":[],"name":"isPersistent","nameLocation":"80248:12:14","parameters":{"id":15441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15440,"mutability":"mutable","name":"account","nameLocation":"80269:7:14","nodeType":"VariableDeclaration","scope":15445,"src":"80261:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15439,"name":"address","nodeType":"ElementaryTypeName","src":"80261:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80260:17:14"},"returnParameters":{"id":15444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15443,"mutability":"mutable","name":"persistent","nameLocation":"80306:10:14","nodeType":"VariableDeclaration","scope":15445,"src":"80301:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15442,"name":"bool","nodeType":"ElementaryTypeName","src":"80301:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"80300:17:14"},"scope":15885,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15451,"nodeType":"FunctionDefinition","src":"80399:63:14","nodes":[],"documentation":{"id":15446,"nodeType":"StructuredDocumentation","src":"80324:70:14","text":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"functionSelector":"b3a056d7","implemented":false,"kind":"function","modifiers":[],"name":"loadAllocs","nameLocation":"80408:10:14","parameters":{"id":15449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15448,"mutability":"mutable","name":"pathToAllocsJson","nameLocation":"80435:16:14","nodeType":"VariableDeclaration","scope":15451,"src":"80419:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15447,"name":"string","nodeType":"ElementaryTypeName","src":"80419:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80418:34:14"},"returnParameters":{"id":15450,"nodeType":"ParameterList","parameters":[],"src":"80461:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15457,"nodeType":"FunctionDefinition","src":"80665:50:14","nodes":[],"documentation":{"id":15452,"nodeType":"StructuredDocumentation","src":"80468:192:14","text":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup\n Meaning, changes made to the state of this account will be kept when switching forks."},"functionSelector":"57e22dde","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"80674:14:14","parameters":{"id":15455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15454,"mutability":"mutable","name":"account","nameLocation":"80697:7:14","nodeType":"VariableDeclaration","scope":15457,"src":"80689:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15453,"name":"address","nodeType":"ElementaryTypeName","src":"80689:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80688:17:14"},"returnParameters":{"id":15456,"nodeType":"ParameterList","parameters":[],"src":"80714:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15465,"nodeType":"FunctionDefinition","src":"80760:69:14","nodes":[],"documentation":{"id":15458,"nodeType":"StructuredDocumentation","src":"80721:34:14","text":"See `makePersistent(address)`."},"functionSelector":"4074e0a8","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"80769:14:14","parameters":{"id":15463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15460,"mutability":"mutable","name":"account0","nameLocation":"80792:8:14","nodeType":"VariableDeclaration","scope":15465,"src":"80784:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15459,"name":"address","nodeType":"ElementaryTypeName","src":"80784:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15462,"mutability":"mutable","name":"account1","nameLocation":"80810:8:14","nodeType":"VariableDeclaration","scope":15465,"src":"80802:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15461,"name":"address","nodeType":"ElementaryTypeName","src":"80802:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80783:36:14"},"returnParameters":{"id":15464,"nodeType":"ParameterList","parameters":[],"src":"80828:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15475,"nodeType":"FunctionDefinition","src":"80874:87:14","nodes":[],"documentation":{"id":15466,"nodeType":"StructuredDocumentation","src":"80835:34:14","text":"See `makePersistent(address)`."},"functionSelector":"efb77a75","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"80883:14:14","parameters":{"id":15473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15468,"mutability":"mutable","name":"account0","nameLocation":"80906:8:14","nodeType":"VariableDeclaration","scope":15475,"src":"80898:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15467,"name":"address","nodeType":"ElementaryTypeName","src":"80898:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15470,"mutability":"mutable","name":"account1","nameLocation":"80924:8:14","nodeType":"VariableDeclaration","scope":15475,"src":"80916:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15469,"name":"address","nodeType":"ElementaryTypeName","src":"80916:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15472,"mutability":"mutable","name":"account2","nameLocation":"80942:8:14","nodeType":"VariableDeclaration","scope":15475,"src":"80934:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15471,"name":"address","nodeType":"ElementaryTypeName","src":"80934:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80897:54:14"},"returnParameters":{"id":15474,"nodeType":"ParameterList","parameters":[],"src":"80960:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15482,"nodeType":"FunctionDefinition","src":"81006:62:14","nodes":[],"documentation":{"id":15476,"nodeType":"StructuredDocumentation","src":"80967:34:14","text":"See `makePersistent(address)`."},"functionSelector":"1d9e269e","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"81015:14:14","parameters":{"id":15480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15479,"mutability":"mutable","name":"accounts","nameLocation":"81049:8:14","nodeType":"VariableDeclaration","scope":15482,"src":"81030:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15477,"name":"address","nodeType":"ElementaryTypeName","src":"81030:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15478,"nodeType":"ArrayTypeName","src":"81030:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"81029:29:14"},"returnParameters":{"id":15481,"nodeType":"ParameterList","parameters":[],"src":"81067:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15492,"nodeType":"FunctionDefinition","src":"81139:97:14","nodes":[],"documentation":{"id":15483,"nodeType":"StructuredDocumentation","src":"81074:60:14","text":"Reverts a call to an address with specified revert data."},"functionSelector":"dbaad147","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"81148:14:14","parameters":{"id":15490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15485,"mutability":"mutable","name":"callee","nameLocation":"81171:6:14","nodeType":"VariableDeclaration","scope":15492,"src":"81163:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15484,"name":"address","nodeType":"ElementaryTypeName","src":"81163:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15487,"mutability":"mutable","name":"data","nameLocation":"81194:4:14","nodeType":"VariableDeclaration","scope":15492,"src":"81179:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15486,"name":"bytes","nodeType":"ElementaryTypeName","src":"81179:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15489,"mutability":"mutable","name":"revertData","nameLocation":"81215:10:14","nodeType":"VariableDeclaration","scope":15492,"src":"81200:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15488,"name":"bytes","nodeType":"ElementaryTypeName","src":"81200:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"81162:64:14"},"returnParameters":{"id":15491,"nodeType":"ParameterList","parameters":[],"src":"81235:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15504,"nodeType":"FunctionDefinition","src":"81336:123:14","nodes":[],"documentation":{"id":15493,"nodeType":"StructuredDocumentation","src":"81242:89:14","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"functionSelector":"d23cd037","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"81345:14:14","parameters":{"id":15502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15495,"mutability":"mutable","name":"callee","nameLocation":"81368:6:14","nodeType":"VariableDeclaration","scope":15504,"src":"81360:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15494,"name":"address","nodeType":"ElementaryTypeName","src":"81360:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15497,"mutability":"mutable","name":"msgValue","nameLocation":"81384:8:14","nodeType":"VariableDeclaration","scope":15504,"src":"81376:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15496,"name":"uint256","nodeType":"ElementaryTypeName","src":"81376:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15499,"mutability":"mutable","name":"data","nameLocation":"81409:4:14","nodeType":"VariableDeclaration","scope":15504,"src":"81394:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15498,"name":"bytes","nodeType":"ElementaryTypeName","src":"81394:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15501,"mutability":"mutable","name":"revertData","nameLocation":"81430:10:14","nodeType":"VariableDeclaration","scope":15504,"src":"81415:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15500,"name":"bytes","nodeType":"ElementaryTypeName","src":"81415:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"81359:82:14"},"returnParameters":{"id":15503,"nodeType":"ParameterList","parameters":[],"src":"81458:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15514,"nodeType":"FunctionDefinition","src":"81719:91:14","nodes":[],"documentation":{"id":15505,"nodeType":"StructuredDocumentation","src":"81465:249:14","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked."},"functionSelector":"b96213e4","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"81728:8:14","parameters":{"id":15512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15507,"mutability":"mutable","name":"callee","nameLocation":"81745:6:14","nodeType":"VariableDeclaration","scope":15514,"src":"81737:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15506,"name":"address","nodeType":"ElementaryTypeName","src":"81737:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15509,"mutability":"mutable","name":"data","nameLocation":"81768:4:14","nodeType":"VariableDeclaration","scope":15514,"src":"81753:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15508,"name":"bytes","nodeType":"ElementaryTypeName","src":"81753:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15511,"mutability":"mutable","name":"returnData","nameLocation":"81789:10:14","nodeType":"VariableDeclaration","scope":15514,"src":"81774:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15510,"name":"bytes","nodeType":"ElementaryTypeName","src":"81774:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"81736:64:14"},"returnParameters":{"id":15513,"nodeType":"ParameterList","parameters":[],"src":"81809:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15526,"nodeType":"FunctionDefinition","src":"81985:109:14","nodes":[],"documentation":{"id":15515,"nodeType":"StructuredDocumentation","src":"81816:164:14","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity."},"functionSelector":"81409b91","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"81994:8:14","parameters":{"id":15524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15517,"mutability":"mutable","name":"callee","nameLocation":"82011:6:14","nodeType":"VariableDeclaration","scope":15526,"src":"82003:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15516,"name":"address","nodeType":"ElementaryTypeName","src":"82003:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15519,"mutability":"mutable","name":"msgValue","nameLocation":"82027:8:14","nodeType":"VariableDeclaration","scope":15526,"src":"82019:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15518,"name":"uint256","nodeType":"ElementaryTypeName","src":"82019:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15521,"mutability":"mutable","name":"data","nameLocation":"82052:4:14","nodeType":"VariableDeclaration","scope":15526,"src":"82037:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15520,"name":"bytes","nodeType":"ElementaryTypeName","src":"82037:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15523,"mutability":"mutable","name":"returnData","nameLocation":"82073:10:14","nodeType":"VariableDeclaration","scope":15526,"src":"82058:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15522,"name":"bytes","nodeType":"ElementaryTypeName","src":"82058:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"82002:82:14"},"returnParameters":{"id":15525,"nodeType":"ParameterList","parameters":[],"src":"82093:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15532,"nodeType":"FunctionDefinition","src":"82169:43:14","nodes":[],"documentation":{"id":15527,"nodeType":"StructuredDocumentation","src":"82100:64:14","text":"Sets the *next* call's `msg.sender` to be the input address."},"functionSelector":"ca669fa7","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"82178:5:14","parameters":{"id":15530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15529,"mutability":"mutable","name":"msgSender","nameLocation":"82192:9:14","nodeType":"VariableDeclaration","scope":15532,"src":"82184:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15528,"name":"address","nodeType":"ElementaryTypeName","src":"82184:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"82183:19:14"},"returnParameters":{"id":15531,"nodeType":"ParameterList","parameters":[],"src":"82211:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15540,"nodeType":"FunctionDefinition","src":"82331:61:14","nodes":[],"documentation":{"id":15533,"nodeType":"StructuredDocumentation","src":"82218:108:14","text":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"47e50cce","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"82340:5:14","parameters":{"id":15538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15535,"mutability":"mutable","name":"msgSender","nameLocation":"82354:9:14","nodeType":"VariableDeclaration","scope":15540,"src":"82346:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15534,"name":"address","nodeType":"ElementaryTypeName","src":"82346:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15537,"mutability":"mutable","name":"txOrigin","nameLocation":"82373:8:14","nodeType":"VariableDeclaration","scope":15540,"src":"82365:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15536,"name":"address","nodeType":"ElementaryTypeName","src":"82365:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"82345:37:14"},"returnParameters":{"id":15539,"nodeType":"ParameterList","parameters":[],"src":"82391:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15546,"nodeType":"FunctionDefinition","src":"82569:52:14","nodes":[],"documentation":{"id":15541,"nodeType":"StructuredDocumentation","src":"82398:166:14","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"3b925549","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"82578:10:14","parameters":{"id":15544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15543,"mutability":"mutable","name":"newPrevrandao","nameLocation":"82597:13:14","nodeType":"VariableDeclaration","scope":15546,"src":"82589:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"82589:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"82588:23:14"},"returnParameters":{"id":15545,"nodeType":"ParameterList","parameters":[],"src":"82620:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15552,"nodeType":"FunctionDefinition","src":"82798:52:14","nodes":[],"documentation":{"id":15547,"nodeType":"StructuredDocumentation","src":"82627:166:14","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"9cb1c0d4","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"82807:10:14","parameters":{"id":15550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15549,"mutability":"mutable","name":"newPrevrandao","nameLocation":"82826:13:14","nodeType":"VariableDeclaration","scope":15552,"src":"82818:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15548,"name":"uint256","nodeType":"ElementaryTypeName","src":"82818:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"82817:23:14"},"returnParameters":{"id":15551,"nodeType":"ParameterList","parameters":[],"src":"82849:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15563,"nodeType":"FunctionDefinition","src":"82978:101:14","nodes":[],"documentation":{"id":15553,"nodeType":"StructuredDocumentation","src":"82856:117:14","text":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"functionSelector":"4ad0bac9","implemented":false,"kind":"function","modifiers":[],"name":"readCallers","nameLocation":"82987:11:14","parameters":{"id":15554,"nodeType":"ParameterList","parameters":[],"src":"82998:2:14"},"returnParameters":{"id":15562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15557,"mutability":"mutable","name":"callerMode","nameLocation":"83030:10:14","nodeType":"VariableDeclaration","scope":15563,"src":"83019:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$12083","typeString":"enum VmSafe.CallerMode"},"typeName":{"id":15556,"nodeType":"UserDefinedTypeName","pathNode":{"id":15555,"name":"CallerMode","nameLocations":["83019:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":12083,"src":"83019:10:14"},"referencedDeclaration":12083,"src":"83019:10:14","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$12083","typeString":"enum VmSafe.CallerMode"}},"visibility":"internal"},{"constant":false,"id":15559,"mutability":"mutable","name":"msgSender","nameLocation":"83050:9:14","nodeType":"VariableDeclaration","scope":15563,"src":"83042:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15558,"name":"address","nodeType":"ElementaryTypeName","src":"83042:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15561,"mutability":"mutable","name":"txOrigin","nameLocation":"83069:8:14","nodeType":"VariableDeclaration","scope":15563,"src":"83061:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15560,"name":"address","nodeType":"ElementaryTypeName","src":"83061:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83018:60:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15569,"nodeType":"FunctionDefinition","src":"83167:46:14","nodes":[],"documentation":{"id":15564,"nodeType":"StructuredDocumentation","src":"83085:77:14","text":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"functionSelector":"1c72346d","implemented":false,"kind":"function","modifiers":[],"name":"resetNonce","nameLocation":"83176:10:14","parameters":{"id":15567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15566,"mutability":"mutable","name":"account","nameLocation":"83195:7:14","nodeType":"VariableDeclaration","scope":15569,"src":"83187:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15565,"name":"address","nodeType":"ElementaryTypeName","src":"83187:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83186:17:14"},"returnParameters":{"id":15568,"nodeType":"ParameterList","parameters":[],"src":"83212:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15577,"nodeType":"FunctionDefinition","src":"83556:70:14","nodes":[],"documentation":{"id":15570,"nodeType":"StructuredDocumentation","src":"83219:332:14","text":"Revert the state of the EVM to a previous snapshot\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted.\n Returns `false` if the snapshot does not exist.\n **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"functionSelector":"44d7f0a4","implemented":false,"kind":"function","modifiers":[],"name":"revertTo","nameLocation":"83565:8:14","parameters":{"id":15573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15572,"mutability":"mutable","name":"snapshotId","nameLocation":"83582:10:14","nodeType":"VariableDeclaration","scope":15577,"src":"83574:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15571,"name":"uint256","nodeType":"ElementaryTypeName","src":"83574:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83573:20:14"},"returnParameters":{"id":15576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15575,"mutability":"mutable","name":"success","nameLocation":"83617:7:14","nodeType":"VariableDeclaration","scope":15577,"src":"83612:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15574,"name":"bool","nodeType":"ElementaryTypeName","src":"83612:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"83611:14:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15585,"nodeType":"FunctionDefinition","src":"83909:79:14","nodes":[],"documentation":{"id":15578,"nodeType":"StructuredDocumentation","src":"83632:272:14","text":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted and deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"03e0aca9","implemented":false,"kind":"function","modifiers":[],"name":"revertToAndDelete","nameLocation":"83918:17:14","parameters":{"id":15581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15580,"mutability":"mutable","name":"snapshotId","nameLocation":"83944:10:14","nodeType":"VariableDeclaration","scope":15585,"src":"83936:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15579,"name":"uint256","nodeType":"ElementaryTypeName","src":"83936:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83935:20:14"},"returnParameters":{"id":15584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15583,"mutability":"mutable","name":"success","nameLocation":"83979:7:14","nodeType":"VariableDeclaration","scope":15585,"src":"83974:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15582,"name":"bool","nodeType":"ElementaryTypeName","src":"83974:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"83973:14:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15591,"nodeType":"FunctionDefinition","src":"84085:52:14","nodes":[],"documentation":{"id":15586,"nodeType":"StructuredDocumentation","src":"83994:86:14","text":"Revokes persistent status from the address, previously added via `makePersistent`."},"functionSelector":"997a0222","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"84094:16:14","parameters":{"id":15589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15588,"mutability":"mutable","name":"account","nameLocation":"84119:7:14","nodeType":"VariableDeclaration","scope":15591,"src":"84111:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15587,"name":"address","nodeType":"ElementaryTypeName","src":"84111:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"84110:17:14"},"returnParameters":{"id":15590,"nodeType":"ParameterList","parameters":[],"src":"84136:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15598,"nodeType":"FunctionDefinition","src":"84184:64:14","nodes":[],"documentation":{"id":15592,"nodeType":"StructuredDocumentation","src":"84143:36:14","text":"See `revokePersistent(address)`."},"functionSelector":"3ce969e6","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"84193:16:14","parameters":{"id":15596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15595,"mutability":"mutable","name":"accounts","nameLocation":"84229:8:14","nodeType":"VariableDeclaration","scope":15598,"src":"84210:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15593,"name":"address","nodeType":"ElementaryTypeName","src":"84210:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15594,"nodeType":"ArrayTypeName","src":"84210:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"84209:29:14"},"returnParameters":{"id":15597,"nodeType":"ParameterList","parameters":[],"src":"84247:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15604,"nodeType":"FunctionDefinition","src":"84283:42:14","nodes":[],"documentation":{"id":15599,"nodeType":"StructuredDocumentation","src":"84254:24:14","text":"Sets `block.height`."},"functionSelector":"1f7b4f30","implemented":false,"kind":"function","modifiers":[],"name":"roll","nameLocation":"84292:4:14","parameters":{"id":15602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15601,"mutability":"mutable","name":"newHeight","nameLocation":"84305:9:14","nodeType":"VariableDeclaration","scope":15604,"src":"84297:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15600,"name":"uint256","nodeType":"ElementaryTypeName","src":"84297:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84296:19:14"},"returnParameters":{"id":15603,"nodeType":"ParameterList","parameters":[],"src":"84324:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15610,"nodeType":"FunctionDefinition","src":"84464:48:14","nodes":[],"documentation":{"id":15605,"nodeType":"StructuredDocumentation","src":"84331:128:14","text":"Updates the currently active fork to given block number\n This is similar to `roll` but for the currently active fork."},"functionSelector":"d9bbf3a1","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"84473:8:14","parameters":{"id":15608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15607,"mutability":"mutable","name":"blockNumber","nameLocation":"84490:11:14","nodeType":"VariableDeclaration","scope":15610,"src":"84482:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15606,"name":"uint256","nodeType":"ElementaryTypeName","src":"84482:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84481:21:14"},"returnParameters":{"id":15609,"nodeType":"ParameterList","parameters":[],"src":"84511:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15616,"nodeType":"FunctionDefinition","src":"84727:43:14","nodes":[],"documentation":{"id":15611,"nodeType":"StructuredDocumentation","src":"84518:204:14","text":"Updates the currently active fork to given transaction. This will `rollFork` with the number\n of the block the transaction was mined in and replays all transaction mined before it in the block."},"functionSelector":"0f29772b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"84736:8:14","parameters":{"id":15614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15613,"mutability":"mutable","name":"txHash","nameLocation":"84753:6:14","nodeType":"VariableDeclaration","scope":15616,"src":"84745:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15612,"name":"bytes32","nodeType":"ElementaryTypeName","src":"84745:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"84744:16:14"},"returnParameters":{"id":15615,"nodeType":"ParameterList","parameters":[],"src":"84769:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15624,"nodeType":"FunctionDefinition","src":"84830:64:14","nodes":[],"documentation":{"id":15617,"nodeType":"StructuredDocumentation","src":"84776:49:14","text":"Updates the given fork to given block number."},"functionSelector":"d74c83a4","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"84839:8:14","parameters":{"id":15622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15619,"mutability":"mutable","name":"forkId","nameLocation":"84856:6:14","nodeType":"VariableDeclaration","scope":15624,"src":"84848:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15618,"name":"uint256","nodeType":"ElementaryTypeName","src":"84848:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15621,"mutability":"mutable","name":"blockNumber","nameLocation":"84872:11:14","nodeType":"VariableDeclaration","scope":15624,"src":"84864:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15620,"name":"uint256","nodeType":"ElementaryTypeName","src":"84864:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84847:37:14"},"returnParameters":{"id":15623,"nodeType":"ParameterList","parameters":[],"src":"84893:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15632,"nodeType":"FunctionDefinition","src":"85030:59:14","nodes":[],"documentation":{"id":15625,"nodeType":"StructuredDocumentation","src":"84900:125:14","text":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"functionSelector":"f2830f7b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"85039:8:14","parameters":{"id":15630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15627,"mutability":"mutable","name":"forkId","nameLocation":"85056:6:14","nodeType":"VariableDeclaration","scope":15632,"src":"85048:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15626,"name":"uint256","nodeType":"ElementaryTypeName","src":"85048:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15629,"mutability":"mutable","name":"txHash","nameLocation":"85072:6:14","nodeType":"VariableDeclaration","scope":15632,"src":"85064:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15628,"name":"bytes32","nodeType":"ElementaryTypeName","src":"85064:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"85047:32:14"},"returnParameters":{"id":15631,"nodeType":"ParameterList","parameters":[],"src":"85088:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15638,"nodeType":"FunctionDefinition","src":"85202:45:14","nodes":[],"documentation":{"id":15633,"nodeType":"StructuredDocumentation","src":"85095:102:14","text":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"functionSelector":"9ebf6827","implemented":false,"kind":"function","modifiers":[],"name":"selectFork","nameLocation":"85211:10:14","parameters":{"id":15636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15635,"mutability":"mutable","name":"forkId","nameLocation":"85230:6:14","nodeType":"VariableDeclaration","scope":15638,"src":"85222:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15634,"name":"uint256","nodeType":"ElementaryTypeName","src":"85222:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85221:16:14"},"returnParameters":{"id":15637,"nodeType":"ParameterList","parameters":[],"src":"85246:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15646,"nodeType":"FunctionDefinition","src":"85345:61:14","nodes":[],"documentation":{"id":15639,"nodeType":"StructuredDocumentation","src":"85253:87:14","text":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"functionSelector":"f8e18b57","implemented":false,"kind":"function","modifiers":[],"name":"setNonce","nameLocation":"85354:8:14","parameters":{"id":15644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15641,"mutability":"mutable","name":"account","nameLocation":"85371:7:14","nodeType":"VariableDeclaration","scope":15646,"src":"85363:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15640,"name":"address","nodeType":"ElementaryTypeName","src":"85363:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15643,"mutability":"mutable","name":"newNonce","nameLocation":"85387:8:14","nodeType":"VariableDeclaration","scope":15646,"src":"85380:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15642,"name":"uint64","nodeType":"ElementaryTypeName","src":"85380:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"85362:34:14"},"returnParameters":{"id":15645,"nodeType":"ParameterList","parameters":[],"src":"85405:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15654,"nodeType":"FunctionDefinition","src":"85472:67:14","nodes":[],"documentation":{"id":15647,"nodeType":"StructuredDocumentation","src":"85412:55:14","text":"Sets the nonce of an account to an arbitrary value."},"functionSelector":"9b67b21c","implemented":false,"kind":"function","modifiers":[],"name":"setNonceUnsafe","nameLocation":"85481:14:14","parameters":{"id":15652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15649,"mutability":"mutable","name":"account","nameLocation":"85504:7:14","nodeType":"VariableDeclaration","scope":15654,"src":"85496:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15648,"name":"address","nodeType":"ElementaryTypeName","src":"85496:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15651,"mutability":"mutable","name":"newNonce","nameLocation":"85520:8:14","nodeType":"VariableDeclaration","scope":15654,"src":"85513:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15650,"name":"uint64","nodeType":"ElementaryTypeName","src":"85513:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"85495:34:14"},"returnParameters":{"id":15653,"nodeType":"ParameterList","parameters":[],"src":"85538:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15660,"nodeType":"FunctionDefinition","src":"85694:58:14","nodes":[],"documentation":{"id":15655,"nodeType":"StructuredDocumentation","src":"85545:144:14","text":"Snapshot the current state of the evm.\n Returns the ID of the snapshot that was created.\n To revert a snapshot use `revertTo`."},"functionSelector":"9711715a","implemented":false,"kind":"function","modifiers":[],"name":"snapshot","nameLocation":"85703:8:14","parameters":{"id":15656,"nodeType":"ParameterList","parameters":[],"src":"85711:2:14"},"returnParameters":{"id":15659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15658,"mutability":"mutable","name":"snapshotId","nameLocation":"85740:10:14","nodeType":"VariableDeclaration","scope":15660,"src":"85732:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15657,"name":"uint256","nodeType":"ElementaryTypeName","src":"85732:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85731:20:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15666,"nodeType":"FunctionDefinition","src":"85859:48:14","nodes":[],"documentation":{"id":15661,"nodeType":"StructuredDocumentation","src":"85758:96:14","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"06447d56","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"85868:10:14","parameters":{"id":15664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15663,"mutability":"mutable","name":"msgSender","nameLocation":"85887:9:14","nodeType":"VariableDeclaration","scope":15666,"src":"85879:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15662,"name":"address","nodeType":"ElementaryTypeName","src":"85879:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"85878:19:14"},"returnParameters":{"id":15665,"nodeType":"ParameterList","parameters":[],"src":"85906:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15674,"nodeType":"FunctionDefinition","src":"86058:66:14","nodes":[],"documentation":{"id":15667,"nodeType":"StructuredDocumentation","src":"85913:140:14","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"45b56078","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"86067:10:14","parameters":{"id":15672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15669,"mutability":"mutable","name":"msgSender","nameLocation":"86086:9:14","nodeType":"VariableDeclaration","scope":15674,"src":"86078:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15668,"name":"address","nodeType":"ElementaryTypeName","src":"86078:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15671,"mutability":"mutable","name":"txOrigin","nameLocation":"86105:8:14","nodeType":"VariableDeclaration","scope":15674,"src":"86097:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15670,"name":"address","nodeType":"ElementaryTypeName","src":"86097:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"86077:37:14"},"returnParameters":{"id":15673,"nodeType":"ParameterList","parameters":[],"src":"86123:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15678,"nodeType":"FunctionDefinition","src":"86199:30:14","nodes":[],"documentation":{"id":15675,"nodeType":"StructuredDocumentation","src":"86130:64:14","text":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"functionSelector":"90c5013b","implemented":false,"kind":"function","modifiers":[],"name":"stopPrank","nameLocation":"86208:9:14","parameters":{"id":15676,"nodeType":"ParameterList","parameters":[],"src":"86217:2:14"},"returnParameters":{"id":15677,"nodeType":"ParameterList","parameters":[],"src":"86228:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15688,"nodeType":"FunctionDefinition","src":"86287:69:14","nodes":[],"documentation":{"id":15679,"nodeType":"StructuredDocumentation","src":"86235:47:14","text":"Stores a value to an address' storage slot."},"functionSelector":"70ca10bb","implemented":false,"kind":"function","modifiers":[],"name":"store","nameLocation":"86296:5:14","parameters":{"id":15686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15681,"mutability":"mutable","name":"target","nameLocation":"86310:6:14","nodeType":"VariableDeclaration","scope":15688,"src":"86302:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15680,"name":"address","nodeType":"ElementaryTypeName","src":"86302:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15683,"mutability":"mutable","name":"slot","nameLocation":"86326:4:14","nodeType":"VariableDeclaration","scope":15688,"src":"86318:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86318:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15685,"mutability":"mutable","name":"value","nameLocation":"86340:5:14","nodeType":"VariableDeclaration","scope":15688,"src":"86332:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15684,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86332:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"86301:45:14"},"returnParameters":{"id":15687,"nodeType":"ParameterList","parameters":[],"src":"86355:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15694,"nodeType":"FunctionDefinition","src":"86459:43:14","nodes":[],"documentation":{"id":15689,"nodeType":"StructuredDocumentation","src":"86362:92:14","text":"Fetches the given transaction from the active fork and executes it on the current state."},"functionSelector":"be646da1","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"86468:8:14","parameters":{"id":15692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15691,"mutability":"mutable","name":"txHash","nameLocation":"86485:6:14","nodeType":"VariableDeclaration","scope":15694,"src":"86477:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15690,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86477:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"86476:16:14"},"returnParameters":{"id":15693,"nodeType":"ParameterList","parameters":[],"src":"86501:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15702,"nodeType":"FunctionDefinition","src":"86604:59:14","nodes":[],"documentation":{"id":15695,"nodeType":"StructuredDocumentation","src":"86508:91:14","text":"Fetches the given transaction from the given fork and executes it on the current state."},"functionSelector":"4d8abc4b","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"86613:8:14","parameters":{"id":15700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15697,"mutability":"mutable","name":"forkId","nameLocation":"86630:6:14","nodeType":"VariableDeclaration","scope":15702,"src":"86622:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15696,"name":"uint256","nodeType":"ElementaryTypeName","src":"86622:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15699,"mutability":"mutable","name":"txHash","nameLocation":"86646:6:14","nodeType":"VariableDeclaration","scope":15702,"src":"86638:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15698,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86638:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"86621:32:14"},"returnParameters":{"id":15701,"nodeType":"ParameterList","parameters":[],"src":"86662:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15708,"nodeType":"FunctionDefinition","src":"86697:50:14","nodes":[],"documentation":{"id":15703,"nodeType":"StructuredDocumentation","src":"86669:23:14","text":"Sets `tx.gasprice`."},"functionSelector":"48f50c0f","implemented":false,"kind":"function","modifiers":[],"name":"txGasPrice","nameLocation":"86706:10:14","parameters":{"id":15706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15705,"mutability":"mutable","name":"newGasPrice","nameLocation":"86725:11:14","nodeType":"VariableDeclaration","scope":15708,"src":"86717:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15704,"name":"uint256","nodeType":"ElementaryTypeName","src":"86717:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86716:21:14"},"returnParameters":{"id":15707,"nodeType":"ParameterList","parameters":[],"src":"86746:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15714,"nodeType":"FunctionDefinition","src":"86785:45:14","nodes":[],"documentation":{"id":15709,"nodeType":"StructuredDocumentation","src":"86753:27:14","text":"Sets `block.timestamp`."},"functionSelector":"e5d6bf02","implemented":false,"kind":"function","modifiers":[],"name":"warp","nameLocation":"86794:4:14","parameters":{"id":15712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15711,"mutability":"mutable","name":"newTimestamp","nameLocation":"86807:12:14","nodeType":"VariableDeclaration","scope":15714,"src":"86799:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15710,"name":"uint256","nodeType":"ElementaryTypeName","src":"86799:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86798:22:14"},"returnParameters":{"id":15713,"nodeType":"ParameterList","parameters":[],"src":"86829:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15726,"nodeType":"FunctionDefinition","src":"86982:105:14","nodes":[],"documentation":{"id":15715,"nodeType":"StructuredDocumentation","src":"86870:107:14","text":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"08e4e116","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"86991:16:14","parameters":{"id":15724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15717,"mutability":"mutable","name":"callee","nameLocation":"87016:6:14","nodeType":"VariableDeclaration","scope":15726,"src":"87008:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15716,"name":"address","nodeType":"ElementaryTypeName","src":"87008:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15719,"mutability":"mutable","name":"msgValue","nameLocation":"87032:8:14","nodeType":"VariableDeclaration","scope":15726,"src":"87024:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15718,"name":"uint256","nodeType":"ElementaryTypeName","src":"87024:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15721,"mutability":"mutable","name":"minGas","nameLocation":"87049:6:14","nodeType":"VariableDeclaration","scope":15726,"src":"87042:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15720,"name":"uint64","nodeType":"ElementaryTypeName","src":"87042:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15723,"mutability":"mutable","name":"data","nameLocation":"87072:4:14","nodeType":"VariableDeclaration","scope":15726,"src":"87057:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15722,"name":"bytes","nodeType":"ElementaryTypeName","src":"87057:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"87007:70:14"},"returnParameters":{"id":15725,"nodeType":"ParameterList","parameters":[],"src":"87086:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15740,"nodeType":"FunctionDefinition","src":"87220:127:14","nodes":[],"documentation":{"id":15727,"nodeType":"StructuredDocumentation","src":"87093:122:14","text":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"e13a1834","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"87229:16:14","parameters":{"id":15738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15729,"mutability":"mutable","name":"callee","nameLocation":"87254:6:14","nodeType":"VariableDeclaration","scope":15740,"src":"87246:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15728,"name":"address","nodeType":"ElementaryTypeName","src":"87246:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15731,"mutability":"mutable","name":"msgValue","nameLocation":"87270:8:14","nodeType":"VariableDeclaration","scope":15740,"src":"87262:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15730,"name":"uint256","nodeType":"ElementaryTypeName","src":"87262:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15733,"mutability":"mutable","name":"minGas","nameLocation":"87287:6:14","nodeType":"VariableDeclaration","scope":15740,"src":"87280:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15732,"name":"uint64","nodeType":"ElementaryTypeName","src":"87280:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15735,"mutability":"mutable","name":"data","nameLocation":"87310:4:14","nodeType":"VariableDeclaration","scope":15740,"src":"87295:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15734,"name":"bytes","nodeType":"ElementaryTypeName","src":"87295:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15737,"mutability":"mutable","name":"count","nameLocation":"87323:5:14","nodeType":"VariableDeclaration","scope":15740,"src":"87316:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15736,"name":"uint64","nodeType":"ElementaryTypeName","src":"87316:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"87245:84:14"},"returnParameters":{"id":15739,"nodeType":"ParameterList","parameters":[],"src":"87346:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15748,"nodeType":"FunctionDefinition","src":"87479:66:14","nodes":[],"documentation":{"id":15741,"nodeType":"StructuredDocumentation","src":"87353:121:14","text":"Expects a call to an address with the specified calldata.\n Calldata can either be a strict or a partial match."},"functionSelector":"bd6af434","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"87488:10:14","parameters":{"id":15746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15743,"mutability":"mutable","name":"callee","nameLocation":"87507:6:14","nodeType":"VariableDeclaration","scope":15748,"src":"87499:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15742,"name":"address","nodeType":"ElementaryTypeName","src":"87499:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15745,"mutability":"mutable","name":"data","nameLocation":"87530:4:14","nodeType":"VariableDeclaration","scope":15748,"src":"87515:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15744,"name":"bytes","nodeType":"ElementaryTypeName","src":"87515:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"87498:37:14"},"returnParameters":{"id":15747,"nodeType":"ParameterList","parameters":[],"src":"87544:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15758,"nodeType":"FunctionDefinition","src":"87632:80:14","nodes":[],"documentation":{"id":15749,"nodeType":"StructuredDocumentation","src":"87551:76:14","text":"Expects given number of calls to an address with the specified calldata."},"functionSelector":"c1adbbff","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"87641:10:14","parameters":{"id":15756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15751,"mutability":"mutable","name":"callee","nameLocation":"87660:6:14","nodeType":"VariableDeclaration","scope":15758,"src":"87652:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15750,"name":"address","nodeType":"ElementaryTypeName","src":"87652:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15753,"mutability":"mutable","name":"data","nameLocation":"87683:4:14","nodeType":"VariableDeclaration","scope":15758,"src":"87668:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15752,"name":"bytes","nodeType":"ElementaryTypeName","src":"87668:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15755,"mutability":"mutable","name":"count","nameLocation":"87696:5:14","nodeType":"VariableDeclaration","scope":15758,"src":"87689:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15754,"name":"uint64","nodeType":"ElementaryTypeName","src":"87689:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"87651:51:14"},"returnParameters":{"id":15757,"nodeType":"ParameterList","parameters":[],"src":"87711:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15768,"nodeType":"FunctionDefinition","src":"87800:84:14","nodes":[],"documentation":{"id":15759,"nodeType":"StructuredDocumentation","src":"87718:77:14","text":"Expects a call to an address with the specified `msg.value` and calldata."},"functionSelector":"f30c7ba3","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"87809:10:14","parameters":{"id":15766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15761,"mutability":"mutable","name":"callee","nameLocation":"87828:6:14","nodeType":"VariableDeclaration","scope":15768,"src":"87820:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15760,"name":"address","nodeType":"ElementaryTypeName","src":"87820:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15763,"mutability":"mutable","name":"msgValue","nameLocation":"87844:8:14","nodeType":"VariableDeclaration","scope":15768,"src":"87836:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15762,"name":"uint256","nodeType":"ElementaryTypeName","src":"87836:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15765,"mutability":"mutable","name":"data","nameLocation":"87869:4:14","nodeType":"VariableDeclaration","scope":15768,"src":"87854:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15764,"name":"bytes","nodeType":"ElementaryTypeName","src":"87854:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"87819:55:14"},"returnParameters":{"id":15767,"nodeType":"ParameterList","parameters":[],"src":"87883:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15780,"nodeType":"FunctionDefinition","src":"87987:98:14","nodes":[],"documentation":{"id":15769,"nodeType":"StructuredDocumentation","src":"87890:92:14","text":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"functionSelector":"a2b1a1ae","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"87996:10:14","parameters":{"id":15778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15771,"mutability":"mutable","name":"callee","nameLocation":"88015:6:14","nodeType":"VariableDeclaration","scope":15780,"src":"88007:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15770,"name":"address","nodeType":"ElementaryTypeName","src":"88007:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15773,"mutability":"mutable","name":"msgValue","nameLocation":"88031:8:14","nodeType":"VariableDeclaration","scope":15780,"src":"88023:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15772,"name":"uint256","nodeType":"ElementaryTypeName","src":"88023:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15775,"mutability":"mutable","name":"data","nameLocation":"88056:4:14","nodeType":"VariableDeclaration","scope":15780,"src":"88041:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15774,"name":"bytes","nodeType":"ElementaryTypeName","src":"88041:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15777,"mutability":"mutable","name":"count","nameLocation":"88069:5:14","nodeType":"VariableDeclaration","scope":15780,"src":"88062:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15776,"name":"uint64","nodeType":"ElementaryTypeName","src":"88062:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"88006:69:14"},"returnParameters":{"id":15779,"nodeType":"ParameterList","parameters":[],"src":"88084:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15792,"nodeType":"FunctionDefinition","src":"88178:96:14","nodes":[],"documentation":{"id":15781,"nodeType":"StructuredDocumentation","src":"88091:82:14","text":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"23361207","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"88187:10:14","parameters":{"id":15790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15783,"mutability":"mutable","name":"callee","nameLocation":"88206:6:14","nodeType":"VariableDeclaration","scope":15792,"src":"88198:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15782,"name":"address","nodeType":"ElementaryTypeName","src":"88198:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15785,"mutability":"mutable","name":"msgValue","nameLocation":"88222:8:14","nodeType":"VariableDeclaration","scope":15792,"src":"88214:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15784,"name":"uint256","nodeType":"ElementaryTypeName","src":"88214:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15787,"mutability":"mutable","name":"gas","nameLocation":"88239:3:14","nodeType":"VariableDeclaration","scope":15792,"src":"88232:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15786,"name":"uint64","nodeType":"ElementaryTypeName","src":"88232:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15789,"mutability":"mutable","name":"data","nameLocation":"88259:4:14","nodeType":"VariableDeclaration","scope":15792,"src":"88244:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15788,"name":"bytes","nodeType":"ElementaryTypeName","src":"88244:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"88197:67:14"},"returnParameters":{"id":15791,"nodeType":"ParameterList","parameters":[],"src":"88273:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15806,"nodeType":"FunctionDefinition","src":"88383:110:14","nodes":[],"documentation":{"id":15793,"nodeType":"StructuredDocumentation","src":"88280:98:14","text":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"65b7b7cc","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"88392:10:14","parameters":{"id":15804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15795,"mutability":"mutable","name":"callee","nameLocation":"88411:6:14","nodeType":"VariableDeclaration","scope":15806,"src":"88403:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15794,"name":"address","nodeType":"ElementaryTypeName","src":"88403:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15797,"mutability":"mutable","name":"msgValue","nameLocation":"88427:8:14","nodeType":"VariableDeclaration","scope":15806,"src":"88419:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15796,"name":"uint256","nodeType":"ElementaryTypeName","src":"88419:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15799,"mutability":"mutable","name":"gas","nameLocation":"88444:3:14","nodeType":"VariableDeclaration","scope":15806,"src":"88437:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15798,"name":"uint64","nodeType":"ElementaryTypeName","src":"88437:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15801,"mutability":"mutable","name":"data","nameLocation":"88464:4:14","nodeType":"VariableDeclaration","scope":15806,"src":"88449:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15800,"name":"bytes","nodeType":"ElementaryTypeName","src":"88449:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15803,"mutability":"mutable","name":"count","nameLocation":"88477:5:14","nodeType":"VariableDeclaration","scope":15806,"src":"88470:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15802,"name":"uint64","nodeType":"ElementaryTypeName","src":"88470:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"88402:81:14"},"returnParameters":{"id":15805,"nodeType":"ParameterList","parameters":[],"src":"88492:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15818,"nodeType":"FunctionDefinition","src":"88832:99:14","nodes":[],"documentation":{"id":15807,"nodeType":"StructuredDocumentation","src":"88499:328:14","text":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"491cc7c2","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"88841:10:14","parameters":{"id":15816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15809,"mutability":"mutable","name":"checkTopic1","nameLocation":"88857:11:14","nodeType":"VariableDeclaration","scope":15818,"src":"88852:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15808,"name":"bool","nodeType":"ElementaryTypeName","src":"88852:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15811,"mutability":"mutable","name":"checkTopic2","nameLocation":"88875:11:14","nodeType":"VariableDeclaration","scope":15818,"src":"88870:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15810,"name":"bool","nodeType":"ElementaryTypeName","src":"88870:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15813,"mutability":"mutable","name":"checkTopic3","nameLocation":"88893:11:14","nodeType":"VariableDeclaration","scope":15818,"src":"88888:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15812,"name":"bool","nodeType":"ElementaryTypeName","src":"88888:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15815,"mutability":"mutable","name":"checkData","nameLocation":"88911:9:14","nodeType":"VariableDeclaration","scope":15818,"src":"88906:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15814,"name":"bool","nodeType":"ElementaryTypeName","src":"88906:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"88851:70:14"},"returnParameters":{"id":15817,"nodeType":"ParameterList","parameters":[],"src":"88930:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15832,"nodeType":"FunctionDefinition","src":"89034:124:14","nodes":[],"documentation":{"id":15819,"nodeType":"StructuredDocumentation","src":"88937:92:14","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"81bad6f3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"89043:10:14","parameters":{"id":15830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15821,"mutability":"mutable","name":"checkTopic1","nameLocation":"89059:11:14","nodeType":"VariableDeclaration","scope":15832,"src":"89054:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15820,"name":"bool","nodeType":"ElementaryTypeName","src":"89054:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15823,"mutability":"mutable","name":"checkTopic2","nameLocation":"89077:11:14","nodeType":"VariableDeclaration","scope":15832,"src":"89072:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15822,"name":"bool","nodeType":"ElementaryTypeName","src":"89072:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15825,"mutability":"mutable","name":"checkTopic3","nameLocation":"89095:11:14","nodeType":"VariableDeclaration","scope":15832,"src":"89090:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15824,"name":"bool","nodeType":"ElementaryTypeName","src":"89090:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15827,"mutability":"mutable","name":"checkData","nameLocation":"89113:9:14","nodeType":"VariableDeclaration","scope":15832,"src":"89108:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15826,"name":"bool","nodeType":"ElementaryTypeName","src":"89108:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15829,"mutability":"mutable","name":"emitter","nameLocation":"89132:7:14","nodeType":"VariableDeclaration","scope":15832,"src":"89124:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15828,"name":"address","nodeType":"ElementaryTypeName","src":"89124:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89053:87:14"},"returnParameters":{"id":15831,"nodeType":"ParameterList","parameters":[],"src":"89157:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15836,"nodeType":"FunctionDefinition","src":"89428:31:14","nodes":[],"documentation":{"id":15833,"nodeType":"StructuredDocumentation","src":"89164:259:14","text":"Prepare an expected log with all topic and data checks enabled.\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"440ed10d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"89437:10:14","parameters":{"id":15834,"nodeType":"ParameterList","parameters":[],"src":"89447:2:14"},"returnParameters":{"id":15835,"nodeType":"ParameterList","parameters":[],"src":"89458:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15842,"nodeType":"FunctionDefinition","src":"89562:46:14","nodes":[],"documentation":{"id":15837,"nodeType":"StructuredDocumentation","src":"89465:92:14","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"86b9620d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"89571:10:14","parameters":{"id":15840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15839,"mutability":"mutable","name":"emitter","nameLocation":"89590:7:14","nodeType":"VariableDeclaration","scope":15842,"src":"89582:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15838,"name":"address","nodeType":"ElementaryTypeName","src":"89582:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89581:17:14"},"returnParameters":{"id":15841,"nodeType":"ParameterList","parameters":[],"src":"89607:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15846,"nodeType":"FunctionDefinition","src":"89674:33:14","nodes":[],"documentation":{"id":15843,"nodeType":"StructuredDocumentation","src":"89614:55:14","text":"Expects an error on next call with any revert data."},"functionSelector":"f4844814","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"89683:12:14","parameters":{"id":15844,"nodeType":"ParameterList","parameters":[],"src":"89695:2:14"},"returnParameters":{"id":15845,"nodeType":"ParameterList","parameters":[],"src":"89706:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15852,"nodeType":"FunctionDefinition","src":"89785:50:14","nodes":[],"documentation":{"id":15847,"nodeType":"StructuredDocumentation","src":"89713:67:14","text":"Expects an error on next call that starts with the revert data."},"functionSelector":"c31eb0e0","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"89794:12:14","parameters":{"id":15850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15849,"mutability":"mutable","name":"revertData","nameLocation":"89814:10:14","nodeType":"VariableDeclaration","scope":15852,"src":"89807:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":15848,"name":"bytes4","nodeType":"ElementaryTypeName","src":"89807:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"89806:19:14"},"returnParameters":{"id":15851,"nodeType":"ParameterList","parameters":[],"src":"89834:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15858,"nodeType":"FunctionDefinition","src":"89917:58:14","nodes":[],"documentation":{"id":15853,"nodeType":"StructuredDocumentation","src":"89841:71:14","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"f28dceb3","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"89926:12:14","parameters":{"id":15856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15855,"mutability":"mutable","name":"revertData","nameLocation":"89954:10:14","nodeType":"VariableDeclaration","scope":15858,"src":"89939:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15854,"name":"bytes","nodeType":"ElementaryTypeName","src":"89939:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"89938:27:14"},"returnParameters":{"id":15857,"nodeType":"ParameterList","parameters":[],"src":"89974:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15866,"nodeType":"FunctionDefinition","src":"90204:59:14","nodes":[],"documentation":{"id":15859,"nodeType":"StructuredDocumentation","src":"89981:218:14","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other\n memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"functionSelector":"6d016688","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemory","nameLocation":"90213:16:14","parameters":{"id":15864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15861,"mutability":"mutable","name":"min","nameLocation":"90237:3:14","nodeType":"VariableDeclaration","scope":15866,"src":"90230:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15860,"name":"uint64","nodeType":"ElementaryTypeName","src":"90230:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15863,"mutability":"mutable","name":"max","nameLocation":"90249:3:14","nodeType":"VariableDeclaration","scope":15866,"src":"90242:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15862,"name":"uint64","nodeType":"ElementaryTypeName","src":"90242:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"90229:24:14"},"returnParameters":{"id":15865,"nodeType":"ParameterList","parameters":[],"src":"90262:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15874,"nodeType":"FunctionDefinition","src":"90505:63:14","nodes":[],"documentation":{"id":15867,"nodeType":"StructuredDocumentation","src":"90269:231:14","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext.\n If any other memory is written to, the test will fail. Can be called multiple times to add more ranges\n to the set."},"functionSelector":"05838bf4","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemoryCall","nameLocation":"90514:20:14","parameters":{"id":15872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15869,"mutability":"mutable","name":"min","nameLocation":"90542:3:14","nodeType":"VariableDeclaration","scope":15874,"src":"90535:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15868,"name":"uint64","nodeType":"ElementaryTypeName","src":"90535:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15871,"mutability":"mutable","name":"max","nameLocation":"90554:3:14","nodeType":"VariableDeclaration","scope":15874,"src":"90547:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15870,"name":"uint64","nodeType":"ElementaryTypeName","src":"90547:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"90534:24:14"},"returnParameters":{"id":15873,"nodeType":"ParameterList","parameters":[],"src":"90567:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15880,"nodeType":"FunctionDefinition","src":"90646:38:14","nodes":[],"documentation":{"id":15875,"nodeType":"StructuredDocumentation","src":"90574:67:14","text":"Marks a test as skipped. Must be called at the top of the test."},"functionSelector":"dd82d13e","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"90655:4:14","parameters":{"id":15878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15877,"mutability":"mutable","name":"skipTest","nameLocation":"90665:8:14","nodeType":"VariableDeclaration","scope":15880,"src":"90660:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15876,"name":"bool","nodeType":"ElementaryTypeName","src":"90660:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"90659:15:14"},"returnParameters":{"id":15879,"nodeType":"ParameterList","parameters":[],"src":"90683:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15884,"nodeType":"FunctionDefinition","src":"90759:41:14","nodes":[],"documentation":{"id":15881,"nodeType":"StructuredDocumentation","src":"90690:64:14","text":"Stops all safe memory expectation in the current subcontext."},"functionSelector":"0956441b","implemented":false,"kind":"function","modifiers":[],"name":"stopExpectSafeMemory","nameLocation":"90768:20:14","parameters":{"id":15882,"nodeType":"ParameterList","parameters":[],"src":"90788:2:14"},"returnParameters":{"id":15883,"nodeType":"ParameterList","parameters":[],"src":"90799:0:14"},"scope":15885,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":15286,"name":"VmSafe","nameLocations":["76432:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":15284,"src":"76432:6:14"},"id":15287,"nodeType":"InheritanceSpecifier","src":"76432:6:14"}],"canonicalName":"Vm","contractDependencies":[],"contractKind":"interface","documentation":{"id":15285,"nodeType":"StructuredDocumentation","src":"76245:171:14","text":"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used\n in tests, but it is not recommended to use these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[15885,15284],"name":"Vm","nameLocation":"76426:2:14","scope":15886,"usedErrors":[],"usedEvents":[]}],"license":"MIT OR Apache-2.0"},"id":14}